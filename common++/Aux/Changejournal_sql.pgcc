// $Id: Changejournal_sql.pgcc,v 1.18 2006/06/20 13:35:27 christof Exp $
/*  libcommonc++: ManuProC's main OO library
 *  Copyright (C) 1998-2000 Adolf Petig GmbH & Co. KG, written by Jacek Jakubowski
 *  Copyright (C) 2006 Christof Petig
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 */

#include"Changejournal.h"
#include<Misc/Transaction.h>
#include<Auftrag/AufEintrag.h>

const pps_ChJournalEntry pps_ChJournalEntry::newChange(
 		const AufEintragBase &aufe, const ArtikelBase &art,
 		AuftragBase::mengen_t _newval, AuftragBase::mengen_t _delta, ChJType _type,
 		CID change) throw(SQLerror)
{
 if(aufe.Id() < AufEintrag::handplan_id)  return pps_ChJournalEntry();

 Transaction tr;
 if(!change)
   Query("select nextval('prod_changejournal_chid_seq')") >> change;

 Query("insert into prod_changejournal "
       "(insid,auftragid,auftragzeile, chid, artikelid,new_val,"
 		"delta,chtype)"
       "values (?,?,?, ?, ?,?,?,?)")
    << aufe << change << art << _newval << _delta << char(_type);

 pps_ChJournalEntry retval(aufe.Instanz(),change);
 tr.commit();
 return retval;
}

const pps_ChJournalEntry pps_ChJournalEntry::newChange(
 		const AufEintragBase &aufe, const ArtikelBase &art,
 		const ManuProC::Datum &_newdat, int _deltatage, ChJType _type,
 		CID change) throw(SQLerror)
{
 if(aufe.Id() < AufEintrag::handplan_id)  return pps_ChJournalEntry();

 Transaction tr;
 if(!change)
   Query("select nextval('prod_changejournal_chid_seq')") >> change;

 Query("insert into prod_changejournal "
       "(insid,auftragid,auftragzeile, chid, artikelid,new_dat,"
 		"delta,chtype)"
       "values (?,?,?, ?, ?,?,?,?)")
    << aufe << change << art << _newdat << _deltatage << char(_type);

 pps_ChJournalEntry retval(aufe.Instanz(),change);
 tr.commit();
 return retval;
}

pps_ChJournalEntry::pps_ChJournalEntry(cH_ppsInstanz instid, CID change) throw(SQLerror)
  : pps_ChJournalEntryBase(instid,change)
{
 int status2, type2;
 Query("select datum,status,artikelid, insid,auftragid,auftragzeile, "
 		"new_val,new_dat,coalesce(delta,0),chtype "
 	"from prod_changejournal "
 	"where (insid,chid)=(?,?)")
      << instid->Id() << change
      >> datum >> status2 >> artikel >> auftragentry
      >> Query::Row::MapNull(newval) >> newdate 
      >> Query::Row::MapNull(delta) >> type2;
  status=ChJStatVal(status2);
  type=ChJType(type2);
}
