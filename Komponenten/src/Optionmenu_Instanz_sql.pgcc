#include "Optionmenu_Instanz.hh"
#include <Aux/Transaction.h>
#include <Aux/SQLerror.h>
#include <Gtk_OStream.h>
exec sql include sqlca;
#include <SelectMatching.h>

Optionmenu_Instanz::Optionmenu_Instanz()
{ fuelle_menu();
  get_menu()->deactivate.connect(activate.slot());
//  show(); // sollte übergeordnetes Widget machen !!!
}

cH_ppsInstanz Optionmenu_Instanz::get_value() const
{  return static_cast<ppsInstanz*>(get_menu()->get_active()->get_user_data());
}

void Optionmenu_Instanz::fuelle_menu()
{
  exec sql begin declare section;
   int db_id;   
  exec sql end declare section;

  exec sql declare in_ein cursor for 
   select insid from prod_instanz order by insid;
  Transaction tr;
  exec sql open in_ein;
  SQLerror::test(__FILELINE__);
  
  Gtk::OStream os(this);
  while(true)
   {
    exec sql fetch in_ein into :db_id;
    SQLerror::test(__FILELINE__,100);
    if (sqlca.sqlcode) break; 
    cH_ppsInstanz i=cH_ppsInstanz(ppsInstanz::ID(db_id));
    os << i->Name();
    os.flush(i->ref(), &HandleContent::unref);      
   }
 exec sql close in_ein;
 tr.close();
}

static bool operator==(gpointer data,const cH_ppsInstanz &i)
{  return *(static_cast<ppsInstanz*>(data))==*i;
}

void Optionmenu_Instanz::set_value(const cH_ppsInstanz &i)
{  Gtk::Menu_Helpers::SelectMatching(*this,i);
}
