// generated 2003/2/26 13:59:46 CET by christof@puck.petig-baender.de
// using glademm V1.1.3e_cvs
//
// DO NOT EDIT THIS FILE ! It was created using
// glade-- --baseclass mvc.glade
// for gtk 2.2.1 and gtkmm 2.2.0
//
// Please modify the corresponding derived classes in ././window1.cc

#include "config.h"
#include "window1_glade.hh"
#include <gdk/gdkkeysyms.h>
#include <gtkmm/accelgroup.h>
#include <gtkmm/button.h>
#include <gtkmm/box.h>

window1_glade::window1_glade(
) : Gtk::Window(Gtk::WINDOW_TOPLEVEL)
{  
   
   Gtk::Window *window1 = this;
   _data = new GlademmData(get_accel_group());
   intwidget = new class int_SpinButton(myint,0,100);
   stringwidget = new class string_Entry(mystring);
   boolwidget = new class bool_CheckButton(mybool,"an/aus");
   custom1 = new class bool_CheckButton(mybool2,"(in)aktiv");
   
   Gtk::Button *button1 = Gtk::manage(new class Gtk::Button("loeschen"));
   Gtk::Button *button2 = Gtk::manage(new class Gtk::Button("randomize"));
   Gtk::VBox *vbox1 = Gtk::manage(new class Gtk::VBox(false, 0));
   button1->set_flags(Gtk::CAN_FOCUS);
   button1->set_relief(Gtk::RELIEF_NORMAL);
   button2->set_flags(Gtk::CAN_FOCUS);
   button2->set_relief(Gtk::RELIEF_NORMAL);
   vbox1->pack_start(*intwidget);
   vbox1->pack_start(*stringwidget);
   vbox1->pack_start(*boolwidget);
   vbox1->pack_start(*custom1);
   vbox1->pack_start(*button1, Gtk::PACK_SHRINK, 0);
   vbox1->pack_start(*button2, Gtk::PACK_SHRINK, 0);
   window1->set_title("window1");
   window1->set_modal(false);
   window1->property_window_position().set_value(Gtk::WIN_POS_NONE);
   window1->set_resizable(true);
   window1->add(*vbox1);
   intwidget->show();
   stringwidget->show();
   boolwidget->show();
   custom1->show();
   button1->show();
   button2->show();
   vbox1->show();
   window1->show();
   intwidget->signal_activate().connect(SigC::slot(*stringwidget, &Gtk::Widget::grab_focus), true);
   stringwidget->signal_activate().connect(SigC::slot(*intwidget, &Gtk::Widget::grab_focus), true);
   button1->signal_clicked().connect(SigC::slot(*this, &window1_glade::loeschen));
   button2->signal_clicked().connect(SigC::slot(*this, &window1_glade::randomize));
}

window1_glade::~window1_glade()
{  delete intwidget;
   delete stringwidget;
   delete boolwidget;
   delete custom1;
   delete _data;
}
