#include "auftrag_main.hh"
#include <Misc/SQLerror.h>
#include <Misc/Transaction.h>
#include <Misc/Query.h>

#if 1
// Sollte das nicht eigentlich in AuftragBase sein?
int auftrag_main::get_next_entry_znr(AuftragBase& auftrag)
{
 return (Query("SELECT max(zeilennr) from auftragentry "
		"where (instanz,auftragid)=(?,?)")
	<< auftrag
	).FetchOneMap<int>(0)+1;
}
#endif

#if 0
void auftrag_main::on_searchcombo_auftragid_search(int *cont, GtkSCContext newsearch)
throw(SQLerror)
{
 exec sql begin declare section;
 int AUFID;
 char AUFIDCHR[10];
 char *PAT;
 int KUNDE;
 int INSTANZ=instanz->Id();
 exec sql end declare section;
 if(instanz->Lieferschein()) KUNDE=kunden_lieferant->get_value() ;
 else KUNDE=Kunde::default_id;
 static Transaction tr("",false);
  
 switch(newsearch)
   {
    case GTK_SEARCH_OPEN :
      {
       std::string pat = searchcombo_auftragid->get_text() + "%";
       PAT = (char*)pat.c_str();
       
       tr.open();
                   
       exec sql declare AUFNR_CURSOR cursor for
       		select auftragid, ltrim(to_char(auftragid,'000000'))
       		from auftrag where
       		ltrim(to_char(auftragid,'000000')) like :PAT
                and (:KUNDE<1 or kundennr=:KUNDE)
                and instanz = :INSTANZ
		and auftragid not in (0,1,2)
       		order by auftragid;
       	
       exec sql open AUFNR_CURSOR;
       SQLerror::test(__FILELINE__":on_aufnrscombo_search: open cursor");
      } 							
           
  case GTK_SEARCH_FETCH :
       {
        exec sql fetch AUFNR_CURSOR into :AUFID, :AUFIDCHR;
	SQLerror::test(__FILELINE__":on_aufnrscombo_search: "
			" fetch","AUFNR_CURSOR",100);
			
	if(sqlca.sqlcode==100){*cont=false; break; }
	
	searchcombo_auftragid->add_item(AUFIDCHR,AUFID);
	*cont=true;
        break;
       }
 
  case GTK_SEARCH_CLOSE :
       {
	exec sql close AUFNR_CURSOR;
	tr.close();
	break;
       }
  }
}

#endif
