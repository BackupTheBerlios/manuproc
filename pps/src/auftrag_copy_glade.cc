// generated 2006/5/22 16:46:05 CEST by christof@vesta.petig-baender.de
// using glademm V2.12.1
//
// DO NOT EDIT THIS FILE ! It was created using
// glade-- auftrag.glade
// for gtk 2.8.17 and gtkmm 2.8.5
//
// Please modify the corresponding derived classes in ./src/auftrag_copy.cc


#if defined __GNUC__ && __GNUC__ < 3
#error This program will crash if compiled with g++ 2.x
// see the dynamic_cast bug in the gtkmm FAQ
#endif //
#include "config.h"
/*
 * Standard gettext macros.
 */
#ifdef ENABLE_NLS
#  include <libintl.h>
#  undef _
#  define _(String) dgettext (GETTEXT_PACKAGE, String)
#  ifdef gettext_noop
#    define N_(String) gettext_noop (String)
#  else
#    define N_(String) (String)
#  endif
#endif
#include <gtkmmconfig.h>
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
#include <sigc++/compatibility.h>
#include <sigc++/bind.h>
#define GMM_GTKMM_22_24(a,b) b
#else //gtkmm 2.2
#define GMM_GTKMM_22_24(a,b) a
#endif //
#include "auftrag_copy_glade.hh"
#include <gdk/gdkkeysyms.h>
#include <gtkmm/accelgroup.h>
#include <gtkmm/button.h>
#include <gtkmm/buttonbox.h>
#include <gtkmm/label.h>
#include <gtkmm/frame.h>
#include <gtkmm/table.h>
#include <gtkmm/adjustment.h>
#include <gtkmm/box.h>
#ifndef ENABLE_NLS
#  define textdomain(String) (String)
#  define gettext(String) (String)
#  define dgettext(Domain,Message) (Message)
#  define dcgettext(Domain,Message,Type) (Message)
#  define bindtextdomain(Domain,Directory) (Domain)
#  define _(String) (String)
#  define N_(String) (String)
#endif


auftrag_copy_glade::auftrag_copy_glade(
)
{  auftrag_copy = this;
   gmm_data = new GlademmData(get_accel_group());
   
   Gtk::Button *copy_cancel = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-cancel")));
   Gtk::Button *copy_ok = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-ok")));
   alt_aufnr = Gtk::manage(new class Gtk::Entry());
   
   Gtk::Label *label151 = Gtk::manage(new class Gtk::Label(_("Nummer")));
   Gtk::Frame *frame37 = Gtk::manage(new class Gtk::Frame());
   alt_aufdatum = new class datewin();
   
   Gtk::Label *label152 = Gtk::manage(new class Gtk::Label(_("vom")));
   Gtk::Frame *frame38 = Gtk::manage(new class Gtk::Frame());
   alt_aufkunde = new class KundenBox2();
   
   Gtk::Label *label153 = Gtk::manage(new class Gtk::Label(_("Kunde")));
   Gtk::Frame *frame39 = Gtk::manage(new class Gtk::Frame());
   Gtk::Table *table25 = Gtk::manage(new class Gtk::Table(2, 2, false));
   Gtk::Label *label150 = Gtk::manage(new class Gtk::Label(_("Ursprungsauftrag")));
   Gtk::Frame *frame35 = Gtk::manage(new class Gtk::Frame());
   neu_aufkunde = new class KundenBox2();
   
   Gtk::Label *label155 = Gtk::manage(new class Gtk::Label(_("Kunde")));
   Gtk::Frame *frame_neukunde = Gtk::manage(new class Gtk::Frame());
   neu_lieferdatum = new class datewin();
   
   Gtk::Label *label156 = Gtk::manage(new class Gtk::Label(_("Lieferdatum")));
   Gtk::Frame *frame43 = Gtk::manage(new class Gtk::Frame());
   neu_youraufnr = Gtk::manage(new class Gtk::Entry());
   
   Gtk::Label *label157 = Gtk::manage(new class Gtk::Label(_("Kunden Auftr.-Nr.")));
   Gtk::Frame *frame45 = Gtk::manage(new class Gtk::Frame());
   Gtk::Adjustment *neu_stueck_adj = Gtk::manage(new class Gtk::Adjustment(0, 0, 10000, 1, 10, 10));
   neu_stueck = Gtk::manage(new class Gtk::SpinButton(*neu_stueck_adj, 1, 0));
   
   Gtk::Label *label158 = Gtk::manage(new class Gtk::Label(_("Stück")));
   frame44 = Gtk::manage(new class Gtk::Frame());
   liefdate_uebernehmen = Gtk::manage(new class Gtk::CheckButton(_("überschreiben")));
   stueck_uebernehmen = Gtk::manage(new class Gtk::CheckButton(_("überschreiben")));
   
   Gtk::Label *label136 = Gtk::manage(new class Gtk::Label(_("stornierte Zeilen nicht kopieren")));
   copy_storno = Gtk::manage(new class Gtk::CheckButton(""));
   
   Gtk::Table *table26 = Gtk::manage(new class Gtk::Table(2, 2, false));
   Gtk::Label *label154 = Gtk::manage(new class Gtk::Label(_("neuer Auftrag")));
   Gtk::Frame *frame36 = Gtk::manage(new class Gtk::Frame());
   Gtk::VBox *vbox18 = Gtk::manage(new class Gtk::VBox(false, 0));
   copy_cancel->set_flags(Gtk::CAN_FOCUS);
   copy_cancel->set_flags(Gtk::CAN_DEFAULT);
   copy_cancel->set_relief(Gtk::RELIEF_NORMAL);
   copy_ok->set_flags(Gtk::CAN_FOCUS);
   copy_ok->set_flags(Gtk::CAN_DEFAULT);
   copy_ok->set_relief(Gtk::RELIEF_NORMAL);
   auftrag_copy->get_action_area()->property_layout_style().set_value(Gtk::BUTTONBOX_SPREAD);
   alt_aufnr->set_sensitive(false);
   alt_aufnr->set_flags(Gtk::CAN_FOCUS);
   alt_aufnr->set_visibility(true);
   alt_aufnr->set_editable(false);
   alt_aufnr->set_max_length(0);
   alt_aufnr->set_text("");
   alt_aufnr->set_has_frame(true);
   alt_aufnr->set_activates_default(false);
   label151->set_alignment(0.5,0.5);
   label151->set_padding(0,0);
   label151->set_justify(Gtk::JUSTIFY_LEFT);
   label151->set_line_wrap(false);
   label151->set_use_markup(false);
   label151->set_selectable(false);
   frame37->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame37->set_label_align(0,0.5);
   frame37->add(*alt_aufnr);
   frame37->set_label_widget(*label151);
   alt_aufdatum->set_sensitive(false);
   label152->set_alignment(0.5,0.5);
   label152->set_padding(0,0);
   label152->set_justify(Gtk::JUSTIFY_LEFT);
   label152->set_line_wrap(false);
   label152->set_use_markup(false);
   label152->set_selectable(false);
   frame38->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame38->set_label_align(0,0.5);
   frame38->add(*alt_aufdatum);
   frame38->set_label_widget(*label152);
   alt_aufkunde->set_sensitive(false);
   label153->set_alignment(0.5,0.5);
   label153->set_padding(0,0);
   label153->set_justify(Gtk::JUSTIFY_LEFT);
   label153->set_line_wrap(false);
   label153->set_use_markup(false);
   label153->set_selectable(false);
   frame39->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame39->set_label_align(0,0.5);
   frame39->add(*alt_aufkunde);
   frame39->set_label_widget(*label153);
   table25->set_row_spacings(0);
   table25->set_col_spacings(0);
   table25->attach(*frame37, 0, 1, 0, 1, Gtk::EXPAND|Gtk::FILL, Gtk::EXPAND|Gtk::FILL, 0, 0);
   table25->attach(*frame38, 1, 2, 0, 1, Gtk::EXPAND|Gtk::FILL, Gtk::FILL, 0, 0);
   table25->attach(*frame39, 0, 2, 1, 2, Gtk::FILL, Gtk::EXPAND|Gtk::FILL, 0, 0);
   label150->set_alignment(0.5,0.5);
   label150->set_padding(0,0);
   label150->set_justify(Gtk::JUSTIFY_LEFT);
   label150->set_line_wrap(false);
   label150->set_use_markup(false);
   label150->set_selectable(false);
   frame35->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame35->set_label_align(0,0.5);
   frame35->add(*table25);
   frame35->set_label_widget(*label150);
   label155->set_alignment(0.5,0.5);
   label155->set_padding(0,0);
   label155->set_justify(Gtk::JUSTIFY_LEFT);
   label155->set_line_wrap(false);
   label155->set_use_markup(false);
   label155->set_selectable(false);
   frame_neukunde->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame_neukunde->set_label_align(0,0.5);
   frame_neukunde->add(*neu_aufkunde);
   frame_neukunde->set_label_widget(*label155);
   neu_lieferdatum->set_sensitive(false);
   label156->set_alignment(0.5,0.5);
   label156->set_padding(0,0);
   label156->set_justify(Gtk::JUSTIFY_LEFT);
   label156->set_line_wrap(false);
   label156->set_use_markup(false);
   label156->set_selectable(false);
   frame43->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame43->set_label_align(0,0.5);
   frame43->add(*neu_lieferdatum);
   frame43->set_label_widget(*label156);
   neu_youraufnr->set_flags(Gtk::CAN_FOCUS);
   neu_youraufnr->set_visibility(true);
   neu_youraufnr->set_editable(true);
   neu_youraufnr->set_max_length(0);
   neu_youraufnr->set_text("");
   neu_youraufnr->set_has_frame(true);
   neu_youraufnr->set_activates_default(false);
   label157->set_alignment(0.5,0.5);
   label157->set_padding(0,0);
   label157->set_justify(Gtk::JUSTIFY_LEFT);
   label157->set_line_wrap(false);
   label157->set_use_markup(false);
   label157->set_selectable(false);
   frame45->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame45->set_label_align(0,0.5);
   frame45->add(*neu_youraufnr);
   frame45->set_label_widget(*label157);
   neu_stueck->set_sensitive(false);
   neu_stueck->set_flags(Gtk::CAN_FOCUS);
   neu_stueck->set_update_policy(Gtk::UPDATE_ALWAYS);
   neu_stueck->set_numeric(false);
   neu_stueck->set_digits(0);
   neu_stueck->set_wrap(false);
   label158->set_alignment(0.5,0.5);
   label158->set_padding(0,0);
   label158->set_justify(Gtk::JUSTIFY_LEFT);
   label158->set_line_wrap(false);
   label158->set_use_markup(false);
   label158->set_selectable(false);
   frame44->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame44->set_label_align(0,0.5);
   frame44->add(*neu_stueck);
   frame44->set_label_widget(*label158);
   liefdate_uebernehmen->set_flags(Gtk::CAN_FOCUS);
   _tooltips.set_tip(*liefdate_uebernehmen, _("Vom Ursprungsauftrag übernehmen oder überscheiben"), "");
   liefdate_uebernehmen->set_relief(Gtk::RELIEF_NORMAL);
   liefdate_uebernehmen->set_mode(true);
   liefdate_uebernehmen->set_active(false);
   stueck_uebernehmen->set_flags(Gtk::CAN_FOCUS);
   _tooltips.set_tip(*stueck_uebernehmen, _("Vom Urspringsauftrag übernehmen oder überschreiben"), "");
   stueck_uebernehmen->set_relief(Gtk::RELIEF_NORMAL);
   stueck_uebernehmen->set_mode(true);
   stueck_uebernehmen->set_active(false);
   label136->set_alignment(0,0.5);
   label136->set_padding(0,0);
   label136->set_justify(Gtk::JUSTIFY_CENTER);
   label136->set_line_wrap(false);
   label136->set_use_markup(false);
   label136->set_selectable(false);
   copy_storno->set_flags(Gtk::CAN_FOCUS);
   copy_storno->set_relief(Gtk::RELIEF_NORMAL);
   copy_storno->set_mode(true);
   copy_storno->set_active(true);
   table26->set_row_spacings(0);
   table26->set_col_spacings(0);
   table26->attach(*frame_neukunde, 0, 2, 0, 1, Gtk::EXPAND|Gtk::FILL, Gtk::EXPAND|Gtk::FILL, 0, 0);
   table26->attach(*frame43, 0, 1, 2, 3, Gtk::FILL, Gtk::EXPAND|Gtk::FILL, 0, 0);
   table26->attach(*frame45, 0, 2, 1, 2, Gtk::FILL, Gtk::EXPAND|Gtk::FILL, 0, 0);
   table26->attach(*frame44, 0, 1, 3, 4, Gtk::FILL, Gtk::FILL, 0, 0);
   table26->attach(*liefdate_uebernehmen, 1, 2, 2, 3, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table26->attach(*stueck_uebernehmen, 1, 2, 3, 4, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table26->attach(*label136, 0, 1, 4, 5, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table26->attach(*copy_storno, 1, 2, 4, 5, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   label154->set_alignment(0.5,0.5);
   label154->set_padding(0,0);
   label154->set_justify(Gtk::JUSTIFY_LEFT);
   label154->set_line_wrap(false);
   label154->set_use_markup(false);
   label154->set_selectable(false);
   frame36->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame36->set_label_align(0,0.5);
   frame36->add(*table26);
   frame36->set_label_widget(*label154);
   vbox18->pack_start(*frame35);
   vbox18->pack_start(*frame36);
   auftrag_copy->get_vbox()->set_homogeneous(false);
   auftrag_copy->get_vbox()->set_spacing(8);
   auftrag_copy->get_vbox()->pack_start(*vbox18);
   auftrag_copy->set_title(_("Auftrag kopieren"));
   auftrag_copy->set_modal(true);
   auftrag_copy->property_window_position().set_value(Gtk::WIN_POS_NONE);
   auftrag_copy->set_resizable(true);
   auftrag_copy->property_destroy_with_parent().set_value(false);
   auftrag_copy->set_has_separator(true);
   auftrag_copy->add_action_widget(*copy_cancel, -6);
   auftrag_copy->add_action_widget(*copy_ok, -5);
   copy_cancel->show();
   copy_ok->show();
   alt_aufnr->show();
   label151->show();
   frame37->show();
   alt_aufdatum->show();
   label152->show();
   frame38->show();
   alt_aufkunde->show();
   label153->show();
   frame39->show();
   table25->show();
   label150->show();
   frame35->show();
   neu_aufkunde->show();
   label155->show();
   frame_neukunde->show();
   neu_lieferdatum->show();
   label156->show();
   frame43->show();
   neu_youraufnr->show();
   label157->show();
   frame45->show();
   neu_stueck->show();
   label158->show();
   frame44->show();
   liefdate_uebernehmen->show();
   stueck_uebernehmen->show();
   label136->show();
   copy_storno->show();
   table26->show();
   label154->show();
   frame36->show();
   vbox18->show();
   auftrag_copy->show();
   copy_cancel->signal_clicked().connect(SigC::slot(*this, &auftrag_copy_glade::on_copy_cancel_clicked), false);
   copy_ok->signal_clicked().connect(SigC::slot(*this, &auftrag_copy_glade::on_copy_ok_clicked), false);
   liefdate_uebernehmen->signal_toggled().connect(SigC::slot(*this, &auftrag_copy_glade::on_liefdate_uebernehmen_toggled), false);
   stueck_uebernehmen->signal_toggled().connect(SigC::slot(*this, &auftrag_copy_glade::on_stueck_uebernehmen_toggled), false);
}

auftrag_copy_glade::~auftrag_copy_glade()
{  delete alt_aufdatum;
   delete alt_aufkunde;
   delete neu_aufkunde;
   delete neu_lieferdatum;
   delete gmm_data;
}
