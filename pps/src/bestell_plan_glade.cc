// generated 2006/6/23 12:46:20 CEST by jacek@jaceksdell.(none)
// using glademm V2.12.1
//
// DO NOT EDIT THIS FILE ! It was created using
// glade-- /home/jacek/Monotone/pps/auftrag.glade
// for gtk 2.8.6 and gtkmm 2.8.0
//
// Please modify the corresponding derived classes in ./src/bestell_plan.cc


#if defined __GNUC__ && __GNUC__ < 3
#error This program will crash if compiled with g++ 2.x
// see the dynamic_cast bug in the gtkmm FAQ
#endif //
#include "config.h"
/*
 * Standard gettext macros.
 */
#ifdef ENABLE_NLS
#  include <libintl.h>
#  undef _
#  define _(String) dgettext (GETTEXT_PACKAGE, String)
#  ifdef gettext_noop
#    define N_(String) gettext_noop (String)
#  else
#    define N_(String) (String)
#  endif
#endif
#include <gtkmmconfig.h>
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
#include <sigc++/compatibility.h>
#include <sigc++/bind.h>
#define GMM_GTKMM_22_24(a,b) b
#else //gtkmm 2.2
#define GMM_GTKMM_22_24(a,b) a
#endif //
#include "bestell_plan_glade.hh"
#include <gdk/gdkkeysyms.h>
#include <gtkmm/accelgroup.h>
#include <gtkmm/image.h>
#include <gtkmm/stockid.h>
#include <gtkmm/toolbar.h>
#include <gtkmm/label.h>
#include <gtkmm/frame.h>
#include <gtkmm/alignment.h>
#include <gtkmm/table.h>
#include <gtkmm/menuitem.h>
#include <gtkmm/menu.h>
#include <gtkmm/scrolledwindow.h>
#include <gtkmm/box.h>
#ifndef ENABLE_NLS
#  define textdomain(String) (String)
#  define gettext(String) (String)
#  define dgettext(Domain,Message) (Message)
#  define dcgettext(Domain,Message,Type) (Message)
#  define bindtextdomain(Domain,Directory) (Domain)
#  define _(String) (String)
#  define N_(String) (String)
#endif


bestell_plan_glade::bestell_plan_glade(
) : Gtk::Window(Gtk::WINDOW_TOPLEVEL)
{  
   
   Gtk::Window *bestell_plan = this;
   gmm_data = new GlademmData(get_accel_group());
   
   Gtk::Image *bp_quit_img = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-close"), Gtk::IconSize(3)));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   bp_quit = Gtk::manage(new class Gtk::ToolButton(*bp_quit_img, _("Schließen")));
#endif //
   
   Gtk::Image *prev_artikel_img = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-go-back"), Gtk::IconSize(3)));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   prev_artikel = Gtk::manage(new class Gtk::ToolButton(*prev_artikel_img, _("vorh. Artikel")));
#endif //
   
   Gtk::Image *next_artikel_img = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-go-forward"), Gtk::IconSize(3)));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   next_artikel = Gtk::manage(new class Gtk::ToolButton(*next_artikel_img, _("nächst. Artikel")));
#endif //
   
   Gtk::Toolbar *toolbar18 = Gtk::manage(new class Gtk::Toolbar());
   plan_artikel = new class ArtikelBox(1);
   
   Gtk::Label *label167 = Gtk::manage(new class Gtk::Label(_("Artikel")));
   Gtk::Frame *frame55 = Gtk::manage(new class Gtk::Frame());
   Gtk::Label *label121 = Gtk::manage(new class Gtk::Label(_("Verfügbar")));
   Gtk::Label *label122 = Gtk::manage(new class Gtk::Label(_("mind.Lagerbestand")));
   Gtk::Label *label129 = Gtk::manage(new class Gtk::Label(_("Bestellt (Kunden)")));
   bp_offauftraege = Gtk::manage(new class Gtk::Entry());
   bp_verfuegbar = Gtk::manage(new class Gtk::Entry());
   bp_bestellt = Gtk::manage(new class Gtk::Entry());
   bp_mindbestand = Gtk::manage(new class Gtk::Entry());
   
   Gtk::Label *label123 = Gtk::manage(new class Gtk::Label(_("Bestellt beim Lief.")));
   Gtk::Label *label120 = Gtk::manage(new class Gtk::Label(_("Lagerbestand")));
   bp_lagerbestand = Gtk::manage(new class Gtk::Entry());
   bp_lagerbestand2 = Gtk::manage(new class Gtk::Entry());
   lager_name2 = Gtk::manage(new class Gtk::Label(_("Lager 2")));
   lager_name1 = Gtk::manage(new class Gtk::Label(_("Lager 1")));
   
   Gtk::Label *label135 = Gtk::manage(new class Gtk::Label(_("zur Info")));
   bp_commited = Gtk::manage(new class Gtk::Entry());
   
   Gtk::Alignment *alignment1 = Gtk::manage(new class Gtk::Alignment(0.5, 0.5, 1, 1));
   commited_label = Gtk::manage(new class Gtk::Label(_("bestätigt (ab <b>...</b>)")));
   
   Gtk::Frame *frame58 = Gtk::manage(new class Gtk::Frame());
   bp_uncommited = Gtk::manage(new class Gtk::Entry());
   
   Gtk::Alignment *alignment2 = Gtk::manage(new class Gtk::Alignment(0.5, 0.5, 1, 1));
   Gtk::Label *label172 = Gtk::manage(new class Gtk::Label(_("unbestätigt")));
   Gtk::Frame *frame59 = Gtk::manage(new class Gtk::Frame());
   Gtk::Label *label134 = Gtk::manage(new class Gtk::Label(_("Rohware Bestellt beim Lief.")));
   bp_rohbestellt = Gtk::manage(new class Gtk::Entry());
   
   Gtk::Table *table29 = Gtk::manage(new class Gtk::Table(2, 2, false));
   Gtk::Label *label131 = Gtk::manage(new class Gtk::Label(_("Vergl. Zeitr. 1 kumulieren nach ")));
   abverkauf_kumul = Gtk::manage(new class Gtk::OptionMenu());
   
   Gtk::Toolbar *toolbar20 = Gtk::manage(new class Gtk::Toolbar());
   Gtk::Label *label133 = Gtk::manage(new class Gtk::Label(_("Vergl. Zeitr. 2 kumulieren nach ")));
   liefdate_kumul = Gtk::manage(new class Gtk::OptionMenu());
   
   Gtk::Label *label132 = Gtk::manage(new class Gtk::Label(_("Abverkauf 12 Mon.")));
   abverk_12m = Gtk::manage(new class Gtk::Entry());
   
   Gtk::Table *table30 = Gtk::manage(new class Gtk::Table(2, 2, false));
   Gtk::Toolbar *toolbar19 = Gtk::manage(new class Gtk::Toolbar());
   abverkauf_tree = new class SimpleTree(5);
   
   Gtk::ScrolledWindow *scrolledwindow20 = Gtk::manage(new class Gtk::ScrolledWindow());
   Gtk::VBox *vbox27 = Gtk::manage(new class Gtk::VBox(false, 0));
   Gtk::VBox *vbox26 = Gtk::manage(new class Gtk::VBox(false, 0));
   Gtk::Label *label168 = Gtk::manage(new class Gtk::Label(_("Abverkauf")));
   Gtk::Frame *frame56 = Gtk::manage(new class Gtk::Frame());
   Gtk::VBox *vbox25 = Gtk::manage(new class Gtk::VBox(false, 0));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar18->append(*bp_quit);
#else //
   
   
   toolbar18->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem(_("Schließen"), *bp_quit_img, Gtk::Toolbar_Helpers::Callback0()));
   bp_quit = static_cast<Gtk::Button *>(toolbar18->tools().back().get_widget());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar18->append(*prev_artikel);
#else //
   
   
   toolbar18->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem(_("vorh. Artikel"), *prev_artikel_img, Gtk::Toolbar_Helpers::Callback0()));
   prev_artikel = static_cast<Gtk::Button *>(toolbar18->tools().back().get_widget());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar18->append(*next_artikel);
#else //
   
   
   toolbar18->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem(_("nächst. Artikel"), *next_artikel_img, Gtk::Toolbar_Helpers::Callback0()));
   next_artikel = static_cast<Gtk::Button *>(toolbar18->tools().back().get_widget());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   bp_quit->set_visible_horizontal(true);
   bp_quit->set_visible_vertical(true);
   bp_quit->set_is_important(false);
   bp_quit->set_homogeneous(true);
   bp_quit->set_expand(false);
#endif //
   bp_quit_img->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   prev_artikel->set_visible_horizontal(true);
   prev_artikel->set_visible_vertical(true);
   prev_artikel->set_is_important(false);
   prev_artikel->set_homogeneous(true);
   prev_artikel->set_expand(false);
#endif //
   prev_artikel_img->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   next_artikel->set_visible_horizontal(true);
   next_artikel->set_visible_vertical(true);
   next_artikel->set_is_important(false);
   next_artikel->set_homogeneous(true);
   next_artikel->set_expand(false);
#endif //
   next_artikel_img->show();
   toolbar18->set_tooltips(true);
   toolbar18->set_toolbar_style(Gtk::TOOLBAR_ICONS);
   toolbar18->set_orientation(Gtk::ORIENTATION_HORIZONTAL);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar18->set_show_arrow(true);
#endif //
   label167->set_alignment(0.5,0.5);
   label167->set_padding(0,0);
   label167->set_justify(Gtk::JUSTIFY_LEFT);
   label167->set_line_wrap(false);
   label167->set_use_markup(false);
   label167->set_selectable(false);
   frame55->set_border_width(5);
   frame55->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame55->set_label_align(0,0.5);
   frame55->add(*plan_artikel);
   frame55->set_label_widget(*label167);
   label121->set_alignment(0,0.5);
   label121->set_padding(0,0);
   label121->set_justify(Gtk::JUSTIFY_CENTER);
   label121->set_line_wrap(false);
   label121->set_use_markup(false);
   label121->set_selectable(false);
   label121->set_mnemonic_widget(*bp_verfuegbar);
   label122->set_alignment(0,0.5);
   label122->set_padding(0,0);
   label122->set_justify(Gtk::JUSTIFY_CENTER);
   label122->set_line_wrap(false);
   label122->set_use_markup(false);
   label122->set_selectable(false);
   label129->set_alignment(0,0.5);
   label129->set_padding(0,0);
   label129->set_justify(Gtk::JUSTIFY_CENTER);
   label129->set_line_wrap(false);
   label129->set_use_markup(false);
   label129->set_selectable(false);
   bp_offauftraege->set_flags(Gtk::CAN_FOCUS);
   bp_offauftraege->set_visibility(true);
   bp_offauftraege->set_editable(false);
   bp_offauftraege->set_max_length(0);
   bp_offauftraege->set_text("");
   bp_offauftraege->set_has_frame(true);
   bp_offauftraege->set_activates_default(false);
   bp_verfuegbar->set_flags(Gtk::CAN_FOCUS);
   bp_verfuegbar->set_visibility(true);
   bp_verfuegbar->set_editable(false);
   bp_verfuegbar->set_max_length(0);
   bp_verfuegbar->set_text("");
   bp_verfuegbar->set_has_frame(true);
   bp_verfuegbar->set_activates_default(false);
   bp_bestellt->set_flags(Gtk::CAN_FOCUS);
   bp_bestellt->set_visibility(true);
   bp_bestellt->set_editable(false);
   bp_bestellt->set_max_length(0);
   bp_bestellt->set_text("");
   bp_bestellt->set_has_frame(true);
   bp_bestellt->set_activates_default(false);
   bp_mindbestand->set_flags(Gtk::CAN_FOCUS);
   bp_mindbestand->set_visibility(true);
   bp_mindbestand->set_editable(false);
   bp_mindbestand->set_max_length(0);
   bp_mindbestand->set_text("");
   bp_mindbestand->set_has_frame(true);
   bp_mindbestand->set_activates_default(false);
   label123->set_alignment(0,0.5);
   label123->set_padding(0,0);
   label123->set_justify(Gtk::JUSTIFY_CENTER);
   label123->set_line_wrap(false);
   label123->set_use_markup(false);
   label123->set_selectable(false);
   label120->set_alignment(0,0.5);
   label120->set_padding(0,0);
   label120->set_justify(Gtk::JUSTIFY_CENTER);
   label120->set_line_wrap(false);
   label120->set_use_markup(false);
   label120->set_selectable(false);
   bp_lagerbestand->set_flags(Gtk::CAN_FOCUS);
   bp_lagerbestand->set_visibility(true);
   bp_lagerbestand->set_editable(false);
   bp_lagerbestand->set_max_length(0);
   bp_lagerbestand->set_text("");
   bp_lagerbestand->set_has_frame(true);
   bp_lagerbestand->set_activates_default(false);
   bp_lagerbestand2->set_flags(Gtk::CAN_FOCUS);
   bp_lagerbestand2->set_visibility(true);
   bp_lagerbestand2->set_editable(false);
   bp_lagerbestand2->set_max_length(0);
   bp_lagerbestand2->set_text("");
   bp_lagerbestand2->set_has_frame(true);
   bp_lagerbestand2->set_activates_default(false);
   lager_name2->set_alignment(1,0.5);
   lager_name2->set_padding(0,0);
   lager_name2->set_justify(Gtk::JUSTIFY_RIGHT);
   lager_name2->set_line_wrap(false);
   lager_name2->set_use_markup(false);
   lager_name2->set_selectable(false);
   lager_name1->set_alignment(1,0.5);
   lager_name1->set_padding(0,0);
   lager_name1->set_justify(Gtk::JUSTIFY_RIGHT);
   lager_name1->set_line_wrap(false);
   lager_name1->set_use_markup(false);
   lager_name1->set_selectable(false);
   label135->set_alignment(0,0.5);
   label135->set_padding(0,0);
   label135->set_justify(Gtk::JUSTIFY_CENTER);
   label135->set_line_wrap(false);
   label135->set_use_markup(false);
   label135->set_selectable(false);
   bp_commited->set_flags(Gtk::CAN_FOCUS);
   bp_commited->set_visibility(true);
   bp_commited->set_editable(false);
   bp_commited->set_max_length(0);
   bp_commited->set_text("");
   bp_commited->set_has_frame(true);
   bp_commited->set_activates_default(false);
   alignment1->add(*bp_commited);
   commited_label->set_alignment(0.5,0.5);
   commited_label->set_padding(0,0);
   commited_label->set_justify(Gtk::JUSTIFY_LEFT);
   commited_label->set_line_wrap(false);
   commited_label->set_use_markup(true);
   commited_label->set_selectable(false);
   frame58->set_shadow_type(Gtk::SHADOW_NONE);
   frame58->set_label_align(0,0.5);
   frame58->add(*alignment1);
   frame58->set_label_widget(*commited_label);
   bp_uncommited->set_flags(Gtk::CAN_FOCUS);
   bp_uncommited->set_visibility(true);
   bp_uncommited->set_editable(false);
   bp_uncommited->set_max_length(0);
   bp_uncommited->set_text("");
   bp_uncommited->set_has_frame(true);
   bp_uncommited->set_activates_default(false);
   alignment2->add(*bp_uncommited);
   label172->set_alignment(0.5,0.5);
   label172->set_padding(0,0);
   label172->set_justify(Gtk::JUSTIFY_LEFT);
   label172->set_line_wrap(false);
   label172->set_use_markup(false);
   label172->set_selectable(false);
   frame59->set_shadow_type(Gtk::SHADOW_NONE);
   frame59->set_label_align(0,0.5);
   frame59->add(*alignment2);
   frame59->set_label_widget(*label172);
   label134->set_alignment(0,0.5);
   label134->set_padding(0,0);
   label134->set_justify(Gtk::JUSTIFY_CENTER);
   label134->set_line_wrap(false);
   label134->set_use_markup(false);
   label134->set_selectable(false);
   bp_rohbestellt->set_flags(Gtk::CAN_FOCUS);
   bp_rohbestellt->set_visibility(true);
   bp_rohbestellt->set_editable(false);
   bp_rohbestellt->set_max_length(0);
   bp_rohbestellt->set_text("");
   bp_rohbestellt->set_has_frame(true);
   bp_rohbestellt->set_activates_default(false);
   table29->set_row_spacings(0);
   table29->set_col_spacings(0);
   table29->attach(*label121, 0, 1, 4, 5, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table29->attach(*label122, 2, 3, 1, 2, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table29->attach(*label129, 0, 1, 3, 4, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table29->attach(*bp_offauftraege, 1, 2, 3, 4, Gtk::EXPAND|Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table29->attach(*bp_verfuegbar, 1, 2, 4, 5, Gtk::EXPAND|Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table29->attach(*bp_bestellt, 1, 2, 5, 6, Gtk::EXPAND|Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table29->attach(*bp_mindbestand, 3, 4, 1, 2, Gtk::EXPAND|Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table29->attach(*label123, 0, 1, 5, 6, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table29->attach(*label120, 0, 1, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table29->attach(*bp_lagerbestand, 1, 2, 1, 2, Gtk::EXPAND|Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table29->attach(*bp_lagerbestand2, 1, 2, 2, 3, Gtk::EXPAND|Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table29->attach(*lager_name2, 0, 1, 2, 3, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table29->attach(*lager_name1, 0, 1, 1, 2, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table29->attach(*label135, 2, 3, 2, 3, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table29->attach(*frame58, 2, 3, 5, 6, Gtk::FILL, Gtk::FILL, 0, 0);
   table29->attach(*frame59, 3, 4, 5, 6, Gtk::FILL, Gtk::FILL, 0, 0);
   table29->attach(*label134, 0, 1, 6, 7, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table29->attach(*bp_rohbestellt, 1, 2, 6, 7, Gtk::EXPAND|Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   label131->set_alignment(0.5,0.5);
   label131->set_padding(0,0);
   label131->set_justify(Gtk::JUSTIFY_CENTER);
   label131->set_line_wrap(false);
   label131->set_use_markup(false);
   label131->set_selectable(false);
   abverkauf_kumul->set_flags(Gtk::CAN_FOCUS);
   {  
      
      Gtk::Menu *_m(manage(new Gtk::Menu()));
      Gtk::MenuItem *_mi;
      _mi = manage(new Gtk::MenuItem(_("Datum")));
      _m->append(*_mi);
      _mi->show();
      _mi->property_user_data().set_value((gpointer)0);
      _mi = manage(new Gtk::MenuItem(_("Woche")));
      _m->append(*_mi);
      _mi->show();
      _mi->property_user_data().set_value((gpointer)1);
      _mi = manage(new Gtk::MenuItem(_("Monat")));
      _m->append(*_mi);
      _mi->show();
      _mi->property_user_data().set_value((gpointer)2);
      _mi = manage(new Gtk::MenuItem(_("Quartal")));
      _m->append(*_mi);
      _mi->show();
      _mi->property_user_data().set_value((gpointer)3);
      _mi = manage(new Gtk::MenuItem(_("Jahr")));
      _m->append(*_mi);
      _mi->show();
      _mi->property_user_data().set_value((gpointer)4);
      abverkauf_kumul->set_menu(*_m);
      abverkauf_kumul->set_history(0);
   }
   abverkauf_kumul->set_history(0);
   toolbar20->set_tooltips(true);
   toolbar20->set_toolbar_style(Gtk::TOOLBAR_ICONS);
   toolbar20->set_orientation(Gtk::ORIENTATION_HORIZONTAL);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar20->set_show_arrow(true);
#endif //
   label133->set_alignment(0,0.5);
   label133->set_padding(0,0);
   label133->set_justify(Gtk::JUSTIFY_CENTER);
   label133->set_line_wrap(false);
   label133->set_use_markup(false);
   label133->set_selectable(false);
   liefdate_kumul->set_flags(Gtk::CAN_FOCUS);
   {  
      
      Gtk::Menu *_m(manage(new Gtk::Menu()));
      Gtk::MenuItem *_mi;
      _mi = manage(new Gtk::MenuItem(_("Datum")));
      _m->append(*_mi);
      _mi->show();
      _mi->property_user_data().set_value((gpointer)0);
      _mi = manage(new Gtk::MenuItem(_("Woche")));
      _m->append(*_mi);
      _mi->show();
      _mi->property_user_data().set_value((gpointer)1);
      _mi = manage(new Gtk::MenuItem(_("Monat")));
      _m->append(*_mi);
      _mi->show();
      _mi->property_user_data().set_value((gpointer)2);
      _mi = manage(new Gtk::MenuItem(_("Quartal")));
      _m->append(*_mi);
      _mi->show();
      _mi->property_user_data().set_value((gpointer)3);
      _mi = manage(new Gtk::MenuItem(_("Jahr")));
      _m->append(*_mi);
      _mi->show();
      _mi->property_user_data().set_value((gpointer)4);
      liefdate_kumul->set_menu(*_m);
      liefdate_kumul->set_history(0);
   }
   liefdate_kumul->set_history(0);
   label132->set_alignment(0,0.5);
   label132->set_padding(0,0);
   label132->set_justify(Gtk::JUSTIFY_CENTER);
   label132->set_line_wrap(false);
   label132->set_use_markup(false);
   label132->set_selectable(false);
   abverk_12m->set_flags(Gtk::CAN_FOCUS);
   abverk_12m->set_visibility(true);
   abverk_12m->set_editable(false);
   abverk_12m->set_max_length(0);
   abverk_12m->set_text("");
   abverk_12m->set_has_frame(true);
   abverk_12m->set_activates_default(false);
   table30->set_border_width(2);
   table30->set_row_spacings(0);
   table30->set_col_spacings(0);
   table30->attach(*label131, 0, 1, 1, 2, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table30->attach(*abverkauf_kumul, 1, 2, 1, 2, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table30->attach(*toolbar20, 2, 3, 1, 2, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table30->attach(*label133, 3, 4, 1, 2, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table30->attach(*liefdate_kumul, 4, 5, 1, 2, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table30->attach(*label132, 0, 1, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table30->attach(*abverk_12m, 1, 3, 0, 1, Gtk::EXPAND|Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   toolbar19->set_tooltips(true);
   toolbar19->set_toolbar_style(Gtk::TOOLBAR_ICONS);
   toolbar19->set_orientation(Gtk::ORIENTATION_HORIZONTAL);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar19->set_show_arrow(true);
#endif //
   scrolledwindow20->set_shadow_type(Gtk::SHADOW_NONE);
   scrolledwindow20->set_policy(Gtk::POLICY_AUTOMATIC, Gtk::POLICY_AUTOMATIC);
   scrolledwindow20->property_window_placement().set_value(Gtk::CORNER_TOP_LEFT);
   scrolledwindow20->add(*abverkauf_tree);
   vbox27->pack_start(*scrolledwindow20);
   vbox26->pack_start(*table30, Gtk::PACK_SHRINK, 0);
   vbox26->pack_start(*toolbar19, Gtk::PACK_SHRINK, 0);
   vbox26->pack_start(*vbox27);
   label168->set_alignment(0.5,0.5);
   label168->set_padding(0,0);
   label168->set_justify(Gtk::JUSTIFY_LEFT);
   label168->set_line_wrap(false);
   label168->set_use_markup(false);
   label168->set_selectable(false);
   frame56->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame56->set_label_align(0,0.5);
   frame56->add(*vbox26);
   frame56->set_label_widget(*label168);
   vbox25->pack_start(*toolbar18, Gtk::PACK_SHRINK, 0);
   vbox25->pack_start(*frame55, Gtk::PACK_SHRINK, 0);
   vbox25->pack_start(*table29, Gtk::PACK_SHRINK, 0);
   vbox25->pack_start(*frame56);
   bestell_plan->set_border_width(5);
   bestell_plan->set_title(_("Bestellplanung"));
   bestell_plan->set_default_size(640,600);
   bestell_plan->set_modal(false);
   bestell_plan->property_window_position().set_value(Gtk::WIN_POS_NONE);
   bestell_plan->set_resizable(true);
   bestell_plan->property_destroy_with_parent().set_value(false);
   bestell_plan->add(*vbox25);
   bp_quit->show();
   prev_artikel->show();
   next_artikel->show();
   toolbar18->show();
   plan_artikel->show();
   label167->show();
   frame55->show();
   label121->show();
   label122->show();
   label129->show();
   bp_offauftraege->show();
   bp_verfuegbar->show();
   bp_bestellt->show();
   bp_mindbestand->show();
   label123->show();
   label120->show();
   bp_lagerbestand->show();
   bp_lagerbestand2->show();
   lager_name2->show();
   lager_name1->show();
   label135->show();
   bp_commited->show();
   alignment1->show();
   commited_label->show();
   frame58->show();
   bp_uncommited->show();
   alignment2->show();
   label172->show();
   frame59->show();
   label134->show();
   bp_rohbestellt->show();
   table29->show();
   label131->show();
   abverkauf_kumul->show();
   toolbar20->show();
   label133->show();
   liefdate_kumul->show();
   label132->show();
   abverk_12m->show();
   table30->show();
   toolbar19->show();
   abverkauf_tree->show();
   scrolledwindow20->show();
   vbox27->show();
   vbox26->show();
   label168->show();
   frame56->show();
   vbox25->show();
   bestell_plan->show();
   bp_quit->signal_clicked().connect(SigC::slot(*this, &bestell_plan_glade::on_bp_quit_clicked), false);
   prev_artikel->signal_clicked().connect(SigC::slot(*this, &bestell_plan_glade::on_prev_artikel_clicked), false);
   next_artikel->signal_clicked().connect(SigC::slot(*this, &bestell_plan_glade::on_next_artikel_clicked), false);
   plan_artikel->signal_activate().connect(SigC::slot(*this, &bestell_plan_glade::on_plan_artikel_activate));
}

bestell_plan_glade::~bestell_plan_glade()
{  delete plan_artikel;
   delete abverkauf_tree;
   delete gmm_data;
}
