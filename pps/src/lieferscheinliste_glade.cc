// generated 2002/9/27 16:10:54 CEST by thoma@Tiger.(none)
// using glademm V1.1.1c_cvs
//
// DO NOT EDIT THIS FILE ! It was created using
// glade-- auftrag.glade
// for gtk 1.2.10 and gtkmm 1.2.10
//
// Please modify the corresponding derived classes in ./src/lieferscheinliste.cc

#include "config.h"
#include "lieferscheinliste.hh"
#include <gdk/gdkkeysyms.h>
#include <gtk--/accelgroup.h>
#include <gtk--/viewport.h>
#include <gtk--/scrolledwindow.h>
#include <gtk--/button.h>
#include <libgnomeui/gnome-stock.h>
#include <gtk--/toolbar.h>
#include <gtk--/box.h>
#include <gtk--/separator.h>
#include <gtk--/table.h>

lieferscheinliste_glade::lieferscheinliste_glade(
) : Gtk::Window(GTK_WINDOW_TOPLEVEL)
{  
   
   Gtk::Window *lieferscheinliste = this;
   Gtk::AccelGroup *lieferscheinliste_accgrp = Gtk::AccelGroup::create();
   _data = new GlademmData(lieferscheinliste_accgrp);
   tree = new class SimpleTree(12, 10);
   
   Gtk::Viewport *viewport10 = manage(new class Gtk::Viewport());
   Gtk::ScrolledWindow *scrolledwindow10 = manage(new class Gtk::ScrolledWindow());
   progressbar = manage(new class Gtk::ProgressBar());
   label_anzahl = manage(new class Gtk::Label("label81"));
   
   Gtk::Toolbar *toolbar11 = manage(new class Gtk::Toolbar(GTK_ORIENTATION_HORIZONTAL, GTK_TOOLBAR_BOTH));
   Gtk::RadioButton::Group _RadioBGroup_kunde;
   radiobutton_alle_kunden = manage(new class Gtk::RadioButton(_RadioBGroup_kunde, "Zeige alle Kunden", 0, 0.5));
   radiobutton_nur_kunde = manage(new class Gtk::RadioButton(_RadioBGroup_kunde, "Zeige nur Kunde", 0, 0.5));
   
   Gtk::VBox *fixed3 = manage(new class Gtk::VBox(false, 0));
   Gtk::VSeparator *vseparator1 = manage(new class Gtk::VSeparator());
   Gtk::RadioButton::Group _RadioBGroup_artikel;
   radiobutton_alle_artikel = manage(new class Gtk::RadioButton(_RadioBGroup_artikel, "Zeige alle Artikel", 0, 0.5));
   radiobutton_nur_artikel = manage(new class Gtk::RadioButton(_RadioBGroup_artikel, "Zeige nur Artikel", 0, 0.5));
   
   Gtk::VBox *fixed1 = manage(new class Gtk::VBox(false, 0));
   Gtk::RadioButton::Group _RadioBGroup_zeit;
   radiobutton_alle_zeit_von = manage(new class Gtk::RadioButton(_RadioBGroup_zeit, "Zeige vom Anfang", 0, 0.5));
   radiobutton_nur_zeit_von = manage(new class Gtk::RadioButton(_RadioBGroup_zeit, "Zeige vom", 0, 0.5));
   
   Gtk::VBox *fixed2 = manage(new class Gtk::VBox(false, 0));
   Gtk::RadioButton::Group _RadioBGroup_zeit_2;
   radiobutton_alle_zeit_bis = manage(new class Gtk::RadioButton(_RadioBGroup_zeit_2, "bis heute", 0, 0.5));
   radiobutton_nur_zeit_bis = manage(new class Gtk::RadioButton(_RadioBGroup_zeit_2, "bis zum", 0, 0.5));
   
   Gtk::VBox *fixed4 = manage(new class Gtk::VBox(false, 0));
   Gtk::VSeparator *vseparator2 = manage(new class Gtk::VSeparator());
   Wdatum_bis = new class Datewin();
   Wdatum_von = new class Datewin();
   artikelbox = new class ArtikelBox(1);
   kundenbox = new class KundenBox2();
   
   Gtk::Table *table15 = manage(new class Gtk::Table(2, 6, false));
   Gtk::Table *table14 = manage(new class Gtk::Table(5, 1, false));
   
   toolbar11->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem("Schlieﬂen", *Gtk::wrap(gnome_stock_pixmap_widget(GTK_WIDGET(gtkobj()), GNOME_STOCK_PIXMAP_EXIT)), 0));
   Gtk::Button *button_close = static_cast<Gtk::Button *>(toolbar11->tools().back()->get_widget());
   
   toolbar11->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem("Anzeigen", *Gtk::wrap(gnome_stock_pixmap_widget(GTK_WIDGET(gtkobj()), GNOME_STOCK_PIXMAP_SEARCH)), 0));
   Gtk::Button *button_show = static_cast<Gtk::Button *>(toolbar11->tools().back()->get_widget());
   
   toolbar11->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem("Drucken", *Gtk::wrap(gnome_stock_pixmap_widget(GTK_WIDGET(gtkobj()), GNOME_STOCK_PIXMAP_PRINT)), 0));
   Gtk::Button *button_drucken = static_cast<Gtk::Button *>(toolbar11->tools().back()->get_widget());
   viewport10->set_shadow_type(GTK_SHADOW_NONE);
   viewport10->add(*tree);
   scrolledwindow10->set_policy(GTK_POLICY_AUTOMATIC, GTK_POLICY_ALWAYS);
   scrolledwindow10->add(*viewport10);
   label_anzahl->set_alignment(0,0.5);
   label_anzahl->set_padding(0,0);
   label_anzahl->set_justify(GTK_JUSTIFY_CENTER);
   label_anzahl->set_line_wrap(false);
   _tooltips.set_tip(*button_drucken, "Linker Mausknopf: Sichtbaren Bereich drucken. Rechter Mausknopf: Vorher Expandieren", "");
   toolbar11->set_space_size(5);
   toolbar11->set_tooltips(true);
   toolbar11->set_space_style(GTK_TOOLBAR_SPACE_EMPTY);
   radiobutton_alle_kunden->set_flags(GTK_CAN_FOCUS);
   radiobutton_alle_kunden->set_mode(true);
   radiobutton_alle_kunden->set_active(true);
   radiobutton_nur_kunde->set_flags(GTK_CAN_FOCUS);
   radiobutton_nur_kunde->set_mode(true);
   radiobutton_nur_kunde->set_active(false);
   fixed3->pack_start(*radiobutton_alle_kunden);
   fixed3->pack_start(*radiobutton_nur_kunde);
   radiobutton_alle_artikel->set_flags(GTK_CAN_FOCUS);
   radiobutton_alle_artikel->set_mode(true);
   radiobutton_alle_artikel->set_active(true);
   radiobutton_nur_artikel->set_flags(GTK_CAN_FOCUS);
   radiobutton_nur_artikel->set_mode(true);
   radiobutton_nur_artikel->set_active(false);
   fixed1->pack_start(*radiobutton_alle_artikel);
   fixed1->pack_start(*radiobutton_nur_artikel);
   radiobutton_alle_zeit_von->set_flags(GTK_CAN_FOCUS);
   radiobutton_alle_zeit_von->set_mode(true);
   radiobutton_alle_zeit_von->set_active(true);
   radiobutton_nur_zeit_von->set_flags(GTK_CAN_FOCUS);
   radiobutton_nur_zeit_von->set_mode(true);
   radiobutton_nur_zeit_von->set_active(false);
   fixed2->pack_start(*radiobutton_alle_zeit_von);
   fixed2->pack_start(*radiobutton_nur_zeit_von);
   radiobutton_alle_zeit_bis->set_flags(GTK_CAN_FOCUS);
   radiobutton_alle_zeit_bis->set_mode(true);
   radiobutton_alle_zeit_bis->set_active(true);
   radiobutton_nur_zeit_bis->set_flags(GTK_CAN_FOCUS);
   radiobutton_nur_zeit_bis->set_mode(true);
   radiobutton_nur_zeit_bis->set_active(false);
   fixed4->pack_start(*radiobutton_alle_zeit_bis);
   fixed4->pack_start(*radiobutton_nur_zeit_bis);
   Wdatum_von->set_usize(180,-1);
   artikelbox->set_usize(350,-1);
   table15->set_row_spacings(0);
   table15->set_col_spacings(0);
   table15->attach(*fixed3, 0, 1, 0, 1, GTK_EXPAND|GTK_SHRINK|GTK_FILL, GTK_FILL, 0, 0);
   table15->attach(*vseparator1, 3, 4, 0, 2, GTK_FILL, GTK_FILL, 6, 0);
   table15->attach(*fixed1, 2, 3, 0, 1, GTK_EXPAND|GTK_SHRINK|GTK_FILL, GTK_FILL, 0, 0);
   table15->attach(*fixed2, 4, 5, 0, 1, GTK_EXPAND|GTK_SHRINK|GTK_FILL, GTK_FILL, 0, 0);
   table15->attach(*fixed4, 5, 6, 0, 1, GTK_EXPAND|GTK_SHRINK|GTK_FILL, GTK_FILL, 0, 0);
   table15->attach(*vseparator2, 1, 2, 0, 2, 0, GTK_FILL, 6, 0);
   table15->attach(*Wdatum_bis, 5, 6, 1, 2, GTK_EXPAND|GTK_SHRINK|GTK_FILL, GTK_SHRINK|GTK_FILL, 0, 0);
   table15->attach(*Wdatum_von, 4, 5, 1, 2, GTK_EXPAND|GTK_SHRINK|GTK_FILL, GTK_SHRINK|GTK_FILL, 0, 0);
   table15->attach(*artikelbox, 2, 3, 1, 2, GTK_EXPAND|GTK_SHRINK|GTK_FILL, GTK_SHRINK|GTK_FILL, 0, 0);
   table15->attach(*kundenbox, 0, 1, 1, 2, GTK_EXPAND|GTK_SHRINK|GTK_FILL, GTK_SHRINK|GTK_FILL, 0, 0);
   table14->set_row_spacings(0);
   table14->set_col_spacings(0);
   table14->attach(*scrolledwindow10, 0, 1, 4, 5, GTK_EXPAND|GTK_SHRINK|GTK_FILL, GTK_EXPAND|GTK_SHRINK|GTK_FILL, 0, 0);
   table14->attach(*progressbar, 0, 1, 2, 3, GTK_EXPAND|GTK_SHRINK|GTK_FILL, 0, 0, 0);
   table14->attach(*label_anzahl, 0, 1, 3, 4, GTK_EXPAND|GTK_SHRINK|GTK_FILL, 0, 0, 0);
   table14->attach(*toolbar11, 0, 1, 0, 1, GTK_EXPAND|GTK_SHRINK|GTK_FILL, 0, 0, 0);
   table14->attach(*table15, 0, 1, 1, 2, GTK_FILL, GTK_FILL, 0, 0);
   lieferscheinliste->set_title("Lieferscheinliste");
   lieferscheinliste->set_default_size(800,600);
   lieferscheinliste->set_modal(false);
   lieferscheinliste->set_position(GTK_WIN_POS_NONE);
   lieferscheinliste->set_policy(true, true, false);
   lieferscheinliste->add_accel_group(*(_data->getAccelGroup()));
   lieferscheinliste->add(*table14);
   tree->show();
   viewport10->show();
   scrolledwindow10->show();
   progressbar->show();
   label_anzahl->show();
   toolbar11->show();
   radiobutton_alle_kunden->show();
   radiobutton_nur_kunde->show();
   fixed3->show();
   vseparator1->show();
   radiobutton_alle_artikel->show();
   radiobutton_nur_artikel->show();
   fixed1->show();
   radiobutton_alle_zeit_von->show();
   radiobutton_nur_zeit_von->show();
   fixed2->show();
   radiobutton_alle_zeit_bis->show();
   radiobutton_nur_zeit_bis->show();
   fixed4->show();
   vseparator2->show();
   Wdatum_bis->show();
   Wdatum_von->show();
   artikelbox->show();
   kundenbox->show();
   table15->show();
   table14->show();
   lieferscheinliste->show();
   button_close->clicked.connect(SigC::slot(static_cast<class lieferscheinliste*>(this), &lieferscheinliste::on_button_close_clicked));
   button_show->clicked.connect(SigC::slot(static_cast<class lieferscheinliste*>(this), &lieferscheinliste::on_button_show_clicked));
   button_drucken->button_release_event.connect(SigC::slot(static_cast<class lieferscheinliste*>(this), &lieferscheinliste::on_button_drucken_button_release_event));
   radiobutton_alle_kunden->toggled.connect(SigC::slot(static_cast<class lieferscheinliste*>(this), &lieferscheinliste::on_radiobutton_kunde_toggled));
   radiobutton_nur_kunde->toggled.connect(SigC::slot(static_cast<class lieferscheinliste*>(this), &lieferscheinliste::on_radiobutton_kunde_toggled));
   radiobutton_alle_artikel->toggled.connect(SigC::slot(static_cast<class lieferscheinliste*>(this), &lieferscheinliste::on_radiobutton_artikel_toggled));
   radiobutton_nur_artikel->toggled.connect(SigC::slot(static_cast<class lieferscheinliste*>(this), &lieferscheinliste::on_radiobutton_artikel_toggled));
   radiobutton_alle_zeit_von->toggled.connect(SigC::slot(static_cast<class lieferscheinliste*>(this), &lieferscheinliste::on_radiobutton_zeit_toggled));
   radiobutton_nur_zeit_von->toggled.connect(SigC::slot(static_cast<class lieferscheinliste*>(this), &lieferscheinliste::on_radiobutton_zeit_toggled));
   radiobutton_alle_zeit_bis->toggled.connect(SigC::slot(static_cast<class lieferscheinliste*>(this), &lieferscheinliste::on_radiobutton_zeit_2_toggled));
   radiobutton_nur_zeit_bis->toggled.connect(SigC::slot(static_cast<class lieferscheinliste*>(this), &lieferscheinliste::on_radiobutton_zeit_2_toggled));
   Wdatum_bis->activate.connect(SigC::slot(static_cast<class lieferscheinliste*>(this), &lieferscheinliste::datum_bis_activate));
   Wdatum_von->activate.connect(SigC::slot(static_cast<class lieferscheinliste*>(this), &lieferscheinliste::datum_von_activate));
   artikelbox->activate.connect(SigC::slot(static_cast<class lieferscheinliste*>(this), &lieferscheinliste::artikelbox_activate));
   kundenbox->activate.connect(SigC::slot(static_cast<class lieferscheinliste*>(this), &lieferscheinliste::kundenbox_activate));
}

lieferscheinliste_glade::~lieferscheinliste_glade()
{  delete tree;
   delete Wdatum_bis;
   delete Wdatum_von;
   delete artikelbox;
   delete kundenbox;
   delete _data;
}
