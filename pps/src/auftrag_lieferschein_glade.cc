// generated 2006/5/22 16:46:05 CEST by christof@vesta.petig-baender.de
// using glademm V2.12.1
//
// DO NOT EDIT THIS FILE ! It was created using
// glade-- auftrag.glade
// for gtk 2.8.17 and gtkmm 2.8.5
//
// Please modify the corresponding derived classes in ./src/auftrag_lieferschein.cc


#if defined __GNUC__ && __GNUC__ < 3
#error This program will crash if compiled with g++ 2.x
// see the dynamic_cast bug in the gtkmm FAQ
#endif //
#include "config.h"
/*
 * Standard gettext macros.
 */
#ifdef ENABLE_NLS
#  include <libintl.h>
#  undef _
#  define _(String) dgettext (GETTEXT_PACKAGE, String)
#  ifdef gettext_noop
#    define N_(String) gettext_noop (String)
#  else
#    define N_(String) (String)
#  endif
#endif
#include <gtkmmconfig.h>
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
#include <sigc++/compatibility.h>
#include <sigc++/bind.h>
#define GMM_GTKMM_22_24(a,b) b
#else //gtkmm 2.2
#define GMM_GTKMM_22_24(a,b) a
#endif //
#include "auftrag_lieferschein_glade.hh"
#include <gdk/gdkkeysyms.h>
#include <gtkmm/accelgroup.h>
#include <gdkmm/pixbufloader.h>

static const unsigned char stock_book_green_png_data[] = 
{       	137,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,
	0,0,0,24,0,0,0,24,8,6,0,0,0,224,119,61,
	248,0,0,0,6,98,75,71,68,0,189,0,189,0,189,105,
	66,213,168,0,0,1,87,73,68,65,84,120,218,99,96,24,
	5,3,13,24,73,80,251,159,28,51,89,136,53,60,49,61,
	156,65,75,91,157,225,199,143,31,12,95,191,125,195,170,168,
	163,97,10,134,24,19,177,206,39,198,240,109,219,182,146,101,
	193,255,172,252,120,6,6,6,6,156,134,227,3,68,249,64,
	81,89,158,225,199,143,31,56,229,113,185,158,24,11,254,119,
	79,170,195,27,52,200,224,195,199,247,12,12,104,137,1,159,
	5,68,5,13,178,235,31,61,187,71,154,15,8,5,13,186,
	235,43,138,235,24,24,208,146,41,46,11,254,23,148,165,82,
	236,122,188,62,96,99,101,163,216,245,12,12,216,51,218,255,
	121,233,153,12,73,173,83,225,2,54,14,166,12,18,146,98,
	12,2,130,252,12,34,98,66,24,174,127,253,246,21,78,203,
	177,230,100,1,41,73,134,135,87,47,49,8,72,75,193,197,
	118,238,218,205,176,115,231,46,140,220,250,225,227,123,134,252,
	156,34,172,174,199,25,68,31,158,61,199,16,115,119,115,101,
	232,235,237,102,248,248,225,13,195,199,15,111,24,14,29,58,
	64,208,245,56,109,21,225,228,250,255,230,59,36,114,231,46,
	154,204,160,175,109,200,160,170,172,129,162,230,226,165,43,12,
	79,158,62,97,136,138,140,193,105,14,206,32,122,243,253,27,
	92,67,114,92,46,60,227,76,152,218,202,96,99,97,207,160,
	170,172,193,112,253,246,69,134,247,31,62,50,80,27,252,135,
	225,138,134,28,24,155,102,128,230,22,140,16,0,0,75,190,
	158,130,96,161,27,215,0,0,0,69,122,84,88,116,83,111,
	102,116,119,97,114,101,0,0,120,218,115,208,80,214,244,204,
	77,76,79,245,77,76,207,76,206,86,48,209,51,208,51,81,
	176,180,208,55,48,209,55,48,84,72,46,202,44,46,169,116,
	40,174,204,45,72,44,201,76,206,215,203,47,74,7,0,124,
	106,15,249,120,246,20,194,0,0,0,51,122,84,88,116,83,
	105,103,110,97,116,117,114,101,0,0,120,218,51,48,48,75,
	54,183,76,180,76,51,50,179,72,53,177,52,73,78,54,55,
	75,74,51,183,76,78,179,76,77,77,181,52,4,0,142,226,
	9,22,40,85,209,27,0,0,0,0,73,69,78,68,174,66,
	96,130,

};

#include <gtkmm/imagemenuitem.h>
#include <gtk/gtkimagemenuitem.h>
#include <gtkmm/menu.h>
#include <gtkmm/menuitem.h>
#include <gtkmm/menubar.h>
#include <gtkmm/image.h>
#include <gtkmm/stockid.h>
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
#include <gtkmm/toolbutton.h>
#else //
#include <gtkmm/button.h>
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
#include <gtkmm/toolitem.h>
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
#include <gtkmm/separatortoolitem.h>
#endif //

static const unsigned char stock_book_open_png_data[] = 
{       	137,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,
	0,0,0,24,0,0,0,24,8,4,0,0,0,74,126,245,
	115,0,0,0,2,98,75,71,68,0,189,31,93,236,3,0,
	0,1,118,73,68,65,84,120,218,189,211,49,107,147,81,20,
	198,241,223,77,223,26,173,160,210,66,98,49,58,58,118,136,
	56,136,91,119,241,43,136,139,147,147,224,228,39,232,236,162,
	80,156,92,139,8,66,187,100,43,186,9,118,76,134,18,90,
	233,91,165,22,36,74,27,147,227,208,183,225,109,48,18,16,
	60,119,186,151,231,255,156,115,238,61,151,255,29,209,138,151,
	113,24,147,5,105,76,142,38,174,164,105,128,104,105,168,21,
	155,73,72,165,44,111,170,97,231,175,53,167,178,156,95,50,
	84,12,12,45,164,201,25,98,77,19,236,57,70,87,56,158,
	144,161,130,120,107,185,40,165,97,223,145,134,46,182,98,98,
	134,3,176,88,32,51,134,110,24,248,104,59,190,69,47,126,
	20,107,45,78,129,244,64,142,25,13,21,100,186,250,218,110,
	153,149,141,154,92,215,41,223,210,138,30,232,219,53,180,104,
	215,69,85,23,124,65,14,58,222,19,167,64,90,181,1,50,
	53,93,155,54,93,54,175,234,42,234,88,215,54,119,230,29,
	210,67,57,66,219,129,79,238,89,80,181,143,92,142,142,175,
	94,147,202,15,103,69,79,24,120,231,166,190,76,82,71,93,
	189,228,95,6,210,170,103,6,222,248,233,142,75,102,11,239,
	19,255,165,194,159,172,124,199,175,28,186,102,217,57,231,139,
	218,21,254,213,63,204,18,216,210,50,239,187,40,77,101,199,
	146,231,163,33,42,103,72,98,207,156,23,30,249,12,174,99,
	231,140,255,248,127,32,78,218,63,114,183,56,216,208,240,184,
	164,203,198,128,4,79,3,158,184,173,134,15,166,141,16,226,
	126,136,169,137,17,246,47,241,27,163,181,129,153,10,162,118,
	33,0,0,0,69,122,84,88,116,83,111,102,116,119,97,114,
	101,0,0,120,218,115,208,80,214,244,204,77,76,79,245,77,
	76,207,76,206,86,48,209,51,208,51,81,176,180,208,55,48,
	209,55,48,84,72,46,202,44,46,169,116,40,174,204,45,72,
	44,201,76,206,215,203,47,74,7,0,124,106,15,249,120,246,
	20,194,0,0,0,51,122,84,88,116,83,105,103,110,97,116,
	117,114,101,0,0,120,218,75,73,78,73,51,50,79,54,50,
	52,79,52,78,50,49,51,183,48,72,78,54,48,51,53,74,
	77,74,73,50,53,51,49,5,0,152,111,8,235,212,106,171,
	180,0,0,0,0,73,69,78,68,174,66,96,130,

};

#include <gtkmm/toolbar.h>
#include <gtkmm/label.h>
#include <gtkmm/frame.h>
#include <gtkmm/box.h>
#include <gtkmm/adjustment.h>
#include <gtkmm/table.h>
#include <gtkmm/separator.h>
#include <gtkmm/scrolledwindow.h>

static const unsigned char stock_attach_png_data[] = 
{       	137,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,
	0,0,0,24,0,0,0,24,8,6,0,0,0,224,119,61,
	248,0,0,0,4,103,65,77,65,0,1,134,160,49,232,150,
	95,0,0,0,96,73,68,65,84,120,218,99,252,207,240,159,
	129,150,128,137,129,198,96,232,91,192,66,172,66,70,6,70,
	148,200,250,207,240,159,145,106,22,48,50,48,254,71,55,16,
	38,134,77,142,236,32,66,247,197,104,42,26,181,96,212,130,
	209,194,14,11,128,149,61,164,20,118,140,196,214,104,248,10,
	60,170,4,17,178,235,137,53,156,36,31,160,151,168,84,15,
	162,145,155,76,1,14,253,41,43,235,237,67,142,0,0,0,
	0,73,69,78,68,174,66,96,130,

};
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
#endif //

#include <gtkmm/paned.h>
#ifndef ENABLE_NLS
#  define textdomain(String) (String)
#  define gettext(String) (String)
#  define dgettext(Domain,Message) (Message)
#  define dcgettext(Domain,Message,Type) (Message)
#  define bindtextdomain(Domain,Directory) (Domain)
#  define _(String) (String)
#  define N_(String) (String)
#endif


auftrag_lieferschein_glade::auftrag_lieferschein_glade(
) : Gtk::Window(Gtk::WINDOW_TOPLEVEL)
{  auftrag_lieferschein = this;
   gmm_data = new GlademmData(get_accel_group());
   
   Gtk::ImageMenuItem *schlie__en2 = NULL;
   Gtk::Menu *datei2_menu = Gtk::manage(new class Gtk::Menu());
   Gtk::MenuItem *datei2 = NULL;
   masseneingabe2 = NULL;
   Gtk::MenuItem *anzeigen1 = NULL;
   Gtk::MenuItem *drucken1 = NULL;
   Gtk::Menu *ungebuchte_lief1_menu = Gtk::manage(new class Gtk::Menu());
   Gtk::MenuItem *ungebuchte_lief1 = NULL;
   Gtk::Menu *lieferschein1_menu = Gtk::manage(new class Gtk::Menu());
   Gtk::MenuItem *lieferschein1 = NULL;
   Gtk::MenuItem *petig_we = NULL;
   Gtk::Menu *wareneingang1_menu = Gtk::manage(new class Gtk::Menu());
   Gtk::MenuItem *wareneingang1 = NULL;
   Gtk::MenuBar *menubar2 = Gtk::manage(new class Gtk::MenuBar());
   Gtk::Image *button9_img = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-close"), Gtk::IconSize(3)));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   Gtk::ToolButton *button9 = Gtk::manage(new class Gtk::ToolButton(*button9_img, _("Schließen")));
#endif //
   Gtk::Image *button10_img = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-new"), Gtk::IconSize(3)));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   Gtk::ToolButton *button10 = Gtk::manage(new class Gtk::ToolButton(*button10_img, _("Neu")));
#endif //
   Gtk::Image *button14_img = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-find"), Gtk::IconSize(3)));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   Gtk::ToolButton *button14 = Gtk::manage(new class Gtk::ToolButton(*button14_img, _("Anzeigen")));
#endif //
   Gtk::Image *button15_img = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-print"), Gtk::IconSize(3)));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   Gtk::ToolButton *button15 = Gtk::manage(new class Gtk::ToolButton(*button15_img, _("Drucken")));
#endif //
   checkbutton_ean_drucken = Gtk::manage(new class Gtk::CheckButton(_("EAN")));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   
   Gtk::ToolItem *toolitem2 = Gtk::manage(new class Gtk::ToolItem());
#endif //
   Gtk::Image *lieferzeile_delete_img = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-delete"), Gtk::IconSize(3)));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   lieferzeile_delete = Gtk::manage(new class Gtk::ToolButton(*lieferzeile_delete_img, _("Lief.Zeile\n"
		"löschen")));
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   
   Gtk::SeparatorToolItem *separatortoolitem6 = Gtk::manage(new class Gtk::SeparatorToolItem());
#endif //
   Glib::RefPtr<Gdk::PixbufLoader> _button_liste_img_loader=Gdk::PixbufLoader::create();
   _button_liste_img_loader->write(stock_book_open_png_data, sizeof stock_book_open_png_data);
   _button_liste_img_loader->close();
   
   Gtk::Image *button_liste_img = Gtk::manage(new class Gtk::Image(_button_liste_img_loader->get_pixbuf()));
   _button_liste_img_loader=Glib::RefPtr<Gdk::PixbufLoader>();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   
   Gtk::ToolButton *button_liste = Gtk::manage(new class Gtk::ToolButton(*button_liste_img, _("Liste")));
#endif //
   Gtk::Image *lager_buchen_img = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-preferences"), Gtk::IconSize(3)));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   lager_buchen = Gtk::manage(new class Gtk::ToolButton(*lager_buchen_img, _("Lager buchen")));
#endif //
   
   Gtk::Toolbar *toolbar5 = Gtk::manage(new class Gtk::Toolbar());
   liefer_kunde = new class KundenBox2();
   liefernr = new class SearchComboContent<int>();
   
   Gtk::Label *label134 = Gtk::manage(new class Gtk::Label(_("Lief. Nr.")));
   Gtk::Frame *frame16 = Gtk::manage(new class Gtk::Frame());
   liefdate = new class datewin();
   
   Gtk::Label *label136 = Gtk::manage(new class Gtk::Label(_("Lief. Datum")));
   Gtk::Frame *frame17 = Gtk::manage(new class Gtk::Frame());
   rngnr = Gtk::manage(new class Gtk::Entry());
   
   Gtk::Button *button_rng_erledigt = Gtk::manage(new class Gtk::Button(_("RNG\n"
		"Fertig")));
   Gtk::HBox *hbox16 = Gtk::manage(new class Gtk::HBox(false, 0));
   Gtk::Label *label135 = Gtk::manage(new class Gtk::Label(_("Rechnungsnr.")));
   Gtk::Frame *frame18 = Gtk::manage(new class Gtk::Frame());
   Gtk::Adjustment *spinbutton_netto_adj = Gtk::manage(new class Gtk::Adjustment(0, 0, 999.9, 1, 10, 10));
   spinbutton_netto = Gtk::manage(new class Gtk::SpinButton(*spinbutton_netto_adj, 1, 1));
   
   Gtk::Label *label129 = Gtk::manage(new class Gtk::Label(_("Netto (kg)")));
   Gtk::Frame *frame22 = Gtk::manage(new class Gtk::Frame());
   Gtk::Adjustment *spinbutton_brutto_adj = Gtk::manage(new class Gtk::Adjustment(0, 0, 999.9, 1, 10, 10));
   spinbutton_brutto = Gtk::manage(new class Gtk::SpinButton(*spinbutton_brutto_adj, 1, 1));
   
   Gtk::Label *label130 = Gtk::manage(new class Gtk::Label(_("Brutto (kg)")));
   Gtk::Frame *frame21 = Gtk::manage(new class Gtk::Frame());
   Gtk::Adjustment *spinbutton_pakete_adj = Gtk::manage(new class Gtk::Adjustment(1, 0, 999, 1, 10, 10));
   spinbutton_pakete = Gtk::manage(new class Gtk::SpinButton(*spinbutton_pakete_adj, 1, 0));
   
   Gtk::Label *label131 = Gtk::manage(new class Gtk::Label(_("Pakete")));
   Gtk::Frame *frame20 = Gtk::manage(new class Gtk::Frame());
   Gtk::Adjustment *spinbutton_paeckchen_adj = Gtk::manage(new class Gtk::Adjustment(1, 0, 999, 1, 10, 10));
   spinbutton_paeckchen = Gtk::manage(new class Gtk::SpinButton(*spinbutton_paeckchen_adj, 1, 0));
   
   Gtk::Label *label132 = Gtk::manage(new class Gtk::Label(_("Päckchen")));
   Gtk::Frame *frame19 = Gtk::manage(new class Gtk::Frame());
   entry_dpdnr = Gtk::manage(new class Gtk::Entry());
   
   Gtk::Button *button_erledigt = Gtk::manage(new class Gtk::Button(_("DPD\n"
		"Fertig")));
   Gtk::HBox *hbox17 = Gtk::manage(new class Gtk::HBox(false, 0));
   Gtk::Label *label133 = Gtk::manage(new class Gtk::Label(_("DPD Nummer")));
   Gtk::Frame *frame23 = Gtk::manage(new class Gtk::Frame());
   table_DPD = Gtk::manage(new class Gtk::Table(2, 2, false));
   
   Gtk::Table *table8 = Gtk::manage(new class Gtk::Table(2, 2, false));
   Gtk::Label *label128 = Gtk::manage(new class Gtk::Label(_("Lieferschein")));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   expander_ls = Gtk::manage(new class Gtk::Expander());
#else //
   expander_ls = Gtk::manage(new class Gtk::HandleBox());
#endif //
   
   Gtk::HSeparator *hseparator3 = Gtk::manage(new class Gtk::HSeparator());
   tree_daten = new class SimpleTree(8);
   
   Gtk::ScrolledWindow *scrolledwindow4 = Gtk::manage(new class Gtk::ScrolledWindow());
   Gtk::Label *label137 = Gtk::manage(new class Gtk::Label(_("<small>Lieferscheinzeilen</small>")));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   frame_zeilen = Gtk::manage(new class Gtk::Expander());
#else //
   frame_zeilen = Gtk::manage(new class Gtk::HandleBox());
#endif //
   lief_notiz = Gtk::manage(new class Gtk::TextView());
   
   Gtk::ScrolledWindow *scrolledwindow16 = Gtk::manage(new class Gtk::ScrolledWindow());
   Gtk::Image *liefnotiz_save_img = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-save"), Gtk::IconSize(3)));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   liefnotiz_save = Gtk::manage(new class Gtk::ToolButton(*liefnotiz_save_img, _("speichern")));
#endif //
   
   Gtk::Toolbar *toolbar16 = Gtk::manage(new class Gtk::Toolbar());
   Gtk::HBox *hbox22 = Gtk::manage(new class Gtk::HBox(false, 0));
   Gtk::Label *label170 = Gtk::manage(new class Gtk::Label(_("<small>Notiz</small>")));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   frame_notiz = Gtk::manage(new class Gtk::Expander());
#else //
   frame_notiz = Gtk::manage(new class Gtk::HandleBox());
#endif //
   
   Gtk::VBox *vpaned2 = Gtk::manage(new class Gtk::VBox(false, 0));
   Gtk::Adjustment *anzahl_adj = Gtk::manage(new class Gtk::Adjustment(1, 0, 1000000, 1, 10, 10));
   anzahl = Gtk::manage(new class Gtk::SpinButton(*anzahl_adj, 1, 0));
   label_kundenauftrag = Gtk::manage(new class Gtk::Label(_("Kundenauftrag")));
   auftragnr = Gtk::manage(new class Gtk::Entry());
   artikelbox = new class ArtikelBox(1);
   
   Gtk::Label *label59 = Gtk::manage(new class Gtk::Label(_("Palette")));
   Gtk::Adjustment *Palette_adj = Gtk::manage(new class Gtk::Adjustment(0, 0, 999, 1, 10, 10));
   Palette = Gtk::manage(new class Gtk::SpinButton(*Palette_adj, 1, 0));
   
   Gtk::Image *button_zeile_modifizieren_img = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-convert"), Gtk::IconSize(3)));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   button_zeile_modifizieren = Gtk::manage(new class Gtk::ToolButton(*button_zeile_modifizieren_img, _("Übernehmen")));
#endif //
   
   Gtk::Toolbar *toolbar12 = Gtk::manage(new class Gtk::Toolbar());
   label_stueck = Gtk::manage(new class Gtk::Label(_("St.")));
   
   Gtk::Label *label50 = Gtk::manage(new class Gtk::Label(_("Anzahl")));
   Gtk::Adjustment *liefermenge_adj = Gtk::manage(new class Gtk::Adjustment(0, 0, 1000000, 1, 10, 10));
   liefermenge = Gtk::manage(new class Gtk::SpinButton(*liefermenge_adj, 1, 3));
   menge_einheit = Gtk::manage(new class Gtk::Label(_("m")));
   label_menge = Gtk::manage(new class Gtk::Label(_("à Menge")));
   table_menge = Gtk::manage(new class Gtk::Table(2, 2, false));
   
   Gtk::Table *table9 = Gtk::manage(new class Gtk::Table(2, 2, false));
   vbox_eingabe = Gtk::manage(new class Gtk::VBox(false, 0));
   
   Gtk::Label *label139 = Gtk::manage(new class Gtk::Label(_("<small>Eingabe</small>")));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   frame_eingabe = Gtk::manage(new class Gtk::Expander());
#else //
   frame_eingabe = Gtk::manage(new class Gtk::HandleBox());
#endif //
   
   Gtk::HSeparator *hseparator4 = Gtk::manage(new class Gtk::HSeparator());
   tree_offen = new class SimpleTree(6);
   
   Gtk::ScrolledWindow *scrolledwindow5 = Gtk::manage(new class Gtk::ScrolledWindow());
   Gtk::Image *button_zeile_uebernehmen_img = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-add"), Gtk::IconSize(3)));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   button_zeile_uebernehmen = Gtk::manage(new class Gtk::ToolButton(*button_zeile_uebernehmen_img, _("Zeile")));
#endif //
   
   Glib::RefPtr<Gdk::PixbufLoader> _button_kompletter_auftrag_img_loader=Gdk::PixbufLoader::create();
   _button_kompletter_auftrag_img_loader->write(stock_attach_png_data, sizeof stock_attach_png_data);
   _button_kompletter_auftrag_img_loader->close();
   
   Gtk::Image *button_kompletter_auftrag_img = Gtk::manage(new class Gtk::Image(_button_kompletter_auftrag_img_loader->get_pixbuf()));
   _button_kompletter_auftrag_img_loader=Glib::RefPtr<Gdk::PixbufLoader>();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   button_kompletter_auftrag = Gtk::manage(new class Gtk::ToolButton(*button_kompletter_auftrag_img, _("Auftrag")));
#endif //
   lagerwahl = new class Optionmenu_Lager();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   
   Gtk::ToolItem *toolitem3 = Gtk::manage(new class Gtk::ToolItem());
#endif //
   Gtk::Toolbar *toolbar6 = Gtk::manage(new class Gtk::Toolbar());
   Gtk::HBox *hbox31 = Gtk::manage(new class Gtk::HBox(false, 0));
   Gtk::Label *label169 = Gtk::manage(new class Gtk::Label(_("<small>Aufträge</small>")));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   expander_order = Gtk::manage(new class Gtk::Expander());
#else //
   expander_order = Gtk::manage(new class Gtk::HandleBox());
#endif //
   
   Gtk::VBox *vbox28 = Gtk::manage(new class Gtk::VBox(false, 0));
   Gtk::VPaned *vpaned3 = Gtk::manage(new class Gtk::VPaned());
   Gtk::VBox *vbox5 = Gtk::manage(new class Gtk::VBox(false, 0));
   
   datei2_menu->items().push_back(Gtk::Menu_Helpers::StockMenuElem(Gtk::StockID("gtk-close")));
   schlie__en2 = (Gtk::ImageMenuItem *)&datei2_menu->items().back();
   
   ungebuchte_lief1_menu->items().push_back(Gtk::Menu_Helpers::MenuElem(_("anzeigen")));
   anzeigen1 = (Gtk::MenuItem *)&ungebuchte_lief1_menu->items().back();
   
   ungebuchte_lief1_menu->items().push_back(Gtk::Menu_Helpers::MenuElem(_("drucken")));
   drucken1 = (Gtk::MenuItem *)&ungebuchte_lief1_menu->items().back();
   
   lieferschein1_menu->items().push_back(Gtk::Menu_Helpers::CheckMenuElem(_("Masseneingabe"), Gtk::GMM_GTKMM_22_24(Menu_Helpers::,)AccelKey(GDK_F1, Gdk::ModifierType(0))));
   masseneingabe2 = (Gtk::CheckMenuItem *)&lieferschein1_menu->items().back();
   
   lieferschein1_menu->items().push_back(Gtk::Menu_Helpers::MenuElem(_("ungebuchte Lief."), *ungebuchte_lief1_menu));
   ungebuchte_lief1 = (Gtk::MenuItem *)&lieferschein1_menu->items().back();
   
   wareneingang1_menu->items().push_back(Gtk::Menu_Helpers::MenuElem(_("WE von Petig")));
   petig_we = (Gtk::MenuItem *)&wareneingang1_menu->items().back();
   
   menubar2->items().push_back(Gtk::Menu_Helpers::MenuElem(_("_File"), *datei2_menu));
   datei2 = (Gtk::MenuItem *)&menubar2->items().back();
   
   menubar2->items().push_back(Gtk::Menu_Helpers::MenuElem(_("_Lieferschein"), *lieferschein1_menu));
   lieferschein1 = (Gtk::MenuItem *)&menubar2->items().back();
   
   menubar2->items().push_back(Gtk::Menu_Helpers::MenuElem(_("_Wareneingang"), *wareneingang1_menu));
   wareneingang1 = (Gtk::MenuItem *)&menubar2->items().back();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar5->append(*button9);
#else //
   
   
   toolbar5->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem(_("Schließen"), *button9_img, Gtk::Toolbar_Helpers::Callback0()));
   Gtk::Button *button9 = static_cast<Gtk::Button *>(toolbar5->tools().back().get_widget());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar5->append(*button10);
#else //
   
   
   toolbar5->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem(_("Neu"), *button10_img, Gtk::Toolbar_Helpers::Callback0()));
   Gtk::Button *button10 = static_cast<Gtk::Button *>(toolbar5->tools().back().get_widget());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar5->append(*button14);
#else //
   
   
   toolbar5->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem(_("Anzeigen"), *button14_img, Gtk::Toolbar_Helpers::Callback0()));
   Gtk::Button *button14 = static_cast<Gtk::Button *>(toolbar5->tools().back().get_widget());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar5->append(*button15);
#else //
   
   
   toolbar5->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem(_("Drucken"), *button15_img, Gtk::Toolbar_Helpers::Callback0()));
   Gtk::Button *button15 = static_cast<Gtk::Button *>(toolbar5->tools().back().get_widget());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar5->append(*toolitem2);
#else //
   toolbar5->tools().push_back(Gtk::Toolbar_Helpers::Element(*checkbutton_ean_drucken));
   
   Gtk::Widget *toolitem2 = toolbar5->tools().back().get_widget();
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar5->append(*lieferzeile_delete);
#else //
   
   
   toolbar5->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem(_("Lief.Zeile\n"
		"löschen"), *lieferzeile_delete_img, Gtk::Toolbar_Helpers::Callback0()));
   lieferzeile_delete = static_cast<Gtk::Button *>(toolbar5->tools().back().get_widget());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar5->append(*separatortoolitem6);
#else //
   toolbar5->tools().push_back(Gtk::Toolbar_Helpers::Space());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar5->append(*button_liste);
#else //
   
   
   toolbar5->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem(_("Liste"), *button_liste_img, Gtk::Toolbar_Helpers::Callback0()));
   Gtk::Button *button_liste = static_cast<Gtk::Button *>(toolbar5->tools().back().get_widget());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar5->append(*lager_buchen);
#else //
   
   
   toolbar5->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem(_("Lager buchen"), *lager_buchen_img, Gtk::Toolbar_Helpers::Callback0()));
   lager_buchen = static_cast<Gtk::Button *>(toolbar5->tools().back().get_widget());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar16->append(*liefnotiz_save);
#else //
   
   
   toolbar16->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem(_("speichern"), *liefnotiz_save_img, Gtk::Toolbar_Helpers::Callback0()));
   liefnotiz_save = static_cast<Gtk::Button *>(toolbar16->tools().back().get_widget());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar12->append(*button_zeile_modifizieren);
#else //
   
   
   toolbar12->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem(_("Übernehmen"), *button_zeile_modifizieren_img, Gtk::Toolbar_Helpers::Callback0()));
   button_zeile_modifizieren = static_cast<Gtk::Button *>(toolbar12->tools().back().get_widget());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar6->append(*button_zeile_uebernehmen);
#else //
   
   
   toolbar6->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem(_("Zeile"), *button_zeile_uebernehmen_img, Gtk::Toolbar_Helpers::Callback0()));
   button_zeile_uebernehmen = static_cast<Gtk::Button *>(toolbar6->tools().back().get_widget());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar6->append(*button_kompletter_auftrag);
#else //
   
   
   toolbar6->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem(_("Auftrag"), *button_kompletter_auftrag_img, Gtk::Toolbar_Helpers::Callback0()));
   button_kompletter_auftrag = static_cast<Gtk::Button *>(toolbar6->tools().back().get_widget());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar6->append(*toolitem3);
#else //
   toolbar6->tools().push_back(Gtk::Toolbar_Helpers::Element(*lagerwahl));
   
   Gtk::Widget *toolitem3 = toolbar6->tools().back().get_widget();
#endif //
   masseneingabe2->set_active(true);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   button9->set_visible_horizontal(true);
   button9->set_visible_vertical(true);
   button9->set_is_important(false);
   button9->set_homogeneous(true);
   button9->set_expand(false);
#endif //
   button9_img->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   button10->set_visible_horizontal(true);
   button10->set_visible_vertical(true);
   button10->set_is_important(false);
   button10->set_homogeneous(true);
   button10->set_expand(false);
#endif //
   button10_img->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   button14->set_visible_horizontal(true);
   button14->set_visible_vertical(true);
   button14->set_is_important(false);
   button14->set_homogeneous(true);
   button14->set_expand(false);
#endif //
   button14_img->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   button15->set_visible_horizontal(true);
   button15->set_visible_vertical(true);
   button15->set_is_important(false);
   button15->set_homogeneous(true);
   button15->set_expand(false);
#endif //
   button15_img->show();
   checkbutton_ean_drucken->set_flags(Gtk::CAN_FOCUS);
   checkbutton_ean_drucken->set_relief(Gtk::RELIEF_NORMAL);
   checkbutton_ean_drucken->set_mode(true);
   checkbutton_ean_drucken->set_active(false);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolitem2->set_visible_horizontal(true);
   toolitem2->set_visible_vertical(true);
   toolitem2->set_is_important(false);
   toolitem2->set_homogeneous(false);
   toolitem2->set_expand(false);
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolitem2->add(*checkbutton_ean_drucken);
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   lieferzeile_delete->set_sensitive(false);
   lieferzeile_delete->set_visible_horizontal(true);
   lieferzeile_delete->set_visible_vertical(true);
   lieferzeile_delete->set_is_important(false);
   lieferzeile_delete->set_homogeneous(true);
   lieferzeile_delete->set_expand(false);
#endif //
   lieferzeile_delete_img->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   separatortoolitem6->set_visible_horizontal(true);
   separatortoolitem6->set_visible_vertical(true);
   separatortoolitem6->set_homogeneous(false);
   separatortoolitem6->set_expand(false);
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   button_liste->set_visible_horizontal(true);
   button_liste->set_visible_vertical(true);
   button_liste->set_is_important(false);
   button_liste->set_homogeneous(true);
   button_liste->set_expand(false);
#endif //
   button_liste_img->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   lager_buchen->set_visible_horizontal(true);
   lager_buchen->set_visible_vertical(true);
   lager_buchen->set_is_important(false);
   lager_buchen->set_homogeneous(true);
   lager_buchen->set_expand(false);
#endif //
   lager_buchen_img->show();
   toolbar5->set_tooltips(true);
   toolbar5->set_toolbar_style(Gtk::TOOLBAR_BOTH);
   toolbar5->set_orientation(Gtk::ORIENTATION_HORIZONTAL);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar5->set_show_arrow(true);
#endif //
   label134->set_alignment(0.5,0.5);
   label134->set_padding(0,0);
   label134->set_justify(Gtk::JUSTIFY_LEFT);
   label134->set_line_wrap(false);
   label134->set_use_markup(false);
   label134->set_selectable(false);
   frame16->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame16->set_label_align(0,0.5);
   frame16->add(*liefernr);
   frame16->set_label_widget(*label134);
   label136->set_alignment(0.5,0.5);
   label136->set_padding(0,0);
   label136->set_justify(Gtk::JUSTIFY_LEFT);
   label136->set_line_wrap(false);
   label136->set_use_markup(false);
   label136->set_selectable(false);
   frame17->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame17->set_label_align(0,0.5);
   frame17->add(*liefdate);
   frame17->set_label_widget(*label136);
   rngnr->set_flags(Gtk::CAN_FOCUS);
   rngnr->set_visibility(true);
   rngnr->set_editable(false);
   rngnr->set_max_length(0);
   rngnr->set_text("");
   rngnr->set_has_frame(true);
   rngnr->set_activates_default(false);
   rngnr->set_width_chars(5);
   button_rng_erledigt->set_flags(Gtk::CAN_FOCUS);
   _tooltips.set_tip(*button_rng_erledigt, _("Lieferschein wird nicht berechnet "), "");
   button_rng_erledigt->set_relief(Gtk::RELIEF_NORMAL);
   hbox16->pack_start(*rngnr);
   hbox16->pack_start(*button_rng_erledigt, Gtk::PACK_SHRINK, 0);
   label135->set_alignment(0.5,0.5);
   label135->set_padding(0,0);
   label135->set_justify(Gtk::JUSTIFY_LEFT);
   label135->set_line_wrap(false);
   label135->set_use_markup(false);
   label135->set_selectable(false);
   frame18->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame18->set_label_align(0,0.5);
   frame18->add(*hbox16);
   frame18->set_label_widget(*label135);
   spinbutton_netto->set_flags(Gtk::CAN_FOCUS);
   spinbutton_netto->set_update_policy(Gtk::UPDATE_ALWAYS);
   spinbutton_netto->set_numeric(false);
   spinbutton_netto->set_digits(1);
   spinbutton_netto->set_wrap(false);
   label129->set_alignment(0.5,0.5);
   label129->set_padding(0,0);
   label129->set_justify(Gtk::JUSTIFY_LEFT);
   label129->set_line_wrap(false);
   label129->set_use_markup(false);
   label129->set_selectable(false);
   frame22->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame22->set_label_align(0,0.5);
   frame22->add(*spinbutton_netto);
   frame22->set_label_widget(*label129);
   spinbutton_brutto->set_flags(Gtk::CAN_FOCUS);
   spinbutton_brutto->set_update_policy(Gtk::UPDATE_ALWAYS);
   spinbutton_brutto->set_numeric(false);
   spinbutton_brutto->set_digits(1);
   spinbutton_brutto->set_wrap(false);
   label130->set_alignment(0.5,0.5);
   label130->set_padding(0,0);
   label130->set_justify(Gtk::JUSTIFY_LEFT);
   label130->set_line_wrap(false);
   label130->set_use_markup(false);
   label130->set_selectable(false);
   frame21->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame21->set_label_align(0,0.5);
   frame21->add(*spinbutton_brutto);
   frame21->set_label_widget(*label130);
   spinbutton_pakete->set_flags(Gtk::CAN_FOCUS);
   spinbutton_pakete->set_update_policy(Gtk::UPDATE_ALWAYS);
   spinbutton_pakete->set_numeric(false);
   spinbutton_pakete->set_digits(0);
   spinbutton_pakete->set_wrap(false);
   label131->set_alignment(0.5,0.5);
   label131->set_padding(0,0);
   label131->set_justify(Gtk::JUSTIFY_LEFT);
   label131->set_line_wrap(false);
   label131->set_use_markup(false);
   label131->set_selectable(false);
   frame20->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame20->set_label_align(0,0.5);
   frame20->add(*spinbutton_pakete);
   frame20->set_label_widget(*label131);
   spinbutton_paeckchen->set_flags(Gtk::CAN_FOCUS);
   spinbutton_paeckchen->set_update_policy(Gtk::UPDATE_ALWAYS);
   spinbutton_paeckchen->set_numeric(false);
   spinbutton_paeckchen->set_digits(0);
   spinbutton_paeckchen->set_wrap(false);
   label132->set_alignment(0.5,0.5);
   label132->set_padding(0,0);
   label132->set_justify(Gtk::JUSTIFY_LEFT);
   label132->set_line_wrap(false);
   label132->set_use_markup(false);
   label132->set_selectable(false);
   frame19->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame19->set_label_align(0,0.5);
   frame19->add(*spinbutton_paeckchen);
   frame19->set_label_widget(*label132);
   entry_dpdnr->set_sensitive(false);
   entry_dpdnr->set_flags(Gtk::CAN_FOCUS);
   entry_dpdnr->set_visibility(true);
   entry_dpdnr->set_editable(false);
   entry_dpdnr->set_max_length(0);
   entry_dpdnr->set_text("");
   entry_dpdnr->set_has_frame(true);
   entry_dpdnr->set_activates_default(false);
   entry_dpdnr->set_width_chars(8);
   button_erledigt->set_flags(Gtk::CAN_FOCUS);
   _tooltips.set_tip(*button_erledigt, _("Lieferschein wird nicht mehr für DPD vorgeschlagen"), "");
   button_erledigt->set_relief(Gtk::RELIEF_NORMAL);
   hbox17->pack_start(*entry_dpdnr);
   hbox17->pack_start(*button_erledigt, Gtk::PACK_SHRINK, 0);
   label133->set_alignment(0.5,0.5);
   label133->set_padding(0,0);
   label133->set_justify(Gtk::JUSTIFY_LEFT);
   label133->set_line_wrap(false);
   label133->set_use_markup(false);
   label133->set_selectable(false);
   frame23->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame23->set_label_align(0,0.5);
   frame23->add(*hbox17);
   frame23->set_label_widget(*label133);
   table_DPD->set_row_spacings(0);
   table_DPD->set_col_spacings(0);
   table_DPD->attach(*frame22, 3, 4, 0, 1, Gtk::FILL, Gtk::FILL, 0, 0);
   table_DPD->attach(*frame21, 2, 3, 0, 1, Gtk::FILL, Gtk::FILL, 0, 0);
   table_DPD->attach(*frame20, 1, 2, 0, 1, Gtk::FILL, Gtk::FILL, 0, 0);
   table_DPD->attach(*frame19, 0, 1, 0, 1, Gtk::FILL, Gtk::FILL, 0, 0);
   table_DPD->attach(*frame23, 4, 5, 0, 1, Gtk::EXPAND|Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table8->set_row_spacings(0);
   table8->set_col_spacings(0);
   table8->attach(*liefer_kunde, 0, 4, 0, 1, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, Gtk::FILL, 0, 0);
   table8->attach(*frame16, 0, 1, 1, 2, Gtk::FILL, Gtk::FILL, 0, 0);
   table8->attach(*frame17, 3, 4, 1, 2, Gtk::FILL, Gtk::FILL, 0, 0);
   table8->attach(*frame18, 2, 3, 1, 2, Gtk::FILL, Gtk::FILL, 0, 0);
   table8->attach(*table_DPD, 1, 2, 1, 2, Gtk::FILL, Gtk::FILL, 0, 0);
   label128->set_alignment(0.5,0.5);
   label128->set_padding(0,0);
   label128->set_justify(Gtk::JUSTIFY_LEFT);
   label128->set_line_wrap(false);
   label128->set_use_markup(false);
   label128->set_selectable(false);
   expander_ls->set_border_width(1);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   expander_ls->set_expanded(true);
   expander_ls->set_spacing(0);
#endif //
   expander_ls->add(*table8);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   expander_ls->set_label_widget(*label128);
#endif //
   scrolledwindow4->set_shadow_type(Gtk::SHADOW_NONE);
   scrolledwindow4->set_policy(Gtk::POLICY_AUTOMATIC, Gtk::POLICY_AUTOMATIC);
   scrolledwindow4->property_window_placement().set_value(Gtk::CORNER_TOP_LEFT);
   scrolledwindow4->add(*tree_daten);
   label137->set_alignment(0.5,0.5);
   label137->set_padding(0,0);
   label137->set_justify(Gtk::JUSTIFY_LEFT);
   label137->set_line_wrap(false);
   label137->set_use_markup(true);
   label137->set_selectable(false);
   frame_zeilen->set_sensitive(false);
   frame_zeilen->set_border_width(1);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   frame_zeilen->set_expanded(true);
   frame_zeilen->set_spacing(0);
#endif //
   frame_zeilen->add(*scrolledwindow4);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   frame_zeilen->set_label_widget(*label137);
#endif //
   lief_notiz->set_flags(Gtk::CAN_FOCUS);
   lief_notiz->set_editable(true);
   lief_notiz->set_cursor_visible(true);
   lief_notiz->set_pixels_above_lines(0);
   lief_notiz->set_pixels_below_lines(0);
   lief_notiz->set_pixels_inside_wrap(0);
   lief_notiz->set_left_margin(0);
   lief_notiz->set_right_margin(0);
   lief_notiz->set_indent(0);
   lief_notiz->set_wrap_mode(Gtk::WRAP_WORD);
   lief_notiz->set_justification(Gtk::JUSTIFY_LEFT);
   scrolledwindow16->set_shadow_type(Gtk::SHADOW_IN);
   scrolledwindow16->set_policy(Gtk::POLICY_AUTOMATIC, Gtk::POLICY_AUTOMATIC);
   scrolledwindow16->property_window_placement().set_value(Gtk::CORNER_TOP_LEFT);
   scrolledwindow16->add(*lief_notiz);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   liefnotiz_save->set_sensitive(false);
   liefnotiz_save->set_visible_horizontal(true);
   liefnotiz_save->set_visible_vertical(true);
   liefnotiz_save->set_is_important(false);
   liefnotiz_save->set_homogeneous(true);
   liefnotiz_save->set_expand(false);
#endif //
   liefnotiz_save_img->show();
   toolbar16->set_tooltips(true);
   toolbar16->set_toolbar_style(Gtk::TOOLBAR_BOTH);
   toolbar16->set_orientation(Gtk::ORIENTATION_HORIZONTAL);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar16->set_show_arrow(false);
#endif //
   hbox22->pack_start(*scrolledwindow16);
   hbox22->pack_start(*toolbar16, Gtk::PACK_SHRINK, 0);
   label170->set_alignment(0.5,0.5);
   label170->set_padding(0,0);
   label170->set_justify(Gtk::JUSTIFY_LEFT);
   label170->set_line_wrap(false);
   label170->set_use_markup(true);
   label170->set_selectable(false);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   frame_notiz->set_expanded(false);
   frame_notiz->set_spacing(0);
#endif //
   frame_notiz->add(*hbox22);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   frame_notiz->set_label_widget(*label170);
#endif //
   vpaned2->pack_start(*frame_zeilen);
   vpaned2->pack_start(*frame_notiz, Gtk::PACK_SHRINK, 0);
   anzahl->set_flags(Gtk::CAN_FOCUS);
   anzahl->set_update_policy(Gtk::UPDATE_ALWAYS);
   anzahl->set_numeric(true);
   anzahl->set_digits(0);
   anzahl->set_wrap(false);
   label_kundenauftrag->set_alignment(0,0.5);
   label_kundenauftrag->set_padding(0,0);
   label_kundenauftrag->set_justify(Gtk::JUSTIFY_LEFT);
   label_kundenauftrag->set_line_wrap(false);
   label_kundenauftrag->set_use_markup(false);
   label_kundenauftrag->set_selectable(false);
   auftragnr->set_flags(Gtk::CAN_FOCUS);
   auftragnr->set_visibility(true);
   auftragnr->set_editable(true);
   auftragnr->set_max_length(0);
   auftragnr->set_text("");
   auftragnr->set_has_frame(true);
   auftragnr->set_activates_default(false);
   auftragnr->set_width_chars(6);
   label59->set_alignment(0,0.5);
   label59->set_padding(0,0);
   label59->set_justify(Gtk::JUSTIFY_CENTER);
   label59->set_line_wrap(false);
   label59->set_use_markup(false);
   label59->set_selectable(false);
   Palette->set_flags(Gtk::CAN_FOCUS);
   Palette->set_update_policy(Gtk::UPDATE_ALWAYS);
   Palette->set_numeric(true);
   Palette->set_digits(0);
   Palette->set_wrap(false);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   button_zeile_modifizieren->set_sensitive(false);
   _tooltips.set_tip(*button_zeile_modifizieren, _("Zeile modifiezieren, nachdem Anzahl, Menge und/oder Palette geändert worden sind."), "");
   button_zeile_modifizieren->set_visible_horizontal(true);
   button_zeile_modifizieren->set_visible_vertical(true);
   button_zeile_modifizieren->set_is_important(false);
   button_zeile_modifizieren->set_homogeneous(true);
   button_zeile_modifizieren->set_expand(false);
   button_zeile_modifizieren->set_tooltip(_tooltips, _("Zeile modifiezieren, nachdem Anzahl, Menge und/oder Palette geändert worden sind."));
#endif //
   button_zeile_modifizieren_img->show();
   toolbar12->set_tooltips(true);
   toolbar12->set_toolbar_style(Gtk::TOOLBAR_BOTH);
   toolbar12->set_orientation(Gtk::ORIENTATION_HORIZONTAL);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar12->set_show_arrow(false);
#endif //
   label_stueck->set_alignment(0,0.5);
   label_stueck->set_padding(0,0);
   label_stueck->set_justify(Gtk::JUSTIFY_LEFT);
   label_stueck->set_line_wrap(false);
   label_stueck->set_use_markup(false);
   label_stueck->set_selectable(false);
   label50->set_alignment(0,0.5);
   label50->set_padding(0,0);
   label50->set_justify(Gtk::JUSTIFY_LEFT);
   label50->set_line_wrap(false);
   label50->set_use_markup(false);
   label50->set_selectable(false);
   liefermenge->set_flags(Gtk::CAN_FOCUS);
   liefermenge->set_update_policy(Gtk::UPDATE_ALWAYS);
   liefermenge->set_numeric(true);
   liefermenge->set_digits(3);
   liefermenge->set_wrap(false);
   menge_einheit->set_alignment(0.5,0.5);
   menge_einheit->set_padding(0,0);
   menge_einheit->set_justify(Gtk::JUSTIFY_CENTER);
   menge_einheit->set_line_wrap(false);
   menge_einheit->set_use_markup(false);
   menge_einheit->set_selectable(false);
   label_menge->set_alignment(0,0.5);
   label_menge->set_padding(0,0);
   label_menge->set_justify(Gtk::JUSTIFY_LEFT);
   label_menge->set_line_wrap(false);
   label_menge->set_use_markup(false);
   label_menge->set_selectable(false);
   label_menge->set_mnemonic_widget(*auftragnr);
   table_menge->set_row_spacings(0);
   table_menge->set_col_spacings(0);
   table_menge->attach(*liefermenge, 0, 1, 1, 2, Gtk::EXPAND|Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table_menge->attach(*menge_einheit, 1, 2, 1, 2, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table_menge->attach(*label_menge, 0, 2, 0, 1, Gtk::FILL, Gtk::EXPAND, 0, 0);
   table9->set_border_width(1);
   table9->set_row_spacings(0);
   table9->set_col_spacings(1);
   table9->attach(*anzahl, 0, 1, 1, 2, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table9->attach(*label_kundenauftrag, 4, 5, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table9->attach(*auftragnr, 4, 5, 1, 2, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table9->attach(*artikelbox, 2, 3, 0, 2, Gtk::EXPAND|Gtk::FILL, Gtk::FILL, 0, 0);
   table9->attach(*label59, 5, 6, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table9->attach(*Palette, 5, 6, 1, 2, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table9->attach(*toolbar12, 6, 7, 0, 2, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table9->attach(*label_stueck, 1, 2, 1, 2, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table9->attach(*label50, 0, 2, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table9->attach(*table_menge, 3, 4, 0, 2, Gtk::FILL, Gtk::FILL, 0, 0);
   vbox_eingabe->pack_start(*table9, Gtk::PACK_SHRINK, 0);
   label139->set_alignment(0.5,0.5);
   label139->set_padding(0,0);
   label139->set_justify(Gtk::JUSTIFY_LEFT);
   label139->set_line_wrap(false);
   label139->set_use_markup(true);
   label139->set_selectable(false);
   frame_eingabe->set_sensitive(false);
   frame_eingabe->set_border_width(1);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   frame_eingabe->set_expanded(true);
   frame_eingabe->set_spacing(0);
#endif //
   frame_eingabe->add(*vbox_eingabe);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   frame_eingabe->set_label_widget(*label139);
#endif //
   scrolledwindow5->set_shadow_type(Gtk::SHADOW_NONE);
   scrolledwindow5->set_policy(Gtk::POLICY_AUTOMATIC, Gtk::POLICY_AUTOMATIC);
   scrolledwindow5->property_window_placement().set_value(Gtk::CORNER_TOP_LEFT);
   scrolledwindow5->add(*tree_offen);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   _tooltips.set_tip(*button_zeile_uebernehmen, _("Ausgewählte Zeile in Lieferschein übernehmen"), "");
   button_zeile_uebernehmen->set_visible_horizontal(true);
   button_zeile_uebernehmen->set_visible_vertical(true);
   button_zeile_uebernehmen->set_is_important(false);
   button_zeile_uebernehmen->set_homogeneous(true);
   button_zeile_uebernehmen->set_expand(false);
   button_zeile_uebernehmen->set_tooltip(_tooltips, _("Ausgewählte Zeile in Lieferschein übernehmen"));
#endif //
   button_zeile_uebernehmen_img->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   _tooltips.set_tip(*button_kompletter_auftrag, _("Kompletten Auftrag in Lieferschein übernehmen"), "");
   button_kompletter_auftrag->set_visible_horizontal(true);
   button_kompletter_auftrag->set_visible_vertical(true);
   button_kompletter_auftrag->set_is_important(false);
   button_kompletter_auftrag->set_homogeneous(true);
   button_kompletter_auftrag->set_expand(false);
   button_kompletter_auftrag->set_tooltip(_tooltips, _("Kompletten Auftrag in Lieferschein übernehmen"));
#endif //
   button_kompletter_auftrag_img->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolitem3->set_visible_horizontal(true);
   toolitem3->set_visible_vertical(true);
   toolitem3->set_is_important(false);
   toolitem3->set_homogeneous(false);
   toolitem3->set_expand(false);
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolitem3->add(*lagerwahl);
#endif //
   toolbar6->set_tooltips(true);
   toolbar6->set_toolbar_style(Gtk::TOOLBAR_BOTH);
   toolbar6->set_orientation(Gtk::ORIENTATION_VERTICAL);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar6->set_show_arrow(false);
#endif //
   hbox31->pack_start(*scrolledwindow5);
   hbox31->pack_start(*toolbar6, Gtk::PACK_SHRINK, 0);
   label169->set_alignment(0.5,0.5);
   label169->set_padding(0,0);
   label169->set_justify(Gtk::JUSTIFY_LEFT);
   label169->set_line_wrap(false);
   label169->set_use_markup(true);
   label169->set_selectable(false);
   expander_order->set_flags(Gtk::CAN_FOCUS);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   expander_order->set_expanded(true);
   expander_order->set_spacing(0);
#endif //
   expander_order->add(*hbox31);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   expander_order->set_label_widget(*label169);
#endif //
   vbox28->pack_start(*frame_eingabe, Gtk::PACK_SHRINK, 0);
   vbox28->pack_start(*hseparator4, Gtk::PACK_SHRINK, 0);
   vbox28->pack_start(*expander_order);
   vpaned3->set_position(130);
   vpaned3->pack1(*vpaned2, Gtk::SHRINK);
   vpaned3->pack2(*vbox28, Gtk::EXPAND|Gtk::SHRINK);
   vbox5->pack_start(*menubar2, Gtk::PACK_SHRINK, 0);
   vbox5->pack_start(*toolbar5, Gtk::PACK_SHRINK, 0);
   vbox5->pack_start(*expander_ls, Gtk::PACK_SHRINK, 0);
   vbox5->pack_start(*hseparator3, Gtk::PACK_SHRINK, 1);
   vbox5->pack_start(*vpaned3);
   auftrag_lieferschein->set_title(_("Lieferscheine"));
   auftrag_lieferschein->set_default_size(800,600);
   auftrag_lieferschein->set_modal(false);
   auftrag_lieferschein->property_window_position().set_value(Gtk::WIN_POS_NONE);
   auftrag_lieferschein->set_resizable(true);
   auftrag_lieferschein->property_destroy_with_parent().set_value(false);
   
   Glib::RefPtr<Gdk::PixbufLoader> _auftrag_lieferschein_loader=Gdk::PixbufLoader::create();
   _auftrag_lieferschein_loader->write(stock_book_green_png_data, sizeof stock_book_green_png_data);
   _auftrag_lieferschein_loader->close();
   auftrag_lieferschein->set_icon(_auftrag_lieferschein_loader->get_pixbuf());
   _auftrag_lieferschein_loader=Glib::RefPtr<Gdk::PixbufLoader>();
   auftrag_lieferschein->add(*vbox5);
   schlie__en2->show();
   datei2_menu->show();
   datei2->show();
   masseneingabe2->show();
   anzeigen1->show();
   drucken1->show();
   ungebuchte_lief1_menu->show();
   ungebuchte_lief1->show();
   lieferschein1_menu->show();
   lieferschein1->show();
   petig_we->show();
   wareneingang1_menu->show();
   wareneingang1->show();
   menubar2->show();
   button9->show();
   button10->show();
   button14->show();
   button15->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolitem2->show();
#endif //
   lieferzeile_delete->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   separatortoolitem6->show();
#endif //
   button_liste->show();
   lager_buchen->show();
   toolbar5->show();
   liefer_kunde->show();
   liefernr->show();
   label134->show();
   frame16->show();
   liefdate->show();
   label136->show();
   frame17->show();
   rngnr->show();
   button_rng_erledigt->show();
   hbox16->show();
   label135->show();
   frame18->show();
   spinbutton_netto->show();
   label129->show();
   frame22->show();
   spinbutton_brutto->show();
   label130->show();
   frame21->show();
   spinbutton_pakete->show();
   label131->show();
   frame20->show();
   spinbutton_paeckchen->show();
   label132->show();
   frame19->show();
   entry_dpdnr->show();
   button_erledigt->show();
   hbox17->show();
   label133->show();
   frame23->show();
   table_DPD->show();
   table8->show();
   label128->show();
   expander_ls->show();
   hseparator3->show();
   tree_daten->show();
   scrolledwindow4->show();
   label137->show();
   frame_zeilen->show();
   lief_notiz->show();
   scrolledwindow16->show();
   liefnotiz_save->show();
   toolbar16->show();
   hbox22->show();
   label170->show();
   frame_notiz->show();
   vpaned2->show();
   anzahl->show();
   label_kundenauftrag->show();
   auftragnr->show();
   artikelbox->show();
   label59->show();
   Palette->show();
   button_zeile_modifizieren->show();
   toolbar12->show();
   label_stueck->show();
   label50->show();
   liefermenge->show();
   menge_einheit->show();
   label_menge->show();
   table_menge->show();
   table9->show();
   vbox_eingabe->show();
   label139->show();
   frame_eingabe->show();
   hseparator4->show();
   tree_offen->show();
   scrolledwindow5->show();
   button_zeile_uebernehmen->show();
   button_kompletter_auftrag->show();
   lagerwahl->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolitem3->show();
#endif //
   toolbar6->show();
   hbox31->show();
   label169->show();
   expander_order->show();
   vbox28->show();
   vpaned3->show();
   vbox5->show();
   auftrag_lieferschein->show();
   schlie__en2->signal_activate().connect(SigC::slot(*this, &auftrag_lieferschein_glade::on_liefer_close), false);
   anzeigen1->signal_activate().connect(SigC::slot(*this, &auftrag_lieferschein_glade::on_ungeb_lief_show_activate), false);
   drucken1->signal_activate().connect(SigC::slot(*this, &auftrag_lieferschein_glade::on_ungeb_lief_print_activate), false);
   petig_we->signal_activate().connect(SigC::slot(*this, &auftrag_lieferschein_glade::on_petig_we_activate), false);
   button9->signal_clicked().connect(SigC::slot(*this, &auftrag_lieferschein_glade::on_liefer_close), false);
   button10->signal_clicked().connect(SigC::slot(*this, &auftrag_lieferschein_glade::on_liefer_neu), false);
   button14->signal_clicked().connect(SigC::slot(*this, &auftrag_lieferschein_glade::on_lief_preview), false);
   button15->signal_clicked().connect(SigC::slot(*this, &auftrag_lieferschein_glade::on_lief_print), false);
   checkbutton_ean_drucken->signal_clicked().connect(SigC::slot(*this, &auftrag_lieferschein_glade::on_checkbutton_ean_drucken_clicked), true);
   lieferzeile_delete->signal_clicked().connect(SigC::slot(*this, &auftrag_lieferschein_glade::liefzeile_delete), false);
   button_liste->signal_clicked().connect(SigC::slot(*this, &auftrag_lieferschein_glade::on_button_liste_clicked), false);
   lager_buchen->signal_clicked().connect(SigC::slot(*this, &auftrag_lieferschein_glade::on_lager_buchen_clicked), false);
   liefer_kunde->signal_activate().connect(SigC::slot(*this, &auftrag_lieferschein_glade::on_lieferkunde_activate));
   liefer_kunde->signal_reset_signal().connect(SigC::slot(*this, &auftrag_lieferschein_glade::on_lieferkunde_reset));
   liefernr->signal_activate().connect(SigC::slot(*this, &auftrag_lieferschein_glade::on_liefnr_activate));
   liefernr->signal_search().connect(SigC::slot(*this, &auftrag_lieferschein_glade::on_liefnr_search), false);
   liefdate->signal_activate().connect(SigC::slot(*this, &auftrag_lieferschein_glade::on_liefdate_activate));
   button_rng_erledigt->signal_clicked().connect(SigC::slot(*this, &auftrag_lieferschein_glade::on_button_rng_erledigt_clicked), false);
   spinbutton_netto->signal_activate().connect(SigC::slot(*this, &auftrag_lieferschein_glade::on_spinbutton_netto_activate), true);
   spinbutton_netto->signal_focus_out_event().connect(SigC::slot(*this, &auftrag_lieferschein_glade::on_spinbutton_netto_focus_out_event), false);
   spinbutton_brutto->signal_activate().connect(SigC::slot(*this, &auftrag_lieferschein_glade::on_spinbutton_brutto_activate), true);
   spinbutton_brutto->signal_focus_out_event().connect(SigC::slot(*this, &auftrag_lieferschein_glade::on_spinbutton_brutto_focus_out_event), false);
   spinbutton_pakete->signal_activate().connect(SigC::slot(*this, &auftrag_lieferschein_glade::on_spinbutton_pakete_activate), true);
   spinbutton_pakete->signal_focus_out_event().connect(SigC::slot(*this, &auftrag_lieferschein_glade::on_spinbutton_pakete_focus_out_event), false);
   spinbutton_paeckchen->signal_activate().connect(SigC::slot(*this, &auftrag_lieferschein_glade::on_spinbutton_paeckchen_activate), true);
   spinbutton_paeckchen->signal_focus_out_event().connect(SigC::slot(*this, &auftrag_lieferschein_glade::on_spinbutton_paeckchen_focus_out_event), false);
   button_erledigt->signal_clicked().connect(SigC::slot(*this, &auftrag_lieferschein_glade::on_button_erledigt_clicked), false);
   tree_daten->signal_leaf_selected().connect(SigC::slot(*this, &auftrag_lieferschein_glade::on_daten_leaf_selected));
   tree_daten->signal_leaf_unselected().connect(SigC::slot(*this, &auftrag_lieferschein_glade::on_daten_unselect_row));
   lief_notiz->get_buffer()->signal_changed().connect(SigC::slot(*this, &auftrag_lieferschein_glade::on_liefnotiz_changed), false);
   liefnotiz_save->signal_clicked().connect(SigC::slot(*this, &auftrag_lieferschein_glade::on_liefnotiz_save_clicked), false);
   anzahl->signal_activate().connect(SigC::slot(*this, &auftrag_lieferschein_glade::on_liefermenge_activate), true);
   auftragnr->signal_activate().connect(SigC::slot(*Palette, &Gtk::Widget::grab_focus), false);
   artikelbox->signal_activate().connect(SigC::slot(*this, &auftrag_lieferschein_glade::on_artikelbox_activate));
   Palette->signal_activate().connect(SigC::slot(*this, &auftrag_lieferschein_glade::on_Palette_activate), true);
   button_zeile_modifizieren->signal_clicked().connect(SigC::slot(*this, &auftrag_lieferschein_glade::on_button_zeile_modifizieren_clicked), false);
   liefermenge->signal_activate().connect(SigC::slot(*auftragnr, &Gtk::Widget::grab_focus), true);
   tree_offen->signal_leaf_selected().connect(SigC::slot(*this, &auftrag_lieferschein_glade::on_offen_leaf_selected));
   tree_offen->signal_leaf_unselected().connect(SigC::slot(*this, &auftrag_lieferschein_glade::on_unselectrow_offauf));
   button_zeile_uebernehmen->signal_clicked().connect(SigC::slot(*this, &auftrag_lieferschein_glade::on_Palette_activate), false);
   button_kompletter_auftrag->signal_clicked().connect(SigC::slot(*this, &auftrag_lieferschein_glade::on_newlieferentryall_ok), false);
   lagerwahl->signal_activate().connect(SigC::slot(*this, &auftrag_lieferschein_glade::on_lagerwahl_changed));
   auftrag_lieferschein->signal_delete_event().connect(SigC::slot(*this, &auftrag_lieferschein_glade::on_liefer_delete), false);
}

auftrag_lieferschein_glade::~auftrag_lieferschein_glade()
{  delete liefer_kunde;
   delete liefernr;
   delete liefdate;
   delete tree_daten;
   delete artikelbox;
   delete tree_offen;
   delete lagerwahl;
   delete gmm_data;
}
