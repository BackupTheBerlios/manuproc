// $Id: PreisListe_sql.pgcc,v 1.1 2002/03/20 07:46:26 christof Exp $
/*  libcommonc++: ManuProC's main OO library
 *  Copyright (C) 1998-2000 Adolf Petig GmbH & Co. KG, written by Christof Petig
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 */

#include <Kunde/PreisListe.h>
#include <Aux/Transaction.h>
#include <Aux/FetchIStream.h>
#include <Aux/itos.h>
#include <Aux/Waehrung.h>

exec sql include sqlca;

cH_PreisListe::cache_t cH_PreisListe::cache;


PreisListe cH_PreisListe::default_object; 
bool cH_PreisListe::default_object_ref=cH_PreisListe::default_object.is_static(true);

cH_PreisListe::cH_PreisListe(PreisListe::ID id)
{
 cH_PreisListe *cached(cache.lookup(id));
 if (cached)  *this=*cached;
 else
  {
    *this=cH_PreisListe(new PreisListe(id));
    cache.Register(id,*this);
  }
}

unsigned int PreisListe::nextval() throw(SQLerror)
{
 exec sql begin declare section;
   unsigned int NR;
 exec sql end declare section;
 exec sql select nextval('kunden_personen_persnr_seq') into :NR;
 SQLerror::test(__FILELINE__);
 return NR;
}



PreisListe::PreisListe(ID _id) throw(SQLerror) 
: id(_id)
{  
   if(_id == none_id) return;   
   exec sql begin declare section;
     int  ID=id;
     char NAME[41];
   exec sql end declare section;

   exec sql select coalesce(notiz,'') into :NAME from ku_preisliste
      where prlsnr = :ID;
   SQLerror::test(__FILELINE__,100);
   if (sqlca.sqlcode)
    { exec sql select firma into :NAME from kunden
      where kundennr = :ID;;
    }
   SQLerror::test(__FILELINE__);
   name=NAME;
}

void PreisListe::createPreisliste(unsigned int nr,const std::string &name) throw(SQLerror)
{
 std::string query="insert into ku_preisliste (prlsnr,notiz,waehrungid) "
      " values ("+itos(nr)+",'"+name+"',"+itos(Waehrung::EUR)+")";
 Query::Execute(query);
 SQLerror::test(__FILELINE__);
}

