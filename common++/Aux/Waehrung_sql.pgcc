// $Id: Waehrung_sql.pgcc,v 1.19 2006/06/26 07:53:01 christof Exp $
/*  libcommonc++: ManuProC's main OO library
 *  Copyright (C) 1998-2000 Adolf Petig GmbH & Co. KG, written by Jacek Jakubowski
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 */

#include<Misc/Waehrung.h>
#include <Misc/Query.h>
#include <Misc/i18n.h>

Waehrung::Waehrung(WaehID id)  throw(SQLerror)
: wid(id)
{
 if(id==WaehrungID::None) return;
 Query q("select kurz,lang,tex,fkt from waehrung where wid=?");
 q << id;
 Query::Row r=q.Fetch();
 r >> kurz;
 r >> Query::Row::MapNull(lang,kurz)
   >> Query::Row::MapNull(tex,kurz) 
   >> faktor >> Query::check_eol();
 kurz=dbgettext(kurz);
 lang=dbgettext(lang);
 tex=dbgettext(tex);
}

cP_Waehrung::cache_t cP_Waehrung::cache;

cP_Waehrung::cP_Waehrung(Waehrung::ID wid)
{  Waehrung *cached(cache.lookup(wid));
   if (cached) *this=cached;
   else *this=cache.Register(wid,Waehrung(wid));
}

Query::Row &operator>>(Query::Row &is, Waehrung::ID &wid)
{
  int i;
  is >> i;
  wid=Waehrung::ID(i);
  return is;
}

#if !defined(__GNUC__) || __GNUC__ > 2
const Waehrung::ID Waehrung::default_id;
#endif

