// $Id: ArtikelStamm.pgcc,v 1.3 2001/10/01 12:55:40 christof Exp $
/*  libcommonc++: ManuProC's main OO library
 *  Copyright (C) 1998-2000 Adolf Petig GmbH & Co. KG, written by Christof Petig
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 */

#include <Artikel/ArtikelStamm.h>
exec sql include sqlca;

ArtikelStamm::cache_t ArtikelStamm::cache;

ArtikelStamm::ArtikelStamm(const ArtikelBase &ab)  throw (SQLerror)
	: art(ab)
{  payload_t *cached(cache.lookup(ab.Id()));
   if (cached) 
   {  payload=*cached;
      return;
   }
   exec sql begin declare section;
    int id,typ,inttyp;
    int best_bei,defschem;
   exec sql end declare section;
   id=ab.Id();
      
   exec sql select warengruppe,coalesce(internwarengruppe,warengruppe)
      ,coalesce(bestellen_bei,1),coalesce(defaultschema,1)
   	into :typ, :inttyp, :best_bei, :defschem
   	from artikelstamm where id= :id;
   SQLerror::test(__FILELINE__);
   
   payload.typ=(ArtikelTyp::typ)typ;
   payload.interntyp=(ArtikelTyp::typ)inttyp;
   payload.bestellen_bei=cH_ppsInstanz((ppsInstanz::ppsInstId)best_bei);
   payload.defaultschema=defschem;
   cache.Register(ab.Id(),payload);
}

void ArtikelStamm::set_BestellenBei(const ArtikelBase &artikel,const ppsInstanz::ppsInstId instanz)
{
  exec sql begin declare section;
   int ID;
   int BESTELLEN_BEI=instanz;
  exec sql end declare section;
   ID=artikel.Id();
  exec sql update artikelstamm set stand=now(),bestellen_bei=:BESTELLEN_BEI
      where id =:ID and bestellen_bei!=:BESTELLEN_BEI;
  SQLerror::test(__FILELINE__,100);

  // Und nun noch raus aus dem Cache
  cache.deregister(artikel.Id());
}
