// generated 2004/2/23 20:59:10 CET by jacek@jaceksdell.(none)
// using glademm V2.0.0b
//
// DO NOT EDIT THIS FILE ! It was created using
// glade-- /home/jacek/cvs/fertigwlager/fertigwlager.glade
// for gtk 1.2.10 and gtkmm 1.2.10
//
// Please modify the corresponding derived classes in ./src/wlagermain.cc

#include "config.h"
#include "wlagermain_glade.hh"
#include <gdk/gdkkeysyms.h>
#include <gtk--/accelgroup.h>
#include <libgnomeui/gnome-app.h>
#include <libgnomeui/gnome-app-helper.h>
#include <libgnomeui/gnome-stock.h>
#include <libgnome/libgnome.h>
#include <gtk--/adjustment.h>
#include <gtk--/label.h>
#include <gtk--/button.h>
#include <gtk--/toolbar.h>
#include <gtk--/menu.h>
#include <gtk--/menuitem.h>
#include <gtk--/table.h>
#include <gtk--/scrolledwindow.h>
#include <gtk--/box.h>

wlagermain_glade::wlagermain_glade(
) : Gtk::Window(GTK_WINDOW_TOPLEVEL)
{  
   
   Gtk::Window *wlagermain = this;
   Gtk::AccelGroup *wlagermain_accgrp = Gtk::AccelGroup::create();
   gmm_data = new GlademmData(wlagermain_accgrp);
   menubar1 = manage(new class Gtk::MenuBar());
   {  
      
      static GnomeUIInfo datei1_menu_uiinfo[] = 
      {       { GNOME_APP_UI_ITEM, "Beenden", 0,  0, 0, 0, GNOME_APP_PIXMAP_NONE, 0,  GDK_B, GDK_MOD1_MASK, 0 },
	      GNOMEUIINFO_END 
      };
      static GnomeUIInfo einlagern1_uiinfo[] = 
      {       { GNOME_APP_UI_ITEM, "Einlagern", 0,  0, 0, 0, GNOME_APP_PIXMAP_NONE, 0,  0, (GdkModifierType)0, 0 },
	      { GNOME_APP_UI_ITEM, "Auslagern", 0,  0, 0, 0, GNOME_APP_PIXMAP_NONE, 0,  0, (GdkModifierType)0, 0 },
	      { GNOME_APP_UI_ITEM, "Inventur", 0,  0, 0, 0, GNOME_APP_PIXMAP_NONE, 0,  0, (GdkModifierType)0, 0 },
	      { GNOME_APP_UI_ITEM, "-- keine --", 0,  0, 0, 0, GNOME_APP_PIXMAP_NONE, 0,  0, (GdkModifierType)0, 0 },
	      GNOMEUIINFO_END 
      };
      static GnomeUIInfo std_aktion1_menu_uiinfo[] = 
      {       { GNOME_APP_UI_RADIOITEMS, 0, 0,  einlagern1_uiinfo, 0, 0, GNOME_APP_PIXMAP_NONE, 0,  0, (GdkModifierType)0, 0 },
	      GNOMEUIINFO_END 
      };
      static GnomeUIInfo einstellungen1_menu_uiinfo[] = 
      {       { GNOME_APP_UI_SUBTREE, "std. Aktion", 0,  std_aktion1_menu_uiinfo, 0, 0, GNOME_APP_PIXMAP_NONE, 0,  0, (GdkModifierType)0, 0 },
	      GNOMEUIINFO_END 
      };
      static GnomeUIInfo menubar1_uiinfo[] = 
      {       { GNOME_APP_UI_SUBTREE, "Ende", 0,  datei1_menu_uiinfo, 0, 0, GNOME_APP_PIXMAP_NONE, 0,  0, (GdkModifierType)0, 0 },
	      { GNOME_APP_UI_SUBTREE, "Einstellungen", 0,  einstellungen1_menu_uiinfo, 0, 0, GNOME_APP_PIXMAP_NONE, 0,  0, (GdkModifierType)0, 0 },
	      GNOMEUIINFO_END 
      };
      gnome_app_fill_menu(GTK_MENU_SHELL(menubar1->gtkobj()), menubar1_uiinfo, gmm_data->getAccelGroup()->gtkobj(), true, 0);
      Beenden2 = Gtk::wrap(GTK_MENU_ITEM(datei1_menu_uiinfo[0].widget));
      einlagern1 = Gtk::wrap(GTK_RADIO_MENU_ITEM(einlagern1_uiinfo[0].widget));
      auslagern1 = Gtk::wrap(GTK_RADIO_MENU_ITEM(einlagern1_uiinfo[1].widget));
      inventur1 = Gtk::wrap(GTK_RADIO_MENU_ITEM(einlagern1_uiinfo[2].widget));
      keineaktion = Gtk::wrap(GTK_RADIO_MENU_ITEM(einlagern1_uiinfo[3].widget));
   }
   
   Gtk::Adjustment *mengespin_adj = manage(new class Gtk::Adjustment(0, 0, 1e+06, 1, 10, 10));
   mengespin = manage(new class Gtk::SpinButton(*mengespin_adj, 1, 0));
   
   Gtk::Label *label9 = manage(new class Gtk::Label("Menge"));
   Gtk::Label *label22 = manage(new class Gtk::Label("Lager"));
   Gtk::Toolbar *toolbar1 = manage(new class Gtk::Toolbar(GTK_ORIENTATION_HORIZONTAL, GTK_TOOLBAR_BOTH));
   lagerwahl = manage(new class Gtk::OptionMenu());
   
   Gtk::Table *table1 = manage(new class Gtk::Table(2, 5, false));
   Gtk::Label *label16 = manage(new class Gtk::Label("aktueller Lagerbestand Stk."));
   lagerbestand = manage(new class Gtk::Entry());
   
   Gtk::Table *table3 = manage(new class Gtk::Table(2, 1, false));
   artikelbox = new class ArtikelBox("Warenlager","");
   
   Gtk::Table *table2 = manage(new class Gtk::Table(1, 2, false));
   buchung_clist = manage(new class Gtk::CList(6));
   
   Gtk::ScrolledWindow *scrolledwindow1 = manage(new class Gtk::ScrolledWindow());
   Gtk::VBox *vbox1 = manage(new class Gtk::VBox(false, 0));
   
   toolbar1->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem("Einlagern", *Gtk::wrap(gnome_stock_pixmap_widget(GTK_WIDGET(gtkobj()), GNOME_STOCK_PIXMAP_ADD)), 0));
   Gtk::Button *button_einlagern = static_cast<Gtk::Button *>(toolbar1->tools().back()->get_widget());
   
   toolbar1->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem("Auslagern", *Gtk::wrap(gnome_stock_pixmap_widget(GTK_WIDGET(gtkobj()), GNOME_STOCK_PIXMAP_REMOVE)), 0));
   Gtk::Button *button_auslagern = static_cast<Gtk::Button *>(toolbar1->tools().back()->get_widget());
   
   toolbar1->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem("Inventur", *Gtk::wrap(gnome_stock_pixmap_widget(GTK_WIDGET(gtkobj()), GNOME_STOCK_PIXMAP_COLORSELECTOR)), 0));
   Gtk::Button *button_inventur = static_cast<Gtk::Button *>(toolbar1->tools().back()->get_widget());
   toolbar1->tools().push_back(Gtk::Toolbar_Helpers::Space());
   
   
   toolbar1->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem("leeren", *Gtk::wrap(gnome_stock_pixmap_widget(GTK_WIDGET(gtkobj()), GNOME_STOCK_PIXMAP_CLEAR)), 0));
   Gtk::Button *button_neu = static_cast<Gtk::Button *>(toolbar1->tools().back()->get_widget());
   
   toolbar1->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem("neuladen", *Gtk::wrap(gnome_stock_pixmap_widget(GTK_WIDGET(gtkobj()), GNOME_STOCK_PIXMAP_REFRESH)), 0));
   Gtk::Button *button_reload = static_cast<Gtk::Button *>(toolbar1->tools().back()->get_widget());
   einlagern1->set_active(false);
   einlagern1->set_show_toggle(true);
   auslagern1->set_active(false);
   auslagern1->set_show_toggle(true);
   inventur1->set_active(false);
   inventur1->set_show_toggle(true);
   keineaktion->set_active(true);
   keineaktion->set_show_toggle(true);
   menubar1->set_name("menubar1");
   menubar1->set_shadow_type(GTK_SHADOW_OUT);
   mengespin->set_usize(100,-1);
   mengespin->set_name("mengespin");
   mengespin->set_flags(GTK_CAN_FOCUS);
   mengespin->set_update_policy(GTK_UPDATE_IF_VALID);
   mengespin->set_numeric(true);
   mengespin->set_digits(0);
   mengespin->set_wrap(false);
   mengespin->set_snap_to_ticks(false);
   label9->set_usize(77,-1);
   label9->set_name("label9");
   label9->set_alignment(0.5,0.5);
   label9->set_padding(0,0);
   label9->set_justify(GTK_JUSTIFY_RIGHT);
   label9->set_line_wrap(false);
   label22->set_name("label22");
   label22->set_alignment(0.5,0.5);
   label22->set_padding(0,0);
   label22->set_justify(GTK_JUSTIFY_CENTER);
   label22->set_line_wrap(false);
   button_einlagern->set_name("button_einlagern");
   button_auslagern->set_name("button_auslagern");
   button_inventur->set_name("button_inventur");
   button_neu->set_name("button_neu");
   button_reload->set_name("button_reload");
   toolbar1->set_name("toolbar1");
   toolbar1->set_space_size(20);
   toolbar1->set_tooltips(true);
   toolbar1->set_space_style(GTK_TOOLBAR_SPACE_EMPTY);
   lagerwahl->set_name("lagerwahl");
   lagerwahl->set_flags(GTK_CAN_FOCUS);
   {  
      
      Gtk::Menu *_m(manage(new Gtk::Menu()));
      Gtk::MenuItem *_mi;
      lagerwahl->set_menu(*_m);
      lagerwahl->set_history(0);
   }
   table1->set_name("table1");
   table1->set_row_spacings(0);
   table1->set_col_spacings(0);
   table1->attach(*mengespin, 1, 2, 1, 2, 0, 0, 0, 0);
   table1->attach(*label9, 0, 1, 1, 2, 0, 0, 0, 0);
   table1->attach(*label22, 0, 1, 0, 1, GTK_FILL, 0, 0, 0);
   table1->attach(*toolbar1, 2, 5, 1, 2, GTK_FILL, 0, 0, 0);
   table1->attach(*lagerwahl, 1, 3, 0, 1, GTK_FILL, 0, 0, 0);
   label16->set_name("label16");
   label16->set_alignment(0.5,0.5);
   label16->set_padding(0,0);
   label16->set_justify(GTK_JUSTIFY_CENTER);
   label16->set_line_wrap(false);
   lagerbestand->set_usize(90,-1);
   lagerbestand->set_name("lagerbestand");
   lagerbestand->set_flags(GTK_CAN_FOCUS);
   lagerbestand->set_visibility(true);
   lagerbestand->set_editable(false);
   lagerbestand->set_text("");
   table3->set_name("table3");
   table3->set_border_width(5);
   table3->set_row_spacings(0);
   table3->set_col_spacings(0);
   table3->attach(*label16, 0, 1, 0, 1, GTK_FILL, 0, 0, 0);
   table3->attach(*lagerbestand, 0, 1, 1, 2, 0, 0, 0, 0);
   artikelbox->set_name("artikelbox");
   table2->set_name("table2");
   table2->set_row_spacings(0);
   table2->set_col_spacings(0);
   table2->attach(*table3, 1, 2, 0, 1, 0, 0, 0, 0);
   table2->attach(*artikelbox, 0, 1, 0, 1, GTK_EXPAND|GTK_FILL, GTK_FILL, 0, 0);
   buchung_clist->set_name("buchung_clist");
   buchung_clist->set_flags(GTK_CAN_FOCUS);
   buchung_clist->set_column_title(0, "Benutzer");
   buchung_clist->set_column_width(0, 80);
   buchung_clist->set_column_title(1, "Aktion");
   buchung_clist->set_column_width(1, 80);
   buchung_clist->set_column_title(2, "Zeitpunkt");
   buchung_clist->set_column_justification(2, GTK_JUSTIFY_RIGHT);
   buchung_clist->set_column_width(2, 80);
   buchung_clist->set_column_title(3, "Menge");
   buchung_clist->set_column_justification(3, GTK_JUSTIFY_RIGHT);
   buchung_clist->set_column_width(3, 80);
   buchung_clist->set_column_title(4, "Bestand");
   buchung_clist->set_column_justification(4, GTK_JUSTIFY_RIGHT);
   buchung_clist->set_column_width(4, 80);
   buchung_clist->set_column_title(5, "Ls.Nr. / We.Nr.");
   buchung_clist->set_column_width(5, 80);
   buchung_clist->set_selection_mode(GTK_SELECTION_SINGLE);
   buchung_clist->set_shadow_type(GTK_SHADOW_IN);
   buchung_clist->column_titles_show();
   scrolledwindow1->set_name("scrolledwindow1");
   scrolledwindow1->set_policy(GTK_POLICY_AUTOMATIC, GTK_POLICY_AUTOMATIC);
   scrolledwindow1->add(*buchung_clist);
   vbox1->set_name("vbox1");
   vbox1->pack_start(*menubar1, false, false, 0);
   vbox1->pack_start(*table1, false, true, 0);
   vbox1->pack_start(*table2, false, true, 0);
   vbox1->pack_start(*scrolledwindow1);
   wlagermain->set_usize(800,600);
   wlagermain->set_name("wlagermain");
   wlagermain->set_title("Warenlager");
   wlagermain->set_modal(false);
   wlagermain->set_position(GTK_WIN_POS_NONE);
   wlagermain->set_policy(true, true, true);
   wlagermain->add_accel_group(*(gmm_data->getAccelGroup()));
   wlagermain->add(*vbox1);
   menubar1->show();
   mengespin->show();
   label9->show();
   label22->show();
   toolbar1->show();
   lagerwahl->show();
   table1->show();
   label16->show();
   lagerbestand->show();
   table3->show();
   artikelbox->show();
   table2->show();
   buchung_clist->show();
   scrolledwindow1->show();
   vbox1->show();
   wlagermain->show();
   Beenden2->activate.connect(SigC::slot(this, &wlagermain_glade::on_beenden));
   einlagern1->activate.connect(SigC::slot(this, &wlagermain_glade::on_einlagern_activate));
   auslagern1->activate.connect(SigC::slot(this, &wlagermain_glade::on_auslagern_activate));
   inventur1->activate.connect(SigC::slot(this, &wlagermain_glade::on_inventur_activate));
   keineaktion->activate.connect(SigC::slot(this, &wlagermain_glade::on_keineaktion_activate));
   mengespin->activate.connect(SigC::slot(this, &wlagermain_glade::on_mengespin_activate));
   mengespin->changed.connect(SigC::slot(this, &wlagermain_glade::on_mengespin_changed));
   button_einlagern->clicked.connect(SigC::slot(this, &wlagermain_glade::on_button_einlagern_clicked));
   button_auslagern->clicked.connect(SigC::slot(this, &wlagermain_glade::on_button_auslagern_clicked));
   button_inventur->clicked.connect(SigC::slot(this, &wlagermain_glade::on_button_inventur_clicked));
   button_neu->clicked.connect(SigC::slot(this, &wlagermain_glade::on_artreset_activate));
   button_reload->clicked.connect(SigC::slot(this, &wlagermain_glade::on_button_reload_clicked));
   lagerwahl->get_menu()->deactivate.connect(SigC::slot(this, &wlagermain_glade::on_lagerwahl_activate));
   artikelbox->activate.connect(SigC::slot(this, &wlagermain_glade::on_artbox_activate));
   wlagermain->delete_event.connect(SigC::slot(this, &wlagermain_glade::on_delete_event));
}

wlagermain_glade::~wlagermain_glade()
{  delete artikelbox;
   delete gmm_data;
}
