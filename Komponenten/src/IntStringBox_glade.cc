/*  libKomponenten: GUI components for ManuProC's libcommon++
 *  Copyright (C) 2001 Adolf Petig GmbH & Co. KG, written by Jacek Jakubowski
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 */

// generated 2001/2/12 17:15:08 CET by christof@puck.(none)
// using glademm V0.5_11e
//
// DO NOT EDIT THIS FILE ! It was created using
// glade-- Komponenten.glade
// for gtk 1.2.8 and gtkmm 1.2.4
//

#include "IntStringBox.hh"

IntStringBox_glade::IntStringBox_glade(
) : Gtk::Table(2, 2, false)
{   
   Gtk::Table *IntStringBox = this;
   label_int = manage(new Gtk::Label("IntStringnr"));
   label_string = manage(new Gtk::Label("Name"));
   sc_int = new SearchCombo();
   scc_string = new SearchComboContent<Kunde::ID>();
   label_int->set_name("label_int");
   label_int->set_alignment(0.5, 0.5);
   label_int->set_padding(0, 0);
   label_string->set_name("label_string");
   label_string->set_alignment(0.5, 0.5);
   label_string->set_padding(0, 0);
   sc_int->set_usize(80, 16);
   sc_int->set_name("sc_int");
   scc_string->set_usize(150, 16);
   scc_string->set_name("scc_string");
   IntStringBox->set_name("IntStringBox");
   IntStringBox->attach(*label_int, 0, 1, 0, 1, 0, 0, 0, 0);
   IntStringBox->attach(*label_string, 1, 2, 0, 1, 0, 0, 0, 0);
   IntStringBox->attach(*sc_int, 0, 1, 1, 2, GTK_FILL, 0, 0, 0);
   IntStringBox->attach(*scc_string, 1, 2, 1, 2, GTK_EXPAND|GTK_SHRINK|GTK_FILL, 0, 0, 0);
   label_int->show();
   label_string->show();
   sc_int->show();
   scc_string->show();
   IntStringBox->show();
   sc_int->activate.connect(SigC::slot(static_cast<class IntStringBox*>(this), &IntStringBox::int_activate));
   sc_int->search.connect(SigC::slot(static_cast<class IntStringBox*>(this), &IntStringBox::int_search));
   scc_string->activate.connect(SigC::slot(static_cast<class IntStringBox*>(this), &IntStringBox::string_activate));
   scc_string->search.connect(SigC::slot(static_cast<class IntStringBox*>(this), &IntStringBox::string_search));
}

IntStringBox_glade::~IntStringBox_glade()
{ 
   delete sc_int;
   delete scc_string;
}
