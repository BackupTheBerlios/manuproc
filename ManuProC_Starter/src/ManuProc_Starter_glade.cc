// generated 2006/1/10 11:01:05 CET by jacek@shindo-debian.(none)
// using glademm V2.12.1
//
// DO NOT EDIT THIS FILE ! It was created using
// glade-- /home/jacek/Monotone/ManuProC_Starter/manuproc_starter.glade
// for gtk 2.6.4 and gtkmm 2.4.11
//
// Please modify the corresponding derived classes in ./src/ManuProc_Starter.cc


#if defined __GNUC__ && __GNUC__ < 3
#error This program will crash if compiled with g++ 2.x
// see the dynamic_cast bug in the gtkmm FAQ
#endif //
#include "config.h"
#include <gtkmmconfig.h>
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
#include <sigc++/compatibility.h>
#include <sigc++/bind.h>
#define GMM_GTKMM_22_24(a,b) b
#else //gtkmm 2.2
#define GMM_GTKMM_22_24(a,b) a
#endif //
#include "ManuProc_Starter_glade.hh"
#include <gdk/gdkkeysyms.h>
#include <gtkmm/accelgroup.h>
#include <gtkmm/radiobutton.h>
#include <gtkmm/alignment.h>
#include <gtkmm/label.h>
#include <gtkmm/image.h>
#include <gtkmm/stockid.h>
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
#include <gtkmm/separatortoolitem.h>
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
#endif //
#include <gtkmm/toolbar.h>
#include <gtkmm/frame.h>
#include <gtkmm/box.h>

ManuProc_Starter_glade::ManuProc_Starter_glade(
) : Gtk::Window(Gtk::WINDOW_TOPLEVEL)
{  
   
   Gtk::Window *ManuProc_Starter = this;
   gmm_data = new GlademmData(get_accel_group());
   
   Gtk::RadioButton::Group _RadioBGroup_database_default;
   database_default = Gtk::manage(new class Gtk::RadioButton(_RadioBGroup_database_default, "Shindo GmbH"));
   database_OLD = Gtk::manage(new class Gtk::RadioButton(_RadioBGroup_database_default, "Shindo Ltd."));
   db_table = Gtk::manage(new class Gtk::Table(2, 2, false));
   
   Gtk::Alignment *alignment3 = Gtk::manage(new class Gtk::Alignment(0.5, 0.5, 1, 1));
   Gtk::Label *db_label = Gtk::manage(new class Gtk::Label("<b>Datenbank</b>"));
   db_frame = Gtk::manage(new class Gtk::Frame());
   
   Gtk::Image *pps_start_img = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-execute"), Gtk::IconSize(3)));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   pps_start = Gtk::manage(new class Gtk::ToolButton(*pps_start_img, "PPS"));
#endif //
   
   Gtk::Image *kunden_start_img = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-open"), Gtk::IconSize(3)));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   kunden_start = Gtk::manage(new class Gtk::ToolButton(*kunden_start_img, "Kunden"));
#endif //
   
   Gtk::Image *lager_start_img = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-paste"), Gtk::IconSize(3)));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   lager_start = Gtk::manage(new class Gtk::ToolButton(*lager_start_img, "Lager"));
#endif //
   
   Gtk::Image *artikel_start_img = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-index"), Gtk::IconSize(3)));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   artikel_start = Gtk::manage(new class Gtk::ToolButton(*artikel_start_img, "Artikel"));
#endif //
   
   Gtk::Image *preise_start_img = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-justify-fill"), Gtk::IconSize(3)));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   preise_start = Gtk::manage(new class Gtk::ToolButton(*preise_start_img, "Preislisten"));
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   
   Gtk::SeparatorToolItem *separatortoolitem2 = Gtk::manage(new class Gtk::SeparatorToolItem());
#endif //
   Gtk::Image *fibu_start_img = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-sort-ascending"), Gtk::IconSize(3)));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   fibu_start = Gtk::manage(new class Gtk::ToolButton(*fibu_start_img, "FiBu"));
#endif //
   
   Gtk::Image *fibu_alt_start_img = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-sort-ascending"), Gtk::IconSize(3)));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   fibu_alt_start = Gtk::manage(new class Gtk::ToolButton(*fibu_alt_start_img, "FiBu (ALT)"));
#endif //
   
   Gtk::Image *taxbird_start_img = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-network"), Gtk::IconSize(3)));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   taxbird_start = Gtk::manage(new class Gtk::ToolButton(*taxbird_start_img, "ELSTER (USt)"));
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   
   Gtk::SeparatorToolItem *separatortoolitem3 = Gtk::manage(new class Gtk::SeparatorToolItem());
#endif //
   Gtk::Image *vertrieb_start_img = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-jump-to"), Gtk::IconSize(3)));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   vertrieb_start = Gtk::manage(new class Gtk::ToolButton(*vertrieb_start_img, "Vertrieb"));
#endif //
   
   Gtk::Image *ooo_img = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-select-font"), Gtk::IconSize(3)));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   ooo = Gtk::manage(new class Gtk::ToolButton(*ooo_img, "OpenOffice"));
#endif //
   
   Gtk::Image *preview_img = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-dialog-error"), Gtk::IconSize(3)));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   preview = Gtk::manage(new class Gtk::ToolButton(*preview_img, "(vorab)"));
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   
   Gtk::SeparatorToolItem *separatortoolitem1 = Gtk::manage(new class Gtk::SeparatorToolItem());
#endif //
   Gtk::Image *quit_img = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-quit"), Gtk::IconSize(3)));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   quit = Gtk::manage(new class Gtk::ToolButton(*quit_img, "Beenden"));
#endif //
   
   Gtk::Toolbar *toolbar1 = Gtk::manage(new class Gtk::Toolbar());
   Gtk::Alignment *alignment2 = Gtk::manage(new class Gtk::Alignment(0.5, 0.5, 1, 1));
   Gtk::Label *label2 = Gtk::manage(new class Gtk::Label("<b>Programme</b>"));
   Gtk::Frame *frame2 = Gtk::manage(new class Gtk::Frame());
   Gtk::Image *lagerwert_img = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-find-and-replace"), Gtk::IconSize(3)));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   lagerwert = Gtk::manage(new class Gtk::ToolButton(*lagerwert_img, "Lagerwert"));
#endif //
   
   Gtk::Image *offeneposten_img = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-dialog-info"), Gtk::IconSize(3)));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   offeneposten = Gtk::manage(new class Gtk::ToolButton(*offeneposten_img, "offene Posten"));
#endif //
   
   Gtk::Image *translate_img = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-copy"), Gtk::IconSize(3)));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   translate = Gtk::manage(new class Gtk::ToolButton(*translate_img, "Ãœbersetzen"));
#endif //
   
   Gtk::Toolbar *toolbar2 = Gtk::manage(new class Gtk::Toolbar());
   Gtk::Alignment *alignment1 = Gtk::manage(new class Gtk::Alignment(0.5, 0.5, 1, 1));
   Gtk::Label *label1 = Gtk::manage(new class Gtk::Label("<b>Skripte / Auswertungen</b>"));
   Gtk::Frame *frame1 = Gtk::manage(new class Gtk::Frame());
   Gtk::VBox *vbox1 = Gtk::manage(new class Gtk::VBox(false, 0));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar1->append(*pps_start);
#else //
   
   
   toolbar1->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem("PPS", *pps_start_img, Gtk::Toolbar_Helpers::Callback0()));
   pps_start = static_cast<Gtk::Button *>(toolbar1->tools().back().get_widget());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar1->append(*kunden_start);
#else //
   
   
   toolbar1->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem("Kunden", *kunden_start_img, Gtk::Toolbar_Helpers::Callback0()));
   kunden_start = static_cast<Gtk::Button *>(toolbar1->tools().back().get_widget());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar1->append(*lager_start);
#else //
   
   
   toolbar1->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem("Lager", *lager_start_img, Gtk::Toolbar_Helpers::Callback0()));
   lager_start = static_cast<Gtk::Button *>(toolbar1->tools().back().get_widget());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar1->append(*artikel_start);
#else //
   
   
   toolbar1->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem("Artikel", *artikel_start_img, Gtk::Toolbar_Helpers::Callback0()));
   artikel_start = static_cast<Gtk::Button *>(toolbar1->tools().back().get_widget());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar1->append(*preise_start);
#else //
   
   
   toolbar1->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem("Preislisten", *preise_start_img, Gtk::Toolbar_Helpers::Callback0()));
   preise_start = static_cast<Gtk::Button *>(toolbar1->tools().back().get_widget());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar1->append(*separatortoolitem2);
#else //
   toolbar1->tools().push_back(Gtk::Toolbar_Helpers::Space());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar1->append(*fibu_start);
#else //
   
   
   toolbar1->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem("FiBu", *fibu_start_img, Gtk::Toolbar_Helpers::Callback0()));
   fibu_start = static_cast<Gtk::Button *>(toolbar1->tools().back().get_widget());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar1->append(*fibu_alt_start);
#else //
   
   
   toolbar1->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem("FiBu (ALT)", *fibu_alt_start_img, Gtk::Toolbar_Helpers::Callback0()));
   fibu_alt_start = static_cast<Gtk::Button *>(toolbar1->tools().back().get_widget());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar1->append(*taxbird_start);
#else //
   
   
   toolbar1->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem("ELSTER (USt)", *taxbird_start_img, Gtk::Toolbar_Helpers::Callback0()));
   taxbird_start = static_cast<Gtk::Button *>(toolbar1->tools().back().get_widget());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar1->append(*separatortoolitem3);
#else //
   toolbar1->tools().push_back(Gtk::Toolbar_Helpers::Space());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar1->append(*vertrieb_start);
#else //
   
   
   toolbar1->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem("Vertrieb", *vertrieb_start_img, Gtk::Toolbar_Helpers::Callback0()));
   vertrieb_start = static_cast<Gtk::Button *>(toolbar1->tools().back().get_widget());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar1->append(*ooo);
#else //
   
   
   toolbar1->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem("OpenOffice", *ooo_img, Gtk::Toolbar_Helpers::Callback0()));
   ooo = static_cast<Gtk::Button *>(toolbar1->tools().back().get_widget());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar1->append(*preview);
#else //
   
   
   toolbar1->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem("(vorab)", *preview_img, Gtk::Toolbar_Helpers::Callback0()));
   preview = static_cast<Gtk::Button *>(toolbar1->tools().back().get_widget());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar1->append(*separatortoolitem1);
#else //
   toolbar1->tools().push_back(Gtk::Toolbar_Helpers::Space());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar1->append(*quit);
#else //
   
   
   toolbar1->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem("Beenden", *quit_img, Gtk::Toolbar_Helpers::Callback0()));
   quit = static_cast<Gtk::Button *>(toolbar1->tools().back().get_widget());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar2->append(*lagerwert);
#else //
   
   
   toolbar2->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem("Lagerwert", *lagerwert_img, Gtk::Toolbar_Helpers::Callback0()));
   lagerwert = static_cast<Gtk::Button *>(toolbar2->tools().back().get_widget());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar2->append(*offeneposten);
#else //
   
   
   toolbar2->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem("offene Posten", *offeneposten_img, Gtk::Toolbar_Helpers::Callback0()));
   offeneposten = static_cast<Gtk::Button *>(toolbar2->tools().back().get_widget());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar2->append(*translate);
#else //
   
   
   toolbar2->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem("Ãœbersetzen", *translate_img, Gtk::Toolbar_Helpers::Callback0()));
   translate = static_cast<Gtk::Button *>(toolbar2->tools().back().get_widget());
#endif //
   database_default->set_flags(Gtk::CAN_FOCUS);
   database_default->set_relief(Gtk::RELIEF_NORMAL);
   database_default->set_mode(true);
   database_default->set_active(true);
   database_OLD->set_flags(Gtk::CAN_FOCUS);
   database_OLD->set_relief(Gtk::RELIEF_NORMAL);
   database_OLD->set_mode(true);
   database_OLD->set_active(false);
   db_table->set_row_spacings(0);
   db_table->set_col_spacings(0);
   db_table->attach(*database_default, 0, 1, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   db_table->attach(*database_OLD, 1, 2, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   alignment3->add(*db_table);
   db_label->set_alignment(0.5,0.5);
   db_label->set_padding(0,0);
   db_label->set_justify(Gtk::JUSTIFY_LEFT);
   db_label->set_line_wrap(false);
   db_label->set_use_markup(true);
   db_label->set_selectable(false);
   db_frame->set_sensitive(false);
   db_frame->set_shadow_type(Gtk::SHADOW_NONE);
   db_frame->set_label_align(0,0.5);
   db_frame->add(*alignment3);
   db_frame->set_label_widget(*db_label);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   pps_start->set_visible_horizontal(true);
   pps_start->set_visible_vertical(true);
   pps_start->set_is_important(false);
   pps_start->set_homogeneous(true);
   pps_start->set_expand(false);
#endif //
   pps_start_img->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   kunden_start->set_visible_horizontal(true);
   kunden_start->set_visible_vertical(true);
   kunden_start->set_is_important(false);
   kunden_start->set_homogeneous(true);
   kunden_start->set_expand(false);
#endif //
   kunden_start_img->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   lager_start->set_visible_horizontal(true);
   lager_start->set_visible_vertical(true);
   lager_start->set_is_important(false);
   lager_start->set_homogeneous(true);
   lager_start->set_expand(false);
#endif //
   lager_start_img->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   artikel_start->set_visible_horizontal(true);
   artikel_start->set_visible_vertical(true);
   artikel_start->set_is_important(false);
   artikel_start->set_homogeneous(true);
   artikel_start->set_expand(false);
#endif //
   artikel_start_img->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   preise_start->set_visible_horizontal(true);
   preise_start->set_visible_vertical(true);
   preise_start->set_is_important(false);
   preise_start->set_homogeneous(true);
   preise_start->set_expand(false);
#endif //
   preise_start_img->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   separatortoolitem2->set_visible_horizontal(true);
   separatortoolitem2->set_visible_vertical(true);
   separatortoolitem2->set_homogeneous(false);
   separatortoolitem2->set_expand(false);
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   fibu_start->set_sensitive(false);
   fibu_start->set_visible_horizontal(true);
   fibu_start->set_visible_vertical(true);
   fibu_start->set_is_important(false);
   fibu_start->set_homogeneous(true);
   fibu_start->set_expand(false);
#endif //
   fibu_start_img->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   fibu_alt_start->set_sensitive(false);
   fibu_alt_start->set_visible_horizontal(true);
   fibu_alt_start->set_visible_vertical(true);
   fibu_alt_start->set_is_important(false);
   fibu_alt_start->set_homogeneous(true);
   fibu_alt_start->set_expand(false);
#endif //
   fibu_alt_start_img->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   taxbird_start->set_sensitive(false);
   taxbird_start->set_visible_horizontal(true);
   taxbird_start->set_visible_vertical(true);
   taxbird_start->set_is_important(false);
   taxbird_start->set_homogeneous(true);
   taxbird_start->set_expand(false);
#endif //
   taxbird_start_img->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   separatortoolitem3->set_visible_horizontal(true);
   separatortoolitem3->set_visible_vertical(true);
   separatortoolitem3->set_homogeneous(false);
   separatortoolitem3->set_expand(false);
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   vertrieb_start->set_sensitive(false);
   vertrieb_start->set_visible_horizontal(true);
   vertrieb_start->set_visible_vertical(true);
   vertrieb_start->set_is_important(false);
   vertrieb_start->set_homogeneous(true);
   vertrieb_start->set_expand(false);
#endif //
   vertrieb_start_img->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   ooo->set_sensitive(false);
   ooo->set_visible_horizontal(true);
   ooo->set_visible_vertical(true);
   ooo->set_is_important(false);
   ooo->set_homogeneous(true);
   ooo->set_expand(false);
#endif //
   ooo_img->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   preview->set_visible_horizontal(true);
   preview->set_visible_vertical(true);
   preview->set_is_important(false);
   preview->set_homogeneous(true);
   preview->set_expand(false);
#endif //
   preview_img->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   separatortoolitem1->set_visible_horizontal(true);
   separatortoolitem1->set_visible_vertical(true);
   separatortoolitem1->set_homogeneous(false);
   separatortoolitem1->set_expand(false);
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   quit->set_visible_horizontal(true);
   quit->set_visible_vertical(true);
   quit->set_is_important(false);
   quit->set_homogeneous(true);
   quit->set_expand(false);
#endif //
   quit_img->show();
   toolbar1->set_tooltips(true);
   toolbar1->set_toolbar_style(Gtk::TOOLBAR_BOTH);
   toolbar1->set_orientation(Gtk::ORIENTATION_HORIZONTAL);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar1->set_show_arrow(false);
#endif //
   alignment2->add(*toolbar1);
   label2->set_alignment(0.5,0.5);
   label2->set_padding(0,0);
   label2->set_justify(Gtk::JUSTIFY_LEFT);
   label2->set_line_wrap(false);
   label2->set_use_markup(true);
   label2->set_selectable(false);
   frame2->set_border_width(5);
   frame2->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame2->set_label_align(0,0.5);
   frame2->add(*alignment2);
   frame2->set_label_widget(*label2);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   lagerwert->set_sensitive(false);
   _tooltips.set_tip(*lagerwert, "zeigt & druckt die Lagerbewertung zum gewÃ¼nschten Stichtag", "");
   lagerwert->set_visible_horizontal(true);
   lagerwert->set_visible_vertical(true);
   lagerwert->set_is_important(false);
   lagerwert->set_homogeneous(true);
   lagerwert->set_expand(false);
   lagerwert->set_tooltip(_tooltips, "zeigt & druckt die Lagerbewertung zum gewÃ¼nschten Stichtag");
#endif //
   lagerwert_img->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   offeneposten->set_sensitive(false);
   _tooltips.set_tip(*offeneposten, "zeigt & druckt die Liste der offenen Posten", "");
   offeneposten->set_visible_horizontal(true);
   offeneposten->set_visible_vertical(true);
   offeneposten->set_is_important(false);
   offeneposten->set_homogeneous(true);
   offeneposten->set_expand(false);
   offeneposten->set_tooltip(_tooltips, "zeigt & druckt die Liste der offenen Posten");
#endif //
   offeneposten_img->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   translate->set_visible_horizontal(true);
   translate->set_visible_vertical(true);
   translate->set_is_important(false);
   translate->set_homogeneous(true);
   translate->set_expand(false);
#endif //
   translate_img->show();
   toolbar2->set_tooltips(true);
   toolbar2->set_toolbar_style(Gtk::TOOLBAR_BOTH);
   toolbar2->set_orientation(Gtk::ORIENTATION_HORIZONTAL);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar2->set_show_arrow(true);
#endif //
   alignment1->add(*toolbar2);
   label1->set_alignment(0.5,0.5);
   label1->set_padding(0,0);
   label1->set_justify(Gtk::JUSTIFY_LEFT);
   label1->set_line_wrap(false);
   label1->set_use_markup(true);
   label1->set_selectable(false);
   frame1->set_border_width(5);
   frame1->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame1->set_label_align(0,0.5);
   frame1->add(*alignment1);
   frame1->set_label_widget(*label1);
   vbox1->pack_start(*db_frame);
   vbox1->pack_start(*frame2, Gtk::PACK_SHRINK, 0);
   vbox1->pack_start(*frame1, Gtk::PACK_SHRINK, 0);
   ManuProc_Starter->set_title("ManuProC_Starter");
   ManuProc_Starter->set_modal(false);
   ManuProc_Starter->property_window_position().set_value(Gtk::WIN_POS_NONE);
   ManuProc_Starter->set_resizable(false);
   ManuProc_Starter->property_destroy_with_parent().set_value(false);
   ManuProc_Starter->add(*vbox1);
   database_default->show();
   database_OLD->show();
   db_table->show();
   alignment3->show();
   db_label->show();
   db_frame->show();
   pps_start->show();
   kunden_start->show();
   lager_start->show();
   artikel_start->show();
   preise_start->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   separatortoolitem2->show();
#endif //
   fibu_start->show();
   fibu_alt_start->show();
   taxbird_start->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   separatortoolitem3->show();
#endif //
   vertrieb_start->show();
   ooo->show();
   preview->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   separatortoolitem1->show();
#endif //
   quit->show();
   toolbar1->show();
   alignment2->show();
   label2->show();
   frame2->show();
   lagerwert->show();
   offeneposten->show();
   translate->show();
   toolbar2->show();
   alignment1->show();
   label1->show();
   frame1->show();
   vbox1->show();
   ManuProc_Starter->show();
   database_default->signal_toggled().connect(SigC::slot(*this, &ManuProc_Starter_glade::on_database_toggled), false);
   database_OLD->signal_toggled().connect(SigC::slot(*this, &ManuProc_Starter_glade::on_database_toggled), false);
   pps_start->signal_clicked().connect(SigC::slot(*this, &ManuProc_Starter_glade::on_pps_start_clicked), false);
   kunden_start->signal_clicked().connect(SigC::slot(*this, &ManuProc_Starter_glade::on_kunden_start_enter), false);
   lager_start->signal_clicked().connect(SigC::slot(*this, &ManuProc_Starter_glade::on_lager_start_clicked), false);
   artikel_start->signal_clicked().connect(SigC::slot(*this, &ManuProc_Starter_glade::on_artikel_start_clicked), false);
   preise_start->signal_clicked().connect(SigC::slot(*this, &ManuProc_Starter_glade::on_preise_start_clicked), false);
   fibu_start->signal_clicked().connect(SigC::slot(*this, &ManuProc_Starter_glade::on_fibu_start_clicked), false);
   fibu_alt_start->signal_clicked().connect(SigC::slot(*this, &ManuProc_Starter_glade::on_fibu_alt_start_clicked), false);
   taxbird_start->signal_clicked().connect(SigC::slot(*this, &ManuProc_Starter_glade::on_taxbird_start_clicked), false);
   vertrieb_start->signal_clicked().connect(SigC::slot(*this, &ManuProc_Starter_glade::on_vertrieb_start_clicked), false);
   ooo->signal_clicked().connect(SigC::slot(*this, &ManuProc_Starter_glade::on_ooo_clicked), false);
   preview->signal_clicked().connect(SigC::slot(*this, &ManuProc_Starter_glade::on_preview_clicked), false);
   quit->signal_clicked().connect(SigC::slot(*this, &ManuProc_Starter_glade::on_quit_clicked), false);
   lagerwert->signal_clicked().connect(SigC::slot(*this, &ManuProc_Starter_glade::on_lagerwert_clicked), false);
   offeneposten->signal_clicked().connect(SigC::slot(*this, &ManuProc_Starter_glade::on_offeneposten_clicked), false);
   translate->signal_clicked().connect(SigC::slot(*this, &ManuProc_Starter_glade::on_translate_clicked), false);
}

ManuProc_Starter_glade::~ManuProc_Starter_glade()
{  delete gmm_data;
}
