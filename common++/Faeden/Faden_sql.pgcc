/*  libcommonc++: ManuProC's main OO library
 *  Copyright (C) 2002 Adolf Petig GmbH & Co. KG
 *  written by Jacek Jakubowski, Christof Petig, Malte Thoma
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 */

// $Id: Faden_sql.pgcc,v 1.7 2003/10/23 09:27:27 christof Exp $

#include <Faden.hh>
#include <Misc/Transaction.h>
#include <Misc/FetchIStream.h>

static FetchIStream &operator>>(FetchIStream &is, Bindung &b)
{  int bnr;
   is >> bnr;
   b=Bindung::getById(bnr);
   return is;
}

static FetchIStream &operator>>(FetchIStream &is, Faden &f)
{  int znr;
   is >> znr >> f.anzahl >> f.material >> f.bindung
   	>> FetchIStream::MapNull(f.kettscheibe,-1)
   	>> FetchIStream::MapNull(f.max_kettlaenge)
   	>> FetchIStream::MapNull(f.max_fadenzahl);
   return is;
}

void Fadenliste::Load(const ArtikelBase &ab,const Bindungsliste &bindungsliste)
{  erase();
   
   ArtikelBase var_von;
   Query("select variante_von from webangaben where artikel=?")
   	<< ab
   	>> FetchIStream::MapNull(var_von);
   if (!!var_von)
   {
   }
   else
   {  std::vector<Faden> vfd;
      
      Query q("select zeilennummer, anzahl, material, bindung, kettscheibe, "
      	"max_kettlaenge, max_fadenzahl "
      	"from webang_faeden where artikel=? order by zeilennummer");
      q << ab;
      q.FetchArray(vfd);
      for (std::vector<Faden>::const_iterator i=vfd.begin();i!=vfd.end();++i)
      {  add(*i,-1);
      }

      Query q2("select anfangszeile, endzeile, wiederholungen "
		"from webang_wiederhol where artikel=? "
		// request small ones first so we print it right
		"order by endzeile-anfangszeile");
      q2 << ab;
      FetchIStream is;
      while ((q2>>is).good())
      {  int anfangszeile, endzeile, wiederholungen;
         is >> anfangszeile >> endzeile >> wiederholungen;
         is.ThrowIfNotEmpty(__FILELINE__);
         rep_add(anfangszeile, endzeile, wiederholungen);
      }
      
   }
}
