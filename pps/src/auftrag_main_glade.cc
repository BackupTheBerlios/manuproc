// generated 2006/6/23 11:46:41 CEST by jacek@jaceksdell.(none)
// using glademm V2.12.1
//
// DO NOT EDIT THIS FILE ! It was created using
// glade-- /home/jacek/Monotone/pps/auftrag.glade
// for gtk 2.8.6 and gtkmm 2.8.0
//
// Please modify the corresponding derived classes in ./src/auftrag_main.cc


#if defined __GNUC__ && __GNUC__ < 3
#error This program will crash if compiled with g++ 2.x
// see the dynamic_cast bug in the gtkmm FAQ
#endif //
#include "config.h"
/*
 * Standard gettext macros.
 */
#ifdef ENABLE_NLS
#  include <libintl.h>
#  undef _
#  define _(String) dgettext (GETTEXT_PACKAGE, String)
#  ifdef gettext_noop
#    define N_(String) gettext_noop (String)
#  else
#    define N_(String) (String)
#  endif
#endif
#include <gtkmmconfig.h>
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
#include <sigc++/compatibility.h>
#include <sigc++/bind.h>
#define GMM_GTKMM_22_24(a,b) b
#else //gtkmm 2.2
#define GMM_GTKMM_22_24(a,b) a
#endif //
#include "auftrag_main_glade.hh"
#include <gdk/gdkkeysyms.h>
#include <gtkmm/accelgroup.h>
#include "../pixmaps/wintext.xpm"
#include <gtkmm/imagemenuitem.h>
#include <gtk/gtkimagemenuitem.h>
#include <gtkmm/menu.h>
#include <gtkmm/menuitem.h>
#include <gtkmm/image.h>
#include <gdkmm/pixbufloader.h>

static const unsigned char stock_search_replace_png_data[] = 
{       	137,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,
	0,0,0,24,0,0,0,24,8,6,0,0,0,224,119,61,
	248,0,0,0,6,98,75,71,68,0,189,0,189,0,189,105,
	66,213,168,0,0,3,17,73,68,65,84,120,218,213,149,77,
	104,212,71,24,198,127,51,179,171,198,220,86,44,248,129,31,
	24,37,52,6,34,5,99,172,145,101,195,230,160,184,122,210,
	163,65,65,162,61,196,26,91,16,34,98,75,192,75,3,66,
	146,131,244,146,131,73,173,120,168,98,90,216,178,37,77,213,
	4,178,210,24,72,118,215,133,21,109,246,35,66,15,217,252,
	119,53,171,121,61,196,252,205,199,154,172,154,139,47,204,241,
	125,126,51,207,204,243,14,124,6,37,111,87,222,210,159,42,
	30,10,156,161,229,162,119,6,180,44,187,157,45,46,45,23,
	189,139,158,224,131,108,184,117,235,231,25,177,101,19,23,64,
	218,218,154,37,26,189,39,177,88,223,178,137,11,32,93,93,
	237,50,50,210,35,225,112,175,68,163,255,124,148,184,35,159,
	199,157,157,173,84,84,148,161,212,244,27,16,17,74,74,170,
	9,5,206,208,253,215,99,206,253,232,47,120,167,179,1,210,
	212,212,68,50,153,164,162,162,12,145,41,68,64,107,197,255,
	145,219,124,87,183,133,82,79,59,0,169,212,32,7,15,158,
	100,96,96,96,73,128,154,13,72,36,18,28,57,114,152,203,
	151,207,178,97,195,23,56,28,78,180,86,148,151,215,48,57,
	153,99,116,52,136,49,6,135,195,129,214,10,151,171,108,190,
	198,130,154,147,3,167,211,73,119,247,239,52,55,95,37,151,
	203,49,53,53,133,214,154,72,164,151,120,252,33,198,24,180,
	214,104,173,48,198,112,253,122,171,109,107,65,0,173,95,162,
	212,11,68,156,244,244,244,147,203,77,18,14,71,57,117,234,
	123,182,109,219,203,214,173,123,168,171,59,203,208,80,8,165,
	20,62,95,237,146,22,205,75,178,226,196,137,111,56,122,180,
	22,143,167,138,39,79,254,227,210,165,159,56,118,236,48,247,
	239,255,134,223,223,69,77,77,53,141,141,63,48,56,56,140,
	82,10,203,138,46,122,138,57,0,151,107,61,181,181,187,113,
	187,247,178,122,117,49,109,109,29,156,62,125,28,175,183,134,
	77,155,118,242,234,213,107,182,111,223,130,207,231,229,202,149,
	86,148,154,182,63,16,184,249,94,200,28,192,133,11,141,120,
	60,95,179,114,229,10,180,214,244,246,246,83,85,245,21,235,
	214,125,201,240,112,63,150,149,97,98,34,195,154,53,46,2,
	129,123,118,95,101,229,46,66,161,191,243,66,230,228,96,243,
	230,141,24,99,80,74,161,181,6,20,150,149,225,233,211,97,
	38,38,50,88,214,244,202,102,179,11,118,122,227,198,237,188,
	22,205,6,168,250,250,111,37,22,123,96,3,246,239,175,164,
	175,239,33,165,165,227,100,50,89,27,16,143,167,240,120,246,
	217,141,197,197,37,239,46,113,241,75,134,88,44,129,211,233,
	196,24,195,249,243,245,116,116,220,36,24,124,68,58,109,145,
	78,91,60,123,22,167,165,229,26,119,239,254,201,232,104,98,
	70,92,177,68,30,236,242,249,124,146,76,254,43,169,212,160,
	140,141,61,146,64,224,87,57,112,192,35,69,69,171,164,168,
	104,149,184,221,110,105,104,104,176,167,234,82,122,249,168,242,
	252,249,16,74,41,148,226,109,176,180,253,98,146,201,49,118,
	236,168,46,68,39,191,69,128,90,187,182,28,99,180,157,92,
	165,20,217,236,11,238,220,241,207,136,207,183,228,131,199,182,
	248,253,191,200,248,120,88,210,233,136,4,131,127,200,161,67,
	239,29,209,5,219,181,160,49,157,142,72,103,103,123,33,205,
	31,253,249,124,242,151,248,6,135,248,92,1,178,242,134,255,
	0,0,0,69,122,84,88,116,83,111,102,116,119,97,114,101,
	0,0,120,218,115,208,80,214,244,204,77,76,79,245,77,76,
	207,76,206,86,48,209,51,208,51,81,176,180,208,55,48,209,
	55,48,84,72,46,202,44,46,169,116,40,174,204,45,72,44,
	201,76,206,215,203,47,74,7,0,124,106,15,249,120,246,20,
	194,0,0,0,51,122,84,88,116,83,105,103,110,97,116,117,
	114,101,0,0,120,218,75,181,48,77,181,52,51,77,75,179,
	48,77,52,78,77,77,54,51,78,73,50,75,52,76,51,55,
	49,53,54,78,51,52,7,0,153,178,9,7,196,158,132,70,
	0,0,0,0,73,69,78,68,174,66,96,130,

};

#include <gtkmm/stockid.h>
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
#include <gtkmm/separatortoolitem.h>
#endif //

static const unsigned char stock_book_red_png_data[] = 
{       	137,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,
	0,0,0,24,0,0,0,24,8,6,0,0,0,224,119,61,
	248,0,0,0,6,98,75,71,68,0,189,0,189,0,189,105,
	66,213,168,0,0,1,92,73,68,65,84,120,218,99,96,24,
	5,3,13,24,137,84,247,159,92,243,88,136,49,188,197,223,
	159,65,93,85,149,225,247,247,239,12,63,191,126,197,170,40,
	113,193,2,172,226,76,196,56,139,24,195,183,109,219,74,150,
	5,255,251,66,67,25,24,24,24,112,26,78,8,16,244,129,
	172,188,60,195,239,239,223,113,202,227,115,61,33,11,254,175,
	46,41,193,27,52,200,224,195,199,247,12,12,88,18,3,46,
	11,136,10,26,100,215,63,122,118,143,52,31,16,10,26,116,
	215,87,20,215,49,48,96,73,166,216,44,248,63,37,50,146,
	42,174,199,233,3,118,86,86,170,184,158,129,1,51,163,253,
	159,151,158,201,144,52,115,58,92,192,198,193,148,65,66,82,
	140,193,248,39,59,131,4,31,31,134,235,95,191,125,133,215,
	1,24,57,89,64,74,146,225,225,213,75,12,2,210,82,112,
	177,157,187,118,51,236,220,185,139,161,114,238,124,12,215,231,
	231,20,225,116,61,214,32,250,240,236,57,134,34,119,55,87,
	134,190,222,110,134,143,31,222,48,124,252,240,134,225,208,161,
	3,68,185,30,171,205,34,156,92,255,223,124,255,198,192,192,
	192,192,176,163,179,147,65,196,197,154,65,85,89,3,69,205,
	197,75,87,24,158,60,125,194,16,21,25,131,215,245,88,131,
	232,205,247,111,112,13,30,229,229,240,140,179,190,170,138,65,
	54,216,139,65,85,89,131,225,250,237,139,12,239,63,124,36,
	232,122,82,193,127,24,158,159,144,0,99,211,12,208,220,130,
	17,4,0,237,35,159,175,244,118,198,45,0,0,0,69,122,
	84,88,116,83,111,102,116,119,97,114,101,0,0,120,218,115,
	208,80,214,244,204,77,76,79,245,77,76,207,76,206,86,48,
	209,51,208,51,81,176,180,208,55,48,209,55,48,84,72,46,
	202,44,46,169,116,40,174,204,45,72,44,201,76,206,215,203,
	47,74,7,0,124,106,15,249,120,246,20,194,0,0,0,51,
	122,84,88,116,83,105,103,110,97,116,117,114,101,0,0,120,
	218,51,182,72,74,53,52,76,78,52,73,54,48,53,76,54,
	77,78,54,75,52,48,52,176,72,179,52,50,72,50,48,55,
	178,0,0,145,102,8,120,1,11,150,155,0,0,0,0,73,
	69,78,68,174,66,96,130,

};
static const unsigned char stock_book_green_png_data[] = 
{       	137,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,
	0,0,0,24,0,0,0,24,8,6,0,0,0,224,119,61,
	248,0,0,0,6,98,75,71,68,0,189,0,189,0,189,105,
	66,213,168,0,0,1,87,73,68,65,84,120,218,99,96,24,
	5,3,13,24,73,80,251,159,28,51,89,136,53,60,49,61,
	156,65,75,91,157,225,199,143,31,12,95,191,125,195,170,168,
	163,97,10,134,24,19,177,206,39,198,240,109,219,182,146,101,
	193,255,172,252,120,6,6,6,6,156,134,227,3,68,249,64,
	81,89,158,225,199,143,31,56,229,113,185,158,24,11,254,119,
	79,170,195,27,52,200,224,195,199,247,12,12,104,137,1,159,
	5,68,5,13,178,235,31,61,187,71,154,15,8,5,13,186,
	235,43,138,235,24,24,208,146,41,46,11,254,23,148,165,82,
	236,122,188,62,96,99,101,163,216,245,12,12,216,51,218,255,
	121,233,153,12,73,173,83,225,2,54,14,166,12,18,146,98,
	12,2,130,252,12,34,98,66,24,174,127,253,246,21,78,203,
	177,230,100,1,41,73,134,135,87,47,49,8,72,75,193,197,
	118,238,218,205,176,115,231,46,140,220,250,225,227,123,134,252,
	156,34,172,174,199,25,68,31,158,61,199,16,115,119,115,101,
	232,235,237,102,248,248,225,13,195,199,15,111,24,14,29,58,
	64,208,245,56,109,21,225,228,250,255,230,59,36,114,231,46,
	154,204,160,175,109,200,160,170,172,129,162,230,226,165,43,12,
	79,158,62,97,136,138,140,193,105,14,206,32,122,243,253,27,
	92,67,114,92,46,60,227,76,152,218,202,96,99,97,207,160,
	170,172,193,112,253,246,69,134,247,31,62,50,80,27,252,135,
	225,138,134,28,24,155,102,128,230,22,140,16,0,0,75,190,
	158,130,96,161,27,215,0,0,0,69,122,84,88,116,83,111,
	102,116,119,97,114,101,0,0,120,218,115,208,80,214,244,204,
	77,76,79,245,77,76,207,76,206,86,48,209,51,208,51,81,
	176,180,208,55,48,209,55,48,84,72,46,202,44,46,169,116,
	40,174,204,45,72,44,201,76,206,215,203,47,74,7,0,124,
	106,15,249,120,246,20,194,0,0,0,51,122,84,88,116,83,
	105,103,110,97,116,117,114,101,0,0,120,218,51,48,48,75,
	54,183,76,180,76,51,50,179,72,53,177,52,73,78,54,55,
	75,74,51,183,76,78,179,76,77,77,181,52,4,0,142,226,
	9,22,40,85,209,27,0,0,0,0,73,69,78,68,174,66,
	96,130,

};
static const unsigned char stock_book_yellow_png_data[] = 
{       	137,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,
	0,0,0,24,0,0,0,24,8,6,0,0,0,224,119,61,
	248,0,0,0,6,98,75,71,68,0,189,0,189,0,189,105,
	66,213,168,0,0,1,96,73,68,65,84,120,218,99,96,24,
	5,3,13,24,137,84,247,159,92,243,88,136,49,124,237,252,
	56,6,81,73,77,134,63,191,127,48,252,254,245,21,171,34,
	247,224,30,172,226,76,196,56,139,24,195,183,109,219,74,150,
	5,255,55,46,73,99,96,96,96,192,105,56,33,64,208,7,
	130,34,138,12,127,126,255,192,41,143,207,245,132,44,248,127,
	104,71,59,222,160,65,6,31,62,190,103,96,192,146,24,112,
	89,64,84,208,32,187,254,209,179,123,164,249,128,80,208,160,
	187,190,162,184,142,129,1,75,50,197,102,193,255,173,43,114,
	168,226,122,156,62,96,98,102,163,138,235,25,24,48,51,218,
	255,121,233,153,12,158,161,125,112,1,27,7,83,6,9,73,
	49,134,104,15,81,6,46,30,17,12,215,191,126,251,10,175,
	3,48,114,178,128,148,36,195,195,171,151,24,4,164,165,224,
	98,59,119,237,102,216,178,115,23,195,220,185,168,185,245,195,
	199,247,12,249,57,69,56,93,143,53,136,62,60,123,142,25,
	222,110,174,12,125,189,221,12,31,63,188,97,248,248,225,13,
	195,161,67,7,136,114,61,86,155,69,56,185,254,191,249,254,
	141,129,129,129,129,225,244,161,25,12,140,220,58,12,170,202,
	26,40,106,46,94,186,194,240,228,233,19,134,168,200,24,188,
	174,199,26,68,111,190,127,131,107,48,181,203,128,103,156,163,
	187,123,24,216,133,44,24,84,149,53,24,174,223,190,200,240,
	254,195,71,130,174,39,21,252,135,225,157,107,75,96,108,154,
	1,154,91,48,130,0,0,252,227,158,119,74,242,34,158,0,
	0,0,69,122,84,88,116,83,111,102,116,119,97,114,101,0,
	0,120,218,115,208,80,214,244,204,77,76,79,245,77,76,207,
	76,206,86,48,209,51,208,51,81,176,180,208,55,48,209,55,
	48,84,72,46,202,44,46,169,116,40,174,204,45,72,44,201,
	76,206,215,203,47,74,7,0,124,106,15,249,120,246,20,194,
	0,0,0,51,122,84,88,116,83,105,103,110,97,116,117,114,
	101,0,0,120,218,51,73,50,79,52,51,49,73,51,51,181,
	180,52,53,77,182,72,78,50,72,53,55,51,181,72,77,181,
	52,48,52,75,73,4,0,140,21,8,168,204,69,14,124,0,
	0,0,0,73,69,78,68,174,66,96,130,

};
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
#endif //

#include "../pixmaps/stock_convert_rev2.xpm"
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
#include <gtkmm/toolbutton.h>
#else //
#include <gtkmm/button.h>
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
#endif //
#include <gtkmm/toolbar.h>
#include <gtkmm/label.h>
#include <gtkmm/box.h>
#include <gtkmm/adjustment.h>
#include <gtkmm/scrolledwindow.h>
#include <gtkmm/frame.h>
#include "../pixmaps/print_image.xpm"
#include <gtkmm/table.h>
#ifndef ENABLE_NLS
#  define textdomain(String) (String)
#  define gettext(String) (String)
#  define dgettext(Domain,Message) (Message)
#  define dcgettext(Domain,Message,Type) (Message)
#  define bindtextdomain(Domain,Directory) (Domain)
#  define _(String) (String)
#  define N_(String) (String)
#endif


auftrag_main_glade::auftrag_main_glade(
) : Gtk::Window(Gtk::WINDOW_TOPLEVEL)
{  auftrag_main = this;
   gmm_data = new GlademmData(get_accel_group());
   
   Gtk::ImageMenuItem *beenden = NULL;
   Gtk::Menu *main_datei_menu = Gtk::manage(new class Gtk::Menu());
   Gtk::MenuItem *main_datei = NULL;
   Gtk::Image *image13 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-properties"), Gtk::IconSize(1)));
   Gtk::ImageMenuItem *erfassen = NULL;
   Gtk::Image *image14 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-refresh"), Gtk::IconSize(1)));
   Gtk::ImageMenuItem *neuladen = NULL;
   Gtk::ImageMenuItem *main_drucken = NULL;
   Gtk::MenuItem *trennlinie2 = NULL;
   Glib::RefPtr<Gdk::PixbufLoader> _image15_loader=Gdk::PixbufLoader::create();
   _image15_loader->write(stock_search_replace_png_data, sizeof stock_search_replace_png_data);
   _image15_loader->close();
   
   Gtk::Image *image15 = Gtk::manage(new class Gtk::Image(_image15_loader->get_pixbuf()));
   _image15_loader=Glib::RefPtr<Gdk::PixbufLoader>();
   
   Gtk::ImageMenuItem *abschreiben = NULL;
   Gtk::Menu *bearbeiten_menu = Gtk::manage(new class Gtk::Menu());
   Gtk::MenuItem *bearbeiten = NULL;
   Gtk::RadioMenuItem::Group _RadioMIGroup_main_kndbez;
   main_kndbez = NULL;
   main_intbez = NULL;
   Gtk::MenuItem *trennlinie5 = NULL;
   Gtk::RadioMenuItem::Group _RadioMIGroup_kundenauftragsnummer;
   kundenauftragsnummer = NULL;
   interne_auftragsnummer = NULL;
   Gtk::MenuItem *trennlinie3 = NULL;
   Gtk::RadioMenuItem::Group _RadioMIGroup_kalenderwoche;
   kalenderwoche = NULL;
   datum = NULL;
   Gtk::MenuItem *trennlinie4 = NULL;
   Gtk::RadioMenuItem::Group _RadioMIGroup_kunden_name1;
   kunden_name1 = NULL;
   kunden_ort = NULL;
   kunden_nr = NULL;
   Gtk::MenuItem *trennlinie6 = NULL;
   Gtk::RadioMenuItem::Group _RadioMIGroup_materialbedarf_sortiert_nach_artikel;
   materialbedarf_sortiert_nach_artikel = NULL;
   materialbedarf_sortiert_nach_menge = NULL;
   Gtk::MenuItem *trennlinie8 = NULL;
   Gtk::RadioMenuItem::Group _RadioMIGroup_auftraege_ohne_kunde;
   auftraege_ohne_kunde = NULL;
   auftraege_mit_kunde = NULL;
   Gtk::Menu *main_einstellungen_menu = Gtk::manage(new class Gtk::Menu());
   Gtk::MenuItem *main_einstellungen = NULL;
   preload_orders = NULL;
   Gtk::MenuItem *trennlinie10 = NULL;
   Gtk::RadioMenuItem::Group _RadioMIGroup_alle_auftraege;
   alle_auftraege = NULL;
   unbestaetigte_auftraege = NULL;
   offene_auftraege = NULL;
   stornierte_auftraege = NULL;
   geschlossene_auftraege = NULL;
   Gtk::MenuItem *trennlinie7 = NULL;
   Gtk::RadioMenuItem::Group _RadioMIGroup_ungeplante_menge_menu;
   ungeplante_menge_menu = NULL;
   plan_menge_menu = NULL;
   dispo_menge_menu = NULL;
   alle_lagermengen = NULL;
   Gtk::Menu *auftr__ge_menu = Gtk::manage(new class Gtk::Menu());
   Gtk::MenuItem *auftr__ge = NULL;
   Gtk::Image *image16 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-properties"), Gtk::IconSize(1)));
   Gtk::ImageMenuItem *bestellplanung = NULL;
   Gtk::Menu *bestellplanung1_menu = Gtk::manage(new class Gtk::Menu());
   Gtk::MenuItem *bestellplanung1 = NULL;
   main_menubar = Gtk::manage(new class Gtk::MenuBar());
   
   Gtk::Image *endemain_button_img = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-quit"), Gtk::IconSize(3)));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   endemain_button = Gtk::manage(new class Gtk::ToolButton(*endemain_button_img, _("beenden")));
#endif //
   
   Gtk::Image *mainprint_button_img = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-print"), Gtk::IconSize(3)));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   mainprint_button = Gtk::manage(new class Gtk::ToolButton(*mainprint_button_img, _("drucken")));
#endif //
   
   Gtk::Image *mainreload_button_img = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-refresh"), Gtk::IconSize(3)));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   mainreload_button = Gtk::manage(new class Gtk::ToolButton(*mainreload_button_img, _("neu laden")));
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   
   Gtk::SeparatorToolItem *separatortoolitem1 = Gtk::manage(new class Gtk::SeparatorToolItem());
#endif //
   Glib::RefPtr<Gdk::PixbufLoader> _erfassen_button_img_loader=Gdk::PixbufLoader::create();
   _erfassen_button_img_loader->write(stock_book_red_png_data, sizeof stock_book_red_png_data);
   _erfassen_button_img_loader->close();
   
   Gtk::Image *erfassen_button_img = Gtk::manage(new class Gtk::Image(_erfassen_button_img_loader->get_pixbuf()));
   _erfassen_button_img_loader=Glib::RefPtr<Gdk::PixbufLoader>();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   erfassen_button = Gtk::manage(new class Gtk::ToolButton(*erfassen_button_img, _("Auftrag")));
#endif //
   
   Glib::RefPtr<Gdk::PixbufLoader> _lieferschein_button_img_loader=Gdk::PixbufLoader::create();
   _lieferschein_button_img_loader->write(stock_book_green_png_data, sizeof stock_book_green_png_data);
   _lieferschein_button_img_loader->close();
   
   Gtk::Image *lieferschein_button_img = Gtk::manage(new class Gtk::Image(_lieferschein_button_img_loader->get_pixbuf()));
   _lieferschein_button_img_loader=Glib::RefPtr<Gdk::PixbufLoader>();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   lieferschein_button = Gtk::manage(new class Gtk::ToolButton(*lieferschein_button_img, _("Liefersch.")));
#endif //
   
   Glib::RefPtr<Gdk::PixbufLoader> _rechnung_button_img_loader=Gdk::PixbufLoader::create();
   _rechnung_button_img_loader->write(stock_book_yellow_png_data, sizeof stock_book_yellow_png_data);
   _rechnung_button_img_loader->close();
   
   Gtk::Image *rechnung_button_img = Gtk::manage(new class Gtk::Image(_rechnung_button_img_loader->get_pixbuf()));
   _rechnung_button_img_loader=Glib::RefPtr<Gdk::PixbufLoader>();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   rechnung_button = Gtk::manage(new class Gtk::ToolButton(*rechnung_button_img, _("Rechnung")));
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   
   Gtk::SeparatorToolItem *separatortoolitem2 = Gtk::manage(new class Gtk::SeparatorToolItem());
#endif //
   Gtk::Image *togglebutton_bestellen_img = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-properties"), Gtk::IconSize(3)));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   togglebutton_bestellen = Gtk::manage(new class Gtk::ToggleToolButton(*togglebutton_bestellen_img, _("Bestellen")));
#endif //
   
   Gtk::Image *togglebutton_material_img = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-convert"), Gtk::IconSize(3)));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   togglebutton_material = Gtk::manage(new class Gtk::ToggleToolButton(*togglebutton_material_img, _("Material")));
#endif //
   
   Glib::RefPtr<Gdk::Bitmap> _togglebutton_auftraege_img_mask;
   Glib::RefPtr<Gdk::Pixmap> _togglebutton_auftraege_img_pixmap = Gdk::Pixmap::create_from_xpm(get_default_colormap(), _togglebutton_auftraege_img_mask, stock_convert_rev2_xpm);
   Gtk::Image *togglebutton_auftraege_img = Gtk::manage(new class Gtk::Image(_togglebutton_auftraege_img_pixmap, _togglebutton_auftraege_img_mask));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   togglebutton_auftraege = Gtk::manage(new class Gtk::ToggleToolButton(*togglebutton_auftraege_img, _("Aufträge")));
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   
   Gtk::SeparatorToolItem *separatortoolitem3 = Gtk::manage(new class Gtk::SeparatorToolItem());
#endif //
   Gtk::Image *button_artikeleingabe_img = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-select-color"), Gtk::IconSize(3)));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   Gtk::ToolButton *button_artikeleingabe = Gtk::manage(new class Gtk::ToolButton(*button_artikeleingabe_img, _("Artikel")));
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   Gtk::SeparatorToolItem *separatortoolitem4 = Gtk::manage(new class Gtk::SeparatorToolItem());
#endif //
   Gtk::Image *button_auftrag_erledigt_img = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-delete"), Gtk::IconSize(3)));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   button_auftrag_erledigt = Gtk::manage(new class Gtk::ToolButton(*button_auftrag_erledigt_img, _("erledigt")));
#endif //
   
   Gtk::Image *button_Kunden_erledigt_img = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-delete"), Gtk::IconSize(3)));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   button_Kunden_erledigt = Gtk::manage(new class Gtk::ToolButton(*button_Kunden_erledigt_img, _("aufräumen")));
#endif //
   
   Gtk::Image *button_faerben_img = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-media-forward"), Gtk::IconSize(3)));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   button_faerben = Gtk::manage(new class Gtk::ToolButton(*button_faerben_img, _("Färben")));
#endif //
   
   Gtk::Toolbar *toolbar1 = Gtk::manage(new class Gtk::Toolbar());
   Gtk::Label *label118 = Gtk::manage(new class Gtk::Label(_("aktuelle Instanz")));
   akt_instanz = new class Optionmenu_Instanz();
   
   Gtk::Label *label110 = Gtk::manage(new class Gtk::Label(_("  für Warengruppe")));
   offen_warengruppe = new class Optionmenu_Warengruppe();
   
   Gtk::HBox *hbox32 = Gtk::manage(new class Gtk::HBox(false, 0));
   maintree_s = new class SimpleTree(13);
   scrolledwindow_maintree_s = Gtk::manage(new class Gtk::ScrolledWindow());
   
   Gtk::VBox *vbox11 = Gtk::manage(new class Gtk::VBox(false, 0));
   Gtk::Label *label37 = Gtk::manage(new class Gtk::Label(_("offene Mengen")));
   frame_offene_mengen = Gtk::manage(new class Gtk::Frame());
   viewport_materialbedarf = Gtk::manage(new class Gtk::Viewport(*manage(new Gtk::Adjustment(0,0,1)), *manage(new Gtk::Adjustment(0,0,1))));
   
   Gtk::ScrolledWindow *scrolledwindow11 = Gtk::manage(new class Gtk::ScrolledWindow());
   Gtk::Label *label119 = Gtk::manage(new class Gtk::Label(_("Materialbedarf")));
   frame_materialbedarf = Gtk::manage(new class Gtk::Frame());
   vpaned_an_mat = Gtk::manage(new class Gtk::VPaned());
   Datum_instanz = new class datewin();
   
   Gtk::Label *label121 = Gtk::manage(new class Gtk::Label(_("geplante Verfügbarkeit")));
   Gtk::Frame *frame32 = Gtk::manage(new class Gtk::Frame());
   Glib::RefPtr<Gdk::Bitmap> _pixmap6_mask;
   Glib::RefPtr<Gdk::Pixmap> _pixmap6_pixmap = Gdk::Pixmap::create_from_xpm(get_default_colormap(), _pixmap6_mask, stock_convert_rev2_xpm);
   Gtk::Image *pixmap6 = Gtk::manage(new class Gtk::Image(_pixmap6_pixmap, _pixmap6_mask));
   Gtk::Label *label93 = Gtk::manage(new class Gtk::Label(_("Selektierte(n)\n"
		"Auftr. planen")));
   Gtk::HBox *hbox14 = Gtk::manage(new class Gtk::HBox(false, 0));
   button_instanz_get_selection = Gtk::manage(new class Gtk::Button());
   
   Glib::RefPtr<Gdk::Bitmap> _pixmap4_mask;
   Glib::RefPtr<Gdk::Pixmap> _pixmap4_pixmap = Gdk::Pixmap::create_from_xpm(get_default_colormap(), _pixmap4_mask, print_image_xpm);
   Gtk::Image *pixmap4 = Gtk::manage(new class Gtk::Image(_pixmap4_pixmap, _pixmap4_mask));
   Gtk::Label *label86 = Gtk::manage(new class Gtk::Label(_("Drucken")));
   Gtk::HBox *hbox12 = Gtk::manage(new class Gtk::HBox(false, 0));
   Gtk::Button *button_instanz_print = Gtk::manage(new class Gtk::Button());
   Glib::RefPtr<Gdk::Bitmap> _pixmap3_mask;
   Glib::RefPtr<Gdk::Pixmap> _pixmap3_pixmap = Gdk::Pixmap::create_from_xpm(get_default_colormap(), _pixmap3_mask, wintext_xpm);
   Gtk::Image *pixmap3 = Gtk::manage(new class Gtk::Image(_pixmap3_pixmap, _pixmap3_mask));
   Gtk::Label *label84 = Gtk::manage(new class Gtk::Label(_("Neuer\n"
		"Auftrag")));
   Gtk::HBox *hbox11 = Gtk::manage(new class Gtk::HBox(false, 0));
   button_neue_anr = Gtk::manage(new class Gtk::Button());
   searchcombo_auftragid = new class OrderBox();
   
   Gtk::Label *label122 = Gtk::manage(new class Gtk::Label(_("Auftragsnummer")));
   Gtk::Frame *frame31 = Gtk::manage(new class Gtk::Frame());
   Gtk::Adjustment *spinbutton_geplante_menge_adj = Gtk::manage(new class Gtk::Adjustment(0, 0, 10000000, 1, 10, 10));
   spinbutton_geplante_menge = Gtk::manage(new class Gtk::SpinButton(*spinbutton_geplante_menge_adj, 1, 0));
   
   Gtk::Label *label123 = Gtk::manage(new class Gtk::Label(_("Menge")));
   frame_mengen_eingabe = Gtk::manage(new class Gtk::Frame());
   OptMen_Instanz_Bestellen = new class Optionmenu_Instanz();
   kunden_lieferant = new class KundenBox2();
   
   Gtk::HBox *hbox21 = Gtk::manage(new class Gtk::HBox(false, 0));
   Gtk::Table *table24 = Gtk::manage(new class Gtk::Table(2, 2, false));
   Gtk::Frame *frame15 = Gtk::manage(new class Gtk::Frame());
   Gtk::Table *table18 = Gtk::manage(new class Gtk::Table(2, 2, false));
   info_label_instanzen = Gtk::manage(new class Gtk::Label(_("info text (etwas länger)")));
   table_instanzen = Gtk::manage(new class Gtk::Table(2, 2, false));
   tree_neuer_auftrag = new class SimpleTree(4);
   
   Gtk::ScrolledWindow *scrolledwindow9 = Gtk::manage(new class Gtk::ScrolledWindow());
   Gtk::VBox *vbox16 = Gtk::manage(new class Gtk::VBox(false, 0));
   Gtk::Label *label120 = Gtk::manage(new class Gtk::Label(_("Bestellung")));
   frame_instanzen = Gtk::manage(new class Gtk::Frame());
   
   Gtk::VBox *vbox15 = Gtk::manage(new class Gtk::VBox(false, 0));
   
   main_datei_menu->items().push_back(Gtk::Menu_Helpers::StockMenuElem(Gtk::StockID("gtk-quit")));
   beenden = (Gtk::ImageMenuItem *)&main_datei_menu->items().back();
   
   bearbeiten_menu->items().push_back(Gtk::Menu_Helpers::ImageMenuElem(_("Erfassen"), *image13));
   erfassen = (Gtk::ImageMenuItem *)&bearbeiten_menu->items().back();
   
   bearbeiten_menu->items().push_back(Gtk::Menu_Helpers::ImageMenuElem(_("Neuladen"), *image14));
   neuladen = (Gtk::ImageMenuItem *)&bearbeiten_menu->items().back();
   
   bearbeiten_menu->items().push_back(Gtk::Menu_Helpers::StockMenuElem(Gtk::StockID("gtk-print")));
   main_drucken = (Gtk::ImageMenuItem *)&bearbeiten_menu->items().back();
   
   bearbeiten_menu->items().push_back(Gtk::Menu_Helpers::SeparatorElem());
   trennlinie2 = (Gtk::MenuItem *)&bearbeiten_menu->items().back();
   
   bearbeiten_menu->items().push_back(Gtk::Menu_Helpers::ImageMenuElem(_("Lieferscheine"), *image15));
   abschreiben = (Gtk::ImageMenuItem *)&bearbeiten_menu->items().back();
   
   main_einstellungen_menu->items().push_back(Gtk::Menu_Helpers::RadioMenuElem(_RadioMIGroup_main_kndbez, _("Kundenbezeichnung")));
   main_kndbez = (Gtk::RadioMenuItem *)&main_einstellungen_menu->items().back();
   
   main_einstellungen_menu->items().push_back(Gtk::Menu_Helpers::RadioMenuElem(_RadioMIGroup_main_kndbez, _("Interne Bezeichnung")));
   main_intbez = (Gtk::RadioMenuItem *)&main_einstellungen_menu->items().back();
   
   main_einstellungen_menu->items().push_back(Gtk::Menu_Helpers::SeparatorElem());
   trennlinie5 = (Gtk::MenuItem *)&main_einstellungen_menu->items().back();
   
   main_einstellungen_menu->items().push_back(Gtk::Menu_Helpers::RadioMenuElem(_RadioMIGroup_kundenauftragsnummer, _("Kundenauftragsnummer")));
   kundenauftragsnummer = (Gtk::RadioMenuItem *)&main_einstellungen_menu->items().back();
   
   main_einstellungen_menu->items().push_back(Gtk::Menu_Helpers::RadioMenuElem(_RadioMIGroup_kundenauftragsnummer, _("Interne Auftragsnummer")));
   interne_auftragsnummer = (Gtk::RadioMenuItem *)&main_einstellungen_menu->items().back();
   
   main_einstellungen_menu->items().push_back(Gtk::Menu_Helpers::SeparatorElem());
   trennlinie3 = (Gtk::MenuItem *)&main_einstellungen_menu->items().back();
   
   main_einstellungen_menu->items().push_back(Gtk::Menu_Helpers::RadioMenuElem(_RadioMIGroup_kalenderwoche, _("Kalenderwoche")));
   kalenderwoche = (Gtk::RadioMenuItem *)&main_einstellungen_menu->items().back();
   
   main_einstellungen_menu->items().push_back(Gtk::Menu_Helpers::RadioMenuElem(_RadioMIGroup_kalenderwoche, _("Datum")));
   datum = (Gtk::RadioMenuItem *)&main_einstellungen_menu->items().back();
   
   main_einstellungen_menu->items().push_back(Gtk::Menu_Helpers::SeparatorElem());
   trennlinie4 = (Gtk::MenuItem *)&main_einstellungen_menu->items().back();
   
   main_einstellungen_menu->items().push_back(Gtk::Menu_Helpers::RadioMenuElem(_RadioMIGroup_kunden_name1, _("Kunden Name")));
   kunden_name1 = (Gtk::RadioMenuItem *)&main_einstellungen_menu->items().back();
   
   main_einstellungen_menu->items().push_back(Gtk::Menu_Helpers::RadioMenuElem(_RadioMIGroup_kunden_name1, _("Kunden Name & Ort")));
   kunden_ort = (Gtk::RadioMenuItem *)&main_einstellungen_menu->items().back();
   
   main_einstellungen_menu->items().push_back(Gtk::Menu_Helpers::RadioMenuElem(_RadioMIGroup_kunden_name1, _("Kunden Nr.")));
   kunden_nr = (Gtk::RadioMenuItem *)&main_einstellungen_menu->items().back();
   
   main_einstellungen_menu->items().push_back(Gtk::Menu_Helpers::SeparatorElem());
   trennlinie6 = (Gtk::MenuItem *)&main_einstellungen_menu->items().back();
   
   main_einstellungen_menu->items().push_back(Gtk::Menu_Helpers::RadioMenuElem(_RadioMIGroup_materialbedarf_sortiert_nach_artikel, _("Materialbedarf sortiert nach Artikel")));
   materialbedarf_sortiert_nach_artikel = (Gtk::RadioMenuItem *)&main_einstellungen_menu->items().back();
   
   main_einstellungen_menu->items().push_back(Gtk::Menu_Helpers::RadioMenuElem(_RadioMIGroup_materialbedarf_sortiert_nach_artikel, _("Materialbedarf sortiert nach Menge")));
   materialbedarf_sortiert_nach_menge = (Gtk::RadioMenuItem *)&main_einstellungen_menu->items().back();
   
   main_einstellungen_menu->items().push_back(Gtk::Menu_Helpers::SeparatorElem());
   trennlinie8 = (Gtk::MenuItem *)&main_einstellungen_menu->items().back();
   
   main_einstellungen_menu->items().push_back(Gtk::Menu_Helpers::RadioMenuElem(_RadioMIGroup_auftraege_ohne_kunde, _("Aufträge ohne Kunde")));
   auftraege_ohne_kunde = (Gtk::RadioMenuItem *)&main_einstellungen_menu->items().back();
   
   main_einstellungen_menu->items().push_back(Gtk::Menu_Helpers::RadioMenuElem(_RadioMIGroup_auftraege_ohne_kunde, _("Aufträge mit Kunde")));
   auftraege_mit_kunde = (Gtk::RadioMenuItem *)&main_einstellungen_menu->items().back();
   
   auftr__ge_menu->items().push_back(Gtk::Menu_Helpers::CheckMenuElem(_("Aufträge bei Programmstart laden")));
   preload_orders = (Gtk::CheckMenuItem *)&auftr__ge_menu->items().back();
   
   auftr__ge_menu->items().push_back(Gtk::Menu_Helpers::SeparatorElem());
   trennlinie10 = (Gtk::MenuItem *)&auftr__ge_menu->items().back();
   
   auftr__ge_menu->items().push_back(Gtk::Menu_Helpers::RadioMenuElem(_RadioMIGroup_alle_auftraege, _("alle offenen Aufträge")));
   alle_auftraege = (Gtk::RadioMenuItem *)&auftr__ge_menu->items().back();
   
   auftr__ge_menu->items().push_back(Gtk::Menu_Helpers::RadioMenuElem(_RadioMIGroup_alle_auftraege, _("nur unbestätigte Aufträge / Mengen")));
   unbestaetigte_auftraege = (Gtk::RadioMenuItem *)&auftr__ge_menu->items().back();
   
   auftr__ge_menu->items().push_back(Gtk::Menu_Helpers::RadioMenuElem(_RadioMIGroup_alle_auftraege, _("nur offene Aufträge / Mengen")));
   offene_auftraege = (Gtk::RadioMenuItem *)&auftr__ge_menu->items().back();
   
   auftr__ge_menu->items().push_back(Gtk::Menu_Helpers::RadioMenuElem(_RadioMIGroup_alle_auftraege, _("stornierte Aufträge / Mengen")));
   stornierte_auftraege = (Gtk::RadioMenuItem *)&auftr__ge_menu->items().back();
   
   auftr__ge_menu->items().push_back(Gtk::Menu_Helpers::RadioMenuElem(_RadioMIGroup_alle_auftraege, _("geschlossene Aufträge / Mengen")));
   geschlossene_auftraege = (Gtk::RadioMenuItem *)&auftr__ge_menu->items().back();
   
   auftr__ge_menu->items().push_back(Gtk::Menu_Helpers::SeparatorElem());
   trennlinie7 = (Gtk::MenuItem *)&auftr__ge_menu->items().back();
   
   auftr__ge_menu->items().push_back(Gtk::Menu_Helpers::RadioMenuElem(_RadioMIGroup_ungeplante_menge_menu, _("ungeplante / fehlende Menge")));
   ungeplante_menge_menu = (Gtk::RadioMenuItem *)&auftr__ge_menu->items().back();
   
   auftr__ge_menu->items().push_back(Gtk::Menu_Helpers::RadioMenuElem(_RadioMIGroup_ungeplante_menge_menu, _("geplante / bestellte / reservierte Menge")));
   plan_menge_menu = (Gtk::RadioMenuItem *)&auftr__ge_menu->items().back();
   
   auftr__ge_menu->items().push_back(Gtk::Menu_Helpers::RadioMenuElem(_RadioMIGroup_ungeplante_menge_menu, _("verfügbare Menge ")));
   dispo_menge_menu = (Gtk::RadioMenuItem *)&auftr__ge_menu->items().back();
   
   auftr__ge_menu->items().push_back(Gtk::Menu_Helpers::RadioMenuElem(_RadioMIGroup_ungeplante_menge_menu, _("alle Lagermengen")));
   alle_lagermengen = (Gtk::RadioMenuItem *)&auftr__ge_menu->items().back();
   
   bestellplanung1_menu->items().push_back(Gtk::Menu_Helpers::ImageMenuElem(_("Bestellplanung"), *image16));
   bestellplanung = (Gtk::ImageMenuItem *)&bestellplanung1_menu->items().back();
   
   main_menubar->items().push_back(Gtk::Menu_Helpers::MenuElem(_("_File"), *main_datei_menu));
   main_datei = (Gtk::MenuItem *)&main_menubar->items().back();
   
   main_menubar->items().push_back(Gtk::Menu_Helpers::MenuElem(_("_Edit"), *bearbeiten_menu));
   bearbeiten = (Gtk::MenuItem *)&main_menubar->items().back();
   
   main_menubar->items().push_back(Gtk::Menu_Helpers::MenuElem(_("_View"), *main_einstellungen_menu));
   main_einstellungen = (Gtk::MenuItem *)&main_menubar->items().back();
   
   main_menubar->items().push_back(Gtk::Menu_Helpers::MenuElem(_("Aufträge"), *auftr__ge_menu));
   auftr__ge = (Gtk::MenuItem *)&main_menubar->items().back();
   
   main_menubar->items().push_back(Gtk::Menu_Helpers::MenuElem(_("Bestellplanung"), *bestellplanung1_menu));
   bestellplanung1 = (Gtk::MenuItem *)&main_menubar->items().back();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar1->append(*endemain_button);
#else //
   
   
   toolbar1->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem(_("beenden"), *endemain_button_img, Gtk::Toolbar_Helpers::Callback0()));
   endemain_button = static_cast<Gtk::Button *>(toolbar1->tools().back().get_widget());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar1->append(*mainprint_button);
#else //
   
   
   toolbar1->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem(_("drucken"), *mainprint_button_img, Gtk::Toolbar_Helpers::Callback0()));
   mainprint_button = static_cast<Gtk::Button *>(toolbar1->tools().back().get_widget());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar1->append(*mainreload_button);
#else //
   
   
   toolbar1->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem(_("neu laden"), *mainreload_button_img, Gtk::Toolbar_Helpers::Callback0()));
   mainreload_button = static_cast<Gtk::Button *>(toolbar1->tools().back().get_widget());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar1->append(*separatortoolitem1);
#else //
   toolbar1->tools().push_back(Gtk::Toolbar_Helpers::Space());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar1->append(*erfassen_button);
#else //
   
   
   toolbar1->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem(_("Auftrag"), *erfassen_button_img, Gtk::Toolbar_Helpers::Callback0()));
   erfassen_button = static_cast<Gtk::Button *>(toolbar1->tools().back().get_widget());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar1->append(*lieferschein_button);
#else //
   
   
   toolbar1->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem(_("Liefersch."), *lieferschein_button_img, Gtk::Toolbar_Helpers::Callback0()));
   lieferschein_button = static_cast<Gtk::Button *>(toolbar1->tools().back().get_widget());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar1->append(*rechnung_button);
#else //
   
   
   toolbar1->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem(_("Rechnung"), *rechnung_button_img, Gtk::Toolbar_Helpers::Callback0()));
   rechnung_button = static_cast<Gtk::Button *>(toolbar1->tools().back().get_widget());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar1->append(*separatortoolitem2);
#else //
   toolbar1->tools().push_back(Gtk::Toolbar_Helpers::Space());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar1->append(*togglebutton_bestellen);
#else //
   
   
   toolbar1->tools().push_back(Gtk::Toolbar_Helpers::ToggleElem(_("Bestellen"), *togglebutton_bestellen_img, Gtk::Toolbar_Helpers::Callback0()));
   togglebutton_bestellen = static_cast<Gtk::ToggleButton *>(toolbar1->tools().back().get_widget());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar1->append(*togglebutton_material);
#else //
   
   
   toolbar1->tools().push_back(Gtk::Toolbar_Helpers::ToggleElem(_("Material"), *togglebutton_material_img, Gtk::Toolbar_Helpers::Callback0()));
   togglebutton_material = static_cast<Gtk::ToggleButton *>(toolbar1->tools().back().get_widget());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar1->append(*togglebutton_auftraege);
#else //
   
   
   toolbar1->tools().push_back(Gtk::Toolbar_Helpers::ToggleElem(_("Aufträge"), *togglebutton_auftraege_img, Gtk::Toolbar_Helpers::Callback0()));
   togglebutton_auftraege = static_cast<Gtk::ToggleButton *>(toolbar1->tools().back().get_widget());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar1->append(*separatortoolitem3);
#else //
   toolbar1->tools().push_back(Gtk::Toolbar_Helpers::Space());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar1->append(*button_artikeleingabe);
#else //
   
   
   toolbar1->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem(_("Artikel"), *button_artikeleingabe_img, Gtk::Toolbar_Helpers::Callback0()));
   Gtk::Button *button_artikeleingabe = static_cast<Gtk::Button *>(toolbar1->tools().back().get_widget());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar1->append(*separatortoolitem4);
#else //
   toolbar1->tools().push_back(Gtk::Toolbar_Helpers::Space());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar1->append(*button_auftrag_erledigt);
#else //
   
   
   toolbar1->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem(_("erledigt"), *button_auftrag_erledigt_img, Gtk::Toolbar_Helpers::Callback0()));
   button_auftrag_erledigt = static_cast<Gtk::Button *>(toolbar1->tools().back().get_widget());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar1->append(*button_Kunden_erledigt);
#else //
   
   
   toolbar1->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem(_("aufräumen"), *button_Kunden_erledigt_img, Gtk::Toolbar_Helpers::Callback0()));
   button_Kunden_erledigt = static_cast<Gtk::Button *>(toolbar1->tools().back().get_widget());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar1->append(*button_faerben);
#else //
   
   
   toolbar1->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem(_("Färben"), *button_faerben_img, Gtk::Toolbar_Helpers::Callback0()));
   button_faerben = static_cast<Gtk::Button *>(toolbar1->tools().back().get_widget());
#endif //
   image13->set_alignment(0.5,0.5);
   image13->set_padding(0,0);
   image14->set_alignment(0.5,0.5);
   image14->set_padding(0,0);
   image15->set_alignment(0.5,0.5);
   image15->set_padding(0,0);
   main_kndbez->set_active(true);
   main_intbez->set_active(true);
   kundenauftragsnummer->set_active(true);
   interne_auftragsnummer->set_active(true);
   kalenderwoche->set_active(true);
   datum->set_active(true);
   kunden_name1->set_active(true);
   kunden_ort->set_active(true);
   kunden_nr->set_active(true);
   materialbedarf_sortiert_nach_artikel->set_active(true);
   materialbedarf_sortiert_nach_menge->set_active(true);
   auftraege_ohne_kunde->set_active(true);
   auftraege_mit_kunde->set_active(true);
   preload_orders->set_active(false);
   alle_auftraege->set_active(true);
   unbestaetigte_auftraege->set_active(true);
   offene_auftraege->set_active(true);
   stornierte_auftraege->set_active(true);
   geschlossene_auftraege->set_active(true);
   ungeplante_menge_menu->set_active(true);
   plan_menge_menu->set_active(true);
   dispo_menge_menu->set_active(true);
   alle_lagermengen->set_active(true);
   image16->set_alignment(0.5,0.5);
   image16->set_padding(0,0);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   endemain_button->set_visible_horizontal(true);
   endemain_button->set_visible_vertical(true);
   endemain_button->set_is_important(false);
   endemain_button->set_homogeneous(true);
   endemain_button->set_expand(false);
#endif //
   endemain_button_img->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   mainprint_button->set_visible_horizontal(true);
   mainprint_button->set_visible_vertical(true);
   mainprint_button->set_is_important(false);
   mainprint_button->set_homogeneous(true);
   mainprint_button->set_expand(false);
#endif //
   mainprint_button_img->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   mainreload_button->set_visible_horizontal(true);
   mainreload_button->set_visible_vertical(true);
   mainreload_button->set_is_important(false);
   mainreload_button->set_homogeneous(true);
   mainreload_button->set_expand(false);
#endif //
   mainreload_button_img->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   separatortoolitem1->set_visible_horizontal(true);
   separatortoolitem1->set_visible_vertical(true);
   separatortoolitem1->set_homogeneous(false);
   separatortoolitem1->set_expand(false);
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   erfassen_button->set_visible_horizontal(true);
   erfassen_button->set_visible_vertical(true);
   erfassen_button->set_is_important(false);
   erfassen_button->set_homogeneous(true);
   erfassen_button->set_expand(false);
#endif //
   erfassen_button_img->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   lieferschein_button->set_visible_horizontal(true);
   lieferschein_button->set_visible_vertical(true);
   lieferschein_button->set_is_important(false);
   lieferschein_button->set_homogeneous(true);
   lieferschein_button->set_expand(false);
#endif //
   lieferschein_button_img->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   rechnung_button->set_visible_horizontal(true);
   rechnung_button->set_visible_vertical(true);
   rechnung_button->set_is_important(false);
   rechnung_button->set_homogeneous(true);
   rechnung_button->set_expand(false);
#endif //
   rechnung_button_img->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   separatortoolitem2->set_visible_horizontal(true);
   separatortoolitem2->set_visible_vertical(true);
   separatortoolitem2->set_homogeneous(false);
   separatortoolitem2->set_expand(false);
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   togglebutton_bestellen->set_visible_horizontal(true);
   togglebutton_bestellen->set_visible_vertical(true);
   togglebutton_bestellen->set_is_important(false);
   togglebutton_bestellen->set_homogeneous(true);
   togglebutton_bestellen->set_expand(false);
#endif //
   togglebutton_bestellen_img->show();
   togglebutton_bestellen->set_active(false);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   togglebutton_material->set_visible_horizontal(true);
   togglebutton_material->set_visible_vertical(true);
   togglebutton_material->set_is_important(false);
   togglebutton_material->set_homogeneous(true);
   togglebutton_material->set_expand(false);
#endif //
   togglebutton_material_img->show();
   togglebutton_material->set_active(false);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   togglebutton_auftraege->set_visible_horizontal(true);
   togglebutton_auftraege->set_visible_vertical(true);
   togglebutton_auftraege->set_is_important(false);
   togglebutton_auftraege->set_homogeneous(true);
   togglebutton_auftraege->set_expand(false);
#endif //
   togglebutton_auftraege_img->show();
   togglebutton_auftraege->set_active(false);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   separatortoolitem3->set_visible_horizontal(true);
   separatortoolitem3->set_visible_vertical(true);
   separatortoolitem3->set_homogeneous(false);
   separatortoolitem3->set_expand(false);
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   button_artikeleingabe->set_visible_horizontal(true);
   button_artikeleingabe->set_visible_vertical(true);
   button_artikeleingabe->set_is_important(false);
   button_artikeleingabe->set_homogeneous(true);
   button_artikeleingabe->set_expand(false);
#endif //
   button_artikeleingabe_img->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   separatortoolitem4->set_visible_horizontal(true);
   separatortoolitem4->set_visible_vertical(true);
   separatortoolitem4->set_homogeneous(false);
   separatortoolitem4->set_expand(false);
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   _tooltips.set_tip(*button_auftrag_erledigt, _("Der gewählte Auftrag wird als 'erledigt' markiert"), "");
   button_auftrag_erledigt->set_border_width(1);
   button_auftrag_erledigt->set_visible_horizontal(true);
   button_auftrag_erledigt->set_visible_vertical(true);
   button_auftrag_erledigt->set_is_important(false);
   button_auftrag_erledigt->set_homogeneous(true);
   button_auftrag_erledigt->set_expand(false);
   button_auftrag_erledigt->set_tooltip(_tooltips, _("Der gewählte Auftrag wird als 'erledigt' markiert"));
#endif //
   button_auftrag_erledigt_img->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   _tooltips.set_tip(*button_Kunden_erledigt, _("Die zu erledigten Kundenaufträgen gehörenden Einträge dieser Instanz werden als 'erledigt' markiert."), "");
   button_Kunden_erledigt->set_visible_horizontal(true);
   button_Kunden_erledigt->set_visible_vertical(true);
   button_Kunden_erledigt->set_is_important(false);
   button_Kunden_erledigt->set_homogeneous(true);
   button_Kunden_erledigt->set_expand(false);
   button_Kunden_erledigt->set_tooltip(_tooltips, _("Die zu erledigten Kundenaufträgen gehörenden Einträge dieser Instanz werden als 'erledigt' markiert."));
#endif //
   button_Kunden_erledigt_img->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   button_faerben->set_visible_horizontal(true);
   button_faerben->set_visible_vertical(true);
   button_faerben->set_is_important(false);
   button_faerben->set_homogeneous(true);
   button_faerben->set_expand(false);
#endif //
   button_faerben_img->show();
   toolbar1->set_tooltips(true);
   toolbar1->set_toolbar_style(Gtk::TOOLBAR_BOTH);
   toolbar1->set_orientation(Gtk::ORIENTATION_HORIZONTAL);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar1->set_show_arrow(false);
#endif //
   label118->set_alignment(0.5,0.5);
   label118->set_padding(0,0);
   label118->set_justify(Gtk::JUSTIFY_CENTER);
   label118->set_line_wrap(false);
   label118->set_use_markup(false);
   label118->set_selectable(false);
   akt_instanz->set_sensitive(false);
   label110->set_alignment(0.5,0.5);
   label110->set_padding(0,0);
   label110->set_justify(Gtk::JUSTIFY_CENTER);
   label110->set_line_wrap(false);
   label110->set_use_markup(false);
   label110->set_selectable(false);
   hbox32->pack_start(*label118, Gtk::PACK_SHRINK, 0);
   hbox32->pack_start(*akt_instanz, Gtk::PACK_SHRINK, 0);
   hbox32->pack_start(*label110, Gtk::PACK_SHRINK, 0);
   hbox32->pack_start(*offen_warengruppe, Gtk::PACK_SHRINK, 0);
   scrolledwindow_maintree_s->set_shadow_type(Gtk::SHADOW_NONE);
   scrolledwindow_maintree_s->set_policy(Gtk::POLICY_AUTOMATIC, Gtk::POLICY_AUTOMATIC);
   scrolledwindow_maintree_s->property_window_placement().set_value(Gtk::CORNER_TOP_LEFT);
   scrolledwindow_maintree_s->add(*maintree_s);
   vbox11->pack_start(*hbox32, Gtk::PACK_SHRINK, 0);
   vbox11->pack_start(*scrolledwindow_maintree_s);
   label37->set_alignment(0.5,0.5);
   label37->set_padding(0,0);
   label37->set_justify(Gtk::JUSTIFY_LEFT);
   label37->set_line_wrap(false);
   label37->set_use_markup(false);
   label37->set_selectable(false);
   frame_offene_mengen->set_border_width(5);
   frame_offene_mengen->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame_offene_mengen->set_label_align(0,0.5);
   frame_offene_mengen->add(*vbox11);
   frame_offene_mengen->set_label_widget(*label37);
   viewport_materialbedarf->set_shadow_type(Gtk::SHADOW_NONE);
   scrolledwindow11->set_shadow_type(Gtk::SHADOW_NONE);
   scrolledwindow11->set_policy(Gtk::POLICY_AUTOMATIC, Gtk::POLICY_AUTOMATIC);
   scrolledwindow11->property_window_placement().set_value(Gtk::CORNER_TOP_LEFT);
   scrolledwindow11->add(*viewport_materialbedarf);
   label119->set_alignment(0.5,0.5);
   label119->set_padding(0,0);
   label119->set_justify(Gtk::JUSTIFY_LEFT);
   label119->set_line_wrap(false);
   label119->set_use_markup(false);
   label119->set_selectable(false);
   frame_materialbedarf->set_border_width(5);
   frame_materialbedarf->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame_materialbedarf->set_label_align(0,0.5);
   frame_materialbedarf->add(*scrolledwindow11);
   frame_materialbedarf->set_label_widget(*label119);
   vpaned_an_mat->set_position(167);
   vpaned_an_mat->pack1(*frame_offene_mengen, Gtk::SHRINK);
   vpaned_an_mat->pack2(*frame_materialbedarf, Gtk::EXPAND|Gtk::SHRINK);
   label121->set_alignment(0.5,0.5);
   label121->set_padding(0,0);
   label121->set_justify(Gtk::JUSTIFY_LEFT);
   label121->set_line_wrap(false);
   label121->set_use_markup(false);
   label121->set_selectable(false);
   frame32->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame32->set_label_align(0,0.5);
   frame32->add(*Datum_instanz);
   frame32->set_label_widget(*label121);
   pixmap6->set_alignment(0.5,0.5);
   pixmap6->set_padding(0,0);
   label93->set_alignment(0.5,0.5);
   label93->set_padding(0,0);
   label93->set_justify(Gtk::JUSTIFY_CENTER);
   label93->set_line_wrap(false);
   label93->set_use_markup(false);
   label93->set_selectable(false);
   hbox14->pack_start(*pixmap6);
   hbox14->pack_start(*label93, Gtk::PACK_SHRINK, 0);
   button_instanz_get_selection->set_flags(Gtk::CAN_FOCUS);
   button_instanz_get_selection->set_relief(Gtk::RELIEF_NORMAL);
   button_instanz_get_selection->add(*hbox14);
   pixmap4->set_alignment(0.5,0.5);
   pixmap4->set_padding(0,0);
   label86->set_alignment(0.5,0.5);
   label86->set_padding(0,0);
   label86->set_justify(Gtk::JUSTIFY_CENTER);
   label86->set_line_wrap(false);
   label86->set_use_markup(false);
   label86->set_selectable(false);
   hbox12->pack_start(*pixmap4);
   hbox12->pack_start(*label86, Gtk::PACK_SHRINK, 0);
   button_instanz_print->set_flags(Gtk::CAN_FOCUS);
   button_instanz_print->set_relief(Gtk::RELIEF_NORMAL);
   button_instanz_print->add(*hbox12);
   pixmap3->set_alignment(0.5,0.5);
   pixmap3->set_padding(0,0);
   label84->set_alignment(0.5,0.5);
   label84->set_padding(0,0);
   label84->set_justify(Gtk::JUSTIFY_CENTER);
   label84->set_line_wrap(false);
   label84->set_use_markup(false);
   label84->set_selectable(false);
   hbox11->pack_start(*pixmap3);
   hbox11->pack_start(*label84, Gtk::PACK_SHRINK, 0);
   button_neue_anr->set_flags(Gtk::CAN_FOCUS);
   button_neue_anr->set_relief(Gtk::RELIEF_NORMAL);
   button_neue_anr->add(*hbox11);
   label122->set_alignment(0.5,0.5);
   label122->set_padding(0,0);
   label122->set_justify(Gtk::JUSTIFY_LEFT);
   label122->set_line_wrap(false);
   label122->set_use_markup(false);
   label122->set_selectable(false);
   frame31->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame31->set_label_align(0,0.5);
   frame31->add(*searchcombo_auftragid);
   frame31->set_label_widget(*label122);
   spinbutton_geplante_menge->set_flags(Gtk::CAN_FOCUS);
   spinbutton_geplante_menge->set_update_policy(Gtk::UPDATE_ALWAYS);
   spinbutton_geplante_menge->set_numeric(false);
   spinbutton_geplante_menge->set_digits(0);
   spinbutton_geplante_menge->set_wrap(false);
   label123->set_alignment(0.5,0.5);
   label123->set_padding(0,0);
   label123->set_justify(Gtk::JUSTIFY_LEFT);
   label123->set_line_wrap(false);
   label123->set_use_markup(false);
   label123->set_selectable(false);
   frame_mengen_eingabe->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame_mengen_eingabe->set_label_align(0,0.5);
   frame_mengen_eingabe->add(*spinbutton_geplante_menge);
   frame_mengen_eingabe->set_label_widget(*label123);
   hbox21->pack_start(*OptMen_Instanz_Bestellen);
   hbox21->pack_start(*kunden_lieferant);
   table24->set_row_spacings(0);
   table24->set_col_spacings(0);
   table24->attach(*frame32, 3, 4, 1, 2, Gtk::SHRINK|Gtk::FILL, Gtk::SHRINK|Gtk::FILL, 0, 0);
   table24->attach(*button_instanz_get_selection, 4, 5, 1, 2, Gtk::SHRINK, Gtk::SHRINK, 0, 0);
   table24->attach(*button_instanz_print, 5, 6, 1, 2, Gtk::SHRINK, Gtk::SHRINK, 0, 0);
   table24->attach(*button_neue_anr, 0, 1, 1, 2, Gtk::SHRINK, Gtk::SHRINK, 0, 0);
   table24->attach(*frame31, 1, 2, 1, 2, Gtk::SHRINK|Gtk::FILL, Gtk::SHRINK|Gtk::FILL, 0, 0);
   table24->attach(*frame_mengen_eingabe, 2, 3, 1, 2, Gtk::SHRINK|Gtk::FILL, Gtk::SHRINK|Gtk::FILL, 0, 0);
   table24->attach(*hbox21, 0, 6, 0, 1, Gtk::SHRINK|Gtk::FILL, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, 0, 0);
   frame15->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame15->set_label_align(0,0.5);
   frame15->add(*table24);
   table18->set_row_spacings(0);
   table18->set_col_spacings(0);
   table18->attach(*frame15, 0, 1, 0, 1, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, Gtk::SHRINK, 0, 0);
   info_label_instanzen->set_alignment(0,0.5);
   info_label_instanzen->set_padding(0,0);
   info_label_instanzen->set_justify(Gtk::JUSTIFY_CENTER);
   info_label_instanzen->set_line_wrap(false);
   info_label_instanzen->set_use_markup(false);
   info_label_instanzen->set_selectable(false);
   table_instanzen->set_row_spacings(0);
   table_instanzen->set_col_spacings(0);
   table_instanzen->attach(*table18, 0, 4, 1, 2, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table_instanzen->attach(*info_label_instanzen, 0, 4, 0, 1, Gtk::SHRINK|Gtk::FILL, Gtk::SHRINK, 0, 0);
   scrolledwindow9->set_shadow_type(Gtk::SHADOW_NONE);
   scrolledwindow9->set_policy(Gtk::POLICY_AUTOMATIC, Gtk::POLICY_AUTOMATIC);
   scrolledwindow9->property_window_placement().set_value(Gtk::CORNER_TOP_LEFT);
   scrolledwindow9->add(*tree_neuer_auftrag);
   vbox16->pack_start(*table_instanzen, Gtk::PACK_SHRINK, 0);
   vbox16->pack_start(*scrolledwindow9);
   label120->set_alignment(0.5,0.5);
   label120->set_padding(0,0);
   label120->set_justify(Gtk::JUSTIFY_LEFT);
   label120->set_line_wrap(false);
   label120->set_use_markup(false);
   label120->set_selectable(false);
   frame_instanzen->set_border_width(5);
   frame_instanzen->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame_instanzen->set_label_align(0,0.5);
   frame_instanzen->add(*vbox16);
   frame_instanzen->set_label_widget(*label120);
   vbox15->pack_start(*main_menubar, Gtk::PACK_SHRINK, 0);
   vbox15->pack_start(*toolbar1, Gtk::PACK_SHRINK, 0);
   vbox15->pack_start(*vpaned_an_mat);
   vbox15->pack_start(*frame_instanzen);
   auftrag_main->set_title(_("Auftragsbearbeitung"));
   auftrag_main->set_default_size(800,600);
   auftrag_main->set_modal(false);
   auftrag_main->property_window_position().set_value(Gtk::WIN_POS_NONE);
   auftrag_main->set_resizable(true);
   auftrag_main->property_destroy_with_parent().set_value(false);
   auftrag_main->set_icon(Gdk::Pixbuf::create_from_xpm_data(wintext_xpm));
   auftrag_main->add(*vbox15);
   beenden->show();
   main_datei->show();
   image13->show();
   erfassen->show();
   image14->show();
   neuladen->show();
   main_drucken->show();
   trennlinie2->show();
   image15->show();
   abschreiben->show();
   bearbeiten->show();
   main_kndbez->show();
   main_intbez->show();
   trennlinie5->show();
   kundenauftragsnummer->show();
   interne_auftragsnummer->show();
   trennlinie3->show();
   kalenderwoche->show();
   datum->show();
   trennlinie4->show();
   kunden_name1->show();
   kunden_ort->show();
   kunden_nr->show();
   trennlinie6->show();
   materialbedarf_sortiert_nach_artikel->show();
   materialbedarf_sortiert_nach_menge->show();
   trennlinie8->show();
   auftraege_ohne_kunde->show();
   auftraege_mit_kunde->show();
   main_einstellungen->show();
   preload_orders->show();
   trennlinie10->show();
   alle_auftraege->show();
   unbestaetigte_auftraege->show();
   offene_auftraege->show();
   stornierte_auftraege->show();
   geschlossene_auftraege->show();
   trennlinie7->show();
   ungeplante_menge_menu->show();
   plan_menge_menu->show();
   dispo_menge_menu->show();
   alle_lagermengen->show();
   auftr__ge->show();
   image16->show();
   bestellplanung->show();
   bestellplanung1->show();
   main_menubar->show();
   endemain_button->show();
   mainprint_button->show();
   mainreload_button->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   separatortoolitem1->show();
#endif //
   erfassen_button->show();
   lieferschein_button->show();
   rechnung_button->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   separatortoolitem2->show();
#endif //
   togglebutton_material->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   separatortoolitem3->show();
#endif //
   button_artikeleingabe->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   separatortoolitem4->show();
#endif //
   button_faerben->show();
   toolbar1->show();
   label118->show();
   akt_instanz->show();
   label110->show();
   offen_warengruppe->show();
   hbox32->show();
   maintree_s->show();
   scrolledwindow_maintree_s->show();
   vbox11->show();
   label37->show();
   frame_offene_mengen->show();
   viewport_materialbedarf->show();
   scrolledwindow11->show();
   label119->show();
   frame_materialbedarf->show();
   vpaned_an_mat->show();
   Datum_instanz->show();
   label121->show();
   frame32->show();
   pixmap6->show();
   label93->show();
   hbox14->show();
   button_instanz_get_selection->show();
   pixmap4->show();
   label86->show();
   hbox12->show();
   button_instanz_print->show();
   pixmap3->show();
   label84->show();
   hbox11->show();
   button_neue_anr->show();
   searchcombo_auftragid->show();
   label122->show();
   frame31->show();
   spinbutton_geplante_menge->show();
   label123->show();
   frame_mengen_eingabe->show();
   OptMen_Instanz_Bestellen->show();
   kunden_lieferant->show();
   hbox21->show();
   table24->show();
   frame15->show();
   table18->show();
   info_label_instanzen->show();
   table_instanzen->show();
   tree_neuer_auftrag->show();
   scrolledwindow9->show();
   vbox16->show();
   label120->show();
   frame_instanzen->show();
   vbox15->show();
   auftrag_main->show();
   beenden->signal_activate().connect(SigC::slot(*this, &auftrag_main_glade::on_beenden_activate), false);
   erfassen->signal_activate().connect(SigC::slot(*this, &auftrag_main_glade::on_erfassen_activate), false);
   neuladen->signal_activate().connect(SigC::slot(*this, &auftrag_main_glade::on_neuladen_activate), false);
   main_drucken->signal_activate().connect(SigC::slot(*this, &auftrag_main_glade::on_main_drucken_activate), false);
   abschreiben->signal_activate().connect(SigC::slot(*this, &auftrag_main_glade::on_lieferscheine_activate), false);
   main_kndbez->signal_activate().connect(SigC::slot(*this, &auftrag_main_glade::on_main_bezeichnung_activate), false);
   main_intbez->signal_activate().connect(SigC::slot(*this, &auftrag_main_glade::on_main_bezeichnung_activate), false);
   kundenauftragsnummer->signal_activate().connect(SigC::slot(*this, &auftrag_main_glade::on_kunden_anr_activate), false);
   interne_auftragsnummer->signal_activate().connect(SigC::slot(*this, &auftrag_main_glade::on_kunden_anr_activate), false);
   kalenderwoche->signal_activate().connect(SigC::slot(*this, &auftrag_main_glade::on_zeitdarstellung_activate), false);
   datum->signal_activate().connect(SigC::slot(*this, &auftrag_main_glade::on_zeitdarstellung_activate), false);
   kunden_name1->signal_activate().connect(SigC::slot(*this, &auftrag_main_glade::on_kundendarstellung_activate), false);
   kunden_ort->signal_activate().connect(SigC::slot(*this, &auftrag_main_glade::on_kundendarstellung_activate), false);
   kunden_nr->signal_activate().connect(SigC::slot(*this, &auftrag_main_glade::on_kundendarstellung_activate), false);
   materialbedarf_sortiert_nach_artikel->signal_activate().connect(SigC::slot(*this, &auftrag_main_glade::on_materialbedarf_sortiert), false);
   materialbedarf_sortiert_nach_menge->signal_activate().connect(SigC::slot(*this, &auftrag_main_glade::on_materialbedarf_sortiert), false);
   auftraege_ohne_kunde->signal_activate().connect(SigC::slot(*this, &auftrag_main_glade::on_auftraege_kunde_activate), false);
   auftraege_mit_kunde->signal_activate().connect(SigC::slot(*this, &auftrag_main_glade::on_auftraege_kunde_activate), false);
   preload_orders->signal_activate().connect(SigC::slot(*this, &auftrag_main_glade::on_preload_orders_activate), false);
   alle_auftraege->signal_activate().connect(SigC::slot(*this, &auftrag_main_glade::on_alle_auftraege_activate), false);
   unbestaetigte_auftraege->signal_activate().connect(SigC::slot(*this, &auftrag_main_glade::on_unbest_auftraege_activate), false);
   offene_auftraege->signal_activate().connect(SigC::slot(*this, &auftrag_main_glade::on_offene_auftraege_activate), false);
   stornierte_auftraege->signal_activate().connect(SigC::slot(*this, &auftrag_main_glade::on_storno_auftraege_activate), false);
   geschlossene_auftraege->signal_activate().connect(SigC::slot(*this, &auftrag_main_glade::on_closed_auftraege_activate), false);
   ungeplante_menge_menu->signal_activate().connect(SigC::slot(*this, &auftrag_main_glade::auftrags_id_aenderung), false);
   plan_menge_menu->signal_activate().connect(SigC::slot(*this, &auftrag_main_glade::auftrags_id_aenderung), false);
   dispo_menge_menu->signal_activate().connect(SigC::slot(*this, &auftrag_main_glade::auftrags_id_aenderung), false);
   alle_lagermengen->signal_activate().connect(SigC::slot(*this, &auftrag_main_glade::auftrags_id_aenderung), false);
   bestellplanung->signal_activate().connect(SigC::slot(*this, &auftrag_main_glade::on_bestellplanung_activate), false);
   endemain_button->signal_clicked().connect(SigC::slot(*this, &auftrag_main_glade::on_beenden_activate), false);
   mainprint_button->signal_clicked().connect(SigC::slot(*this, &auftrag_main_glade::on_mainprint_button_clicked), false);
   mainreload_button->signal_clicked().connect(SigC::slot(*this, &auftrag_main_glade::on_neuladen_activate), false);
   erfassen_button->signal_clicked().connect(SigC::slot(*this, &auftrag_main_glade::on_erfassen_activate), false);
   lieferschein_button->signal_clicked().connect(SigC::slot(*this, &auftrag_main_glade::on_lieferscheine_activate), false);
   rechnung_button->signal_clicked().connect(SigC::slot(*this, &auftrag_main_glade::on_rechnung_activate), false);
   togglebutton_bestellen->signal_toggled().connect(SigC::slot(*this, &auftrag_main_glade::on_togglebutton_bestellen_toggled), false);
   togglebutton_material->signal_toggled().connect(SigC::slot(*this, &auftrag_main_glade::on_togglebutton_material_toggled), false);
   togglebutton_auftraege->signal_toggled().connect(SigC::slot(*this, &auftrag_main_glade::on_togglebutton_auftraege_toggled), false);
   button_artikeleingabe->signal_clicked().connect(SigC::slot(*this, &auftrag_main_glade::on_button_artikeleingabe_clicked), false);
   button_auftrag_erledigt->signal_clicked().connect(SigC::slot(*this, &auftrag_main_glade::on_button_auftrag_erledigt_clicked), false);
   button_Kunden_erledigt->signal_clicked().connect(SigC::slot(*this, &auftrag_main_glade::on_button_Kunden_erledigt_clicked), false);
   button_faerben->signal_clicked().connect(SigC::slot(*this, &auftrag_main_glade::on_button_faerben_clicked), false);
   offen_warengruppe->signal_activate().connect(SigC::slot(*this, &auftrag_main_glade::on_offwarengrp_activate));
   maintree_s->signal_leaf_selected().connect(SigC::slot(*this, &auftrag_main_glade::on_leaf_selected));
   maintree_s->signal_leaf_unselected().connect(SigC::slot(*this, &auftrag_main_glade::on_unselect_row));
   maintree_s->signal_node_selected().connect(SigC::slot(*this, &auftrag_main_glade::on_node_selected));
   maintree_s->signal_leaf_unselected().connect(SigC::slot(*this, &auftrag_main_glade::on_leaf_unselected));
   button_instanz_get_selection->signal_clicked().connect(SigC::slot(*this, &auftrag_main_glade::on_button_instanz_get_selection_clicked), false);
   button_instanz_print->signal_clicked().connect(SigC::slot(*this, &auftrag_main_glade::on_button_instanz_print_clicked), false);
   button_neue_anr->signal_clicked().connect(SigC::slot(*this, &auftrag_main_glade::on_button_neue_anr_clicked), false);
   searchcombo_auftragid->signal_activate().connect(SigC::slot(*this, &auftrag_main_glade::on_searchcombo_auftragid_activate));
   OptMen_Instanz_Bestellen->signal_activate().connect(SigC::slot(*this, &auftrag_main_glade::on_OptMenu_Instanz_Bestellen_activate));
   kunden_lieferant->signal_activate().connect(SigC::slot(*this, &auftrag_main_glade::on_kunden_lieferant_activate));
   tree_neuer_auftrag->signal_leaf_selected().connect(SigC::slot(*this, &auftrag_main_glade::tree_neuer_auftrag_leaf_selected));
   auftrag_main->signal_delete_event().connect(SigC::slot(*this, &auftrag_main_glade::on_delete_event), false);
}

auftrag_main_glade::~auftrag_main_glade()
{  delete akt_instanz;
   delete offen_warengruppe;
   delete maintree_s;
   delete Datum_instanz;
   delete searchcombo_auftragid;
   delete OptMen_Instanz_Bestellen;
   delete kunden_lieferant;
   delete tree_neuer_auftrag;
   delete gmm_data;
}
