#include "Lager_Vormerkungen.h"
#include <Aux/Transaction.h>
exec sql include sqlca;
#include <Aux/SQLerror.h>
#include <Aux/itos.h>
#include <Lager/JumboRolle.h>
#include <Auftrag/sqlAuftragSelector.h>
#include <Auftrag/selFullAufEntry.h>
#include <Artikel/ArtikelStamm.h>
#include <Lager/Lager.h>

AuftragBase::mengen_t  Lager_Vormerkungen::artikel_auf_lager(const ArtikelBase& artikel)
{
  // Was ist drin?
  class LagerInhalt lagerinhalt = 
      H_Lager(ArtikelStamm(artikel).BestellenBei())->LagerInhalt(artikel);
  AuftragBase::mengen_t summe=lagerinhalt.GesamtMenge();

  ///////////////////////////////////////////////////////
  // und nun die vorgemerkte Menge wieder abziehen

//cout << Instanz()->Id();
//cout <<"S="<< summe<<'\n';
  SelectedFullAufList auftraglist=SelectedFullAufList(SQLFullAuftragSelector::sel_Artikel_Planung(Instanz()->Id(),artikel,true));
  // der selector holt nur die Aufträge mit dem Status OPEN
  for (SelectedFullAufList::const_iterator i=auftraglist.begin();i!=auftraglist.end();++i)
   {
//cout << "Id = "<<i->Id()<<'\n';
     if(i->Id()!=0)
        summe -= i->getRestStk() ;
   }
//cout <<"S="<< summe<<'\n';
  if(summe<0) 
      cerr << "WARNUNG: Weniger im Lager als vorgemerkt\n";
  return summe;
  
}
