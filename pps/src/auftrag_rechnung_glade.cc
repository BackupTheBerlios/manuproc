// generated 2006/5/22 16:46:05 CEST by christof@vesta.petig-baender.de
// using glademm V2.12.1
//
// DO NOT EDIT THIS FILE ! It was created using
// glade-- auftrag.glade
// for gtk 2.8.17 and gtkmm 2.8.5
//
// Please modify the corresponding derived classes in ./src/auftrag_rechnung.cc


#if defined __GNUC__ && __GNUC__ < 3
#error This program will crash if compiled with g++ 2.x
// see the dynamic_cast bug in the gtkmm FAQ
#endif //
#include "config.h"
/*
 * Standard gettext macros.
 */
#ifdef ENABLE_NLS
#  include <libintl.h>
#  undef _
#  define _(String) dgettext (GETTEXT_PACKAGE, String)
#  ifdef gettext_noop
#    define N_(String) gettext_noop (String)
#  else
#    define N_(String) (String)
#  endif
#endif
#include <gtkmmconfig.h>
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
#include <sigc++/compatibility.h>
#include <sigc++/bind.h>
#define GMM_GTKMM_22_24(a,b) b
#else //gtkmm 2.2
#define GMM_GTKMM_22_24(a,b) a
#endif //
#include "auftrag_rechnung_glade.hh"
#include <gdk/gdkkeysyms.h>
#include <gtkmm/accelgroup.h>
#include <gdkmm/pixbufloader.h>

static const unsigned char stock_book_yellow_png_data[] = 
{       	137,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,
	0,0,0,24,0,0,0,24,8,6,0,0,0,224,119,61,
	248,0,0,0,6,98,75,71,68,0,189,0,189,0,189,105,
	66,213,168,0,0,1,96,73,68,65,84,120,218,99,96,24,
	5,3,13,24,137,84,247,159,92,243,88,136,49,124,237,252,
	56,6,81,73,77,134,63,191,127,48,252,254,245,21,171,34,
	247,224,30,172,226,76,196,56,139,24,195,183,109,219,74,150,
	5,255,55,46,73,99,96,96,96,192,105,56,33,64,208,7,
	130,34,138,12,127,126,255,192,41,143,207,245,132,44,248,127,
	104,71,59,222,160,65,6,31,62,190,103,96,192,146,24,112,
	89,64,84,208,32,187,254,209,179,123,164,249,128,80,208,160,
	187,190,162,184,142,129,1,75,50,197,102,193,255,173,43,114,
	168,226,122,156,62,96,98,102,163,138,235,25,24,48,51,218,
	255,121,233,153,12,158,161,125,112,1,27,7,83,6,9,73,
	49,134,104,15,81,6,46,30,17,12,215,191,126,251,10,175,
	3,48,114,178,128,148,36,195,195,171,151,24,4,164,165,224,
	98,59,119,237,102,216,178,115,23,195,220,185,168,185,245,195,
	199,247,12,249,57,69,56,93,143,53,136,62,60,123,142,25,
	222,110,174,12,125,189,221,12,31,63,188,97,248,248,225,13,
	195,161,67,7,136,114,61,86,155,69,56,185,254,191,249,254,
	141,129,129,129,129,225,244,161,25,12,140,220,58,12,170,202,
	26,40,106,46,94,186,194,240,228,233,19,134,168,200,24,188,
	174,199,26,68,111,190,127,131,107,48,181,203,128,103,156,163,
	187,123,24,216,133,44,24,84,149,53,24,174,223,190,200,240,
	254,195,71,130,174,39,21,252,135,225,157,107,75,96,108,154,
	1,154,91,48,130,0,0,252,227,158,119,74,242,34,158,0,
	0,0,69,122,84,88,116,83,111,102,116,119,97,114,101,0,
	0,120,218,115,208,80,214,244,204,77,76,79,245,77,76,207,
	76,206,86,48,209,51,208,51,81,176,180,208,55,48,209,55,
	48,84,72,46,202,44,46,169,116,40,174,204,45,72,44,201,
	76,206,215,203,47,74,7,0,124,106,15,249,120,246,20,194,
	0,0,0,51,122,84,88,116,83,105,103,110,97,116,117,114,
	101,0,0,120,218,51,73,50,79,52,51,49,73,51,51,181,
	180,52,53,77,182,72,78,50,72,53,55,51,181,72,77,181,
	52,48,52,75,73,4,0,140,21,8,168,204,69,14,124,0,
	0,0,0,73,69,78,68,174,66,96,130,

};

#include <gtkmm/imagemenuitem.h>
#include <gtk/gtkimagemenuitem.h>
#include <gtkmm/menu.h>
#include <gtkmm/menuitem.h>
#include <gtkmm/image.h>
#include <gtkmm/stockid.h>
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
#include <gtkmm/toolbutton.h>
#else //
#include <gtkmm/button.h>
#endif //
#include <gtkmm/table.h>
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
#include <gtkmm/toolitem.h>
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
#include <gtkmm/separatortoolitem.h>
#endif //
#include <gtkmm/toolbar.h>
#include <gtkmm/label.h>
#include <gtkmm/separator.h>
#include <gtkmm/adjustment.h>
#include <gtkmm/radiobutton.h>
#include <gtkmm/box.h>
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
#include <gtkmm/expander.h>
#else //
#include <gtkmm/handlebox.h>
#endif //
#include <gtkmm/scrolledwindow.h>

static const unsigned char stock_book_open_png_data[] = 
{       	137,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,
	0,0,0,24,0,0,0,24,8,4,0,0,0,74,126,245,
	115,0,0,0,2,98,75,71,68,0,189,31,93,236,3,0,
	0,1,118,73,68,65,84,120,218,189,211,49,107,147,81,20,
	198,241,223,77,223,26,173,160,210,66,98,49,58,58,118,136,
	56,136,91,119,241,43,136,139,147,147,224,228,39,232,236,162,
	80,156,92,139,8,66,187,100,43,186,9,118,76,134,18,90,
	233,91,165,22,36,74,27,147,227,208,183,225,109,48,18,16,
	60,119,186,151,231,255,156,115,238,61,151,255,29,209,138,151,
	113,24,147,5,105,76,142,38,174,164,105,128,104,105,168,21,
	155,73,72,165,44,111,170,97,231,175,53,167,178,156,95,50,
	84,12,12,45,164,201,25,98,77,19,236,57,70,87,56,158,
	144,161,130,120,107,185,40,165,97,223,145,134,46,182,98,98,
	134,3,176,88,32,51,134,110,24,248,104,59,190,69,47,126,
	20,107,45,78,129,244,64,142,25,13,21,100,186,250,218,110,
	153,149,141,154,92,215,41,223,210,138,30,232,219,53,180,104,
	215,69,85,23,124,65,14,58,222,19,167,64,90,181,1,50,
	53,93,155,54,93,54,175,234,42,234,88,215,54,119,230,29,
	210,67,57,66,219,129,79,238,89,80,181,143,92,142,142,175,
	94,147,202,15,103,69,79,24,120,231,166,190,76,82,71,93,
	189,228,95,6,210,170,103,6,222,248,233,142,75,102,11,239,
	19,255,165,194,159,172,124,199,175,28,186,102,217,57,231,139,
	218,21,254,213,63,204,18,216,210,50,239,187,40,77,101,199,
	146,231,163,33,42,103,72,98,207,156,23,30,249,12,174,99,
	231,140,255,248,127,32,78,218,63,114,183,56,216,208,240,184,
	164,203,198,128,4,79,3,158,184,173,134,15,166,141,16,226,
	126,136,169,137,17,246,47,241,27,163,181,129,153,10,162,118,
	33,0,0,0,69,122,84,88,116,83,111,102,116,119,97,114,
	101,0,0,120,218,115,208,80,214,244,204,77,76,79,245,77,
	76,207,76,206,86,48,209,51,208,51,81,176,180,208,55,48,
	209,55,48,84,72,46,202,44,46,169,116,40,174,204,45,72,
	44,201,76,206,215,203,47,74,7,0,124,106,15,249,120,246,
	20,194,0,0,0,51,122,84,88,116,83,105,103,110,97,116,
	117,114,101,0,0,120,218,75,73,78,73,51,50,79,54,50,
	52,79,52,78,50,49,51,183,48,72,78,54,48,51,53,74,
	77,74,73,50,53,51,49,5,0,152,111,8,235,212,106,171,
	180,0,0,0,0,73,69,78,68,174,66,96,130,

};
static const unsigned char stock_attach_png_data[] = 
{       	137,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,
	0,0,0,24,0,0,0,24,8,6,0,0,0,224,119,61,
	248,0,0,0,4,103,65,77,65,0,1,134,160,49,232,150,
	95,0,0,0,96,73,68,65,84,120,218,99,252,207,240,159,
	129,150,128,137,129,198,96,232,91,192,66,172,66,70,6,70,
	148,200,250,207,240,159,145,106,22,48,50,48,254,71,55,16,
	38,134,77,142,236,32,66,247,197,104,42,26,181,96,212,130,
	209,194,14,11,128,149,61,164,20,118,140,196,214,104,248,10,
	60,170,4,17,178,235,137,53,156,36,31,160,151,168,84,15,
	162,145,155,76,1,14,253,41,43,235,237,67,142,0,0,0,
	0,73,69,78,68,174,66,96,130,

};
#ifndef ENABLE_NLS
#  define textdomain(String) (String)
#  define gettext(String) (String)
#  define dgettext(Domain,Message) (Message)
#  define dcgettext(Domain,Message,Type) (Message)
#  define bindtextdomain(Domain,Directory) (Domain)
#  define _(String) (String)
#  define N_(String) (String)
#endif


auftrag_rechnung_glade::auftrag_rechnung_glade(
) : Gtk::Window(Gtk::WINDOW_TOPLEVEL)
{  auftrag_rechnung = this;
   gmm_data = new GlademmData(get_accel_group());
   
   Gtk::ImageMenuItem *pixmapmenuitem1 = NULL;
   Gtk::Menu *menuitem1_menu = Gtk::manage(new class Gtk::Menu());
   Gtk::MenuItem *menuitem1 = NULL;
   Gtk::Image *image5 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-preferences"), Gtk::IconSize(1)));
   gutschrift = NULL;
   Gtk::MenuItem *trennlinie11 = NULL;
   Gtk::Image *image6 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-delete"), Gtk::IconSize(1)));
   storno = NULL;
   Gtk::MenuItem *trennlinie13 = NULL;
   Gtk::MenuItem *rngprovision = NULL;
   Gtk::Menu *bearbeiten1_menu = Gtk::manage(new class Gtk::Menu());
   Gtk::MenuItem *bearbeiten1 = NULL;
   menubar3 = Gtk::manage(new class Gtk::MenuBar());
   
   Gtk::Image *button23_img = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-close"), Gtk::IconSize(3)));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   Gtk::ToolButton *button23 = Gtk::manage(new class Gtk::ToolButton(*button23_img, _("Schließen")));
#endif //
   Gtk::Image *button24_img = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-new"), Gtk::IconSize(3)));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   Gtk::ToolButton *button24 = Gtk::manage(new class Gtk::ToolButton(*button24_img, _("Neu")));
#endif //
   Gtk::Image *button42_img = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-clear"), Gtk::IconSize(3)));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   Gtk::ToolButton *button42 = Gtk::manage(new class Gtk::ToolButton(*button42_img, _("alles leeren")));
#endif //
   Gtk::Image *button26_img = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-find"), Gtk::IconSize(3)));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   Gtk::ToolButton *button26 = Gtk::manage(new class Gtk::ToolButton(*button26_img, _("Anzeigen")));
#endif //
   Gtk::Image *button27_img = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-print"), Gtk::IconSize(3)));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   button27 = Gtk::manage(new class Gtk::ToolButton(*button27_img, _("Drucken")));
#endif //
   checkbutton_ean_drucken = Gtk::manage(new class Gtk::CheckButton(_("EAN")));
   
   Gtk::Table *table17 = Gtk::manage(new class Gtk::Table(2, 2, false));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   Gtk::ToolItem *toolitem4 = Gtk::manage(new class Gtk::ToolItem());
#endif //
   Gtk::Image *preis_ergaenzen_img = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-find"), Gtk::IconSize(3)));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   preis_ergaenzen = Gtk::manage(new class Gtk::ToolButton(*preis_ergaenzen_img, _("Preise\n"
		"ergänzen")));
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   
   Gtk::SeparatorToolItem *separatortoolitem7 = Gtk::manage(new class Gtk::SeparatorToolItem());
#endif //
   Gtk::Image *rngentry_del_img = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-delete"), Gtk::IconSize(3)));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   rngentry_del = Gtk::manage(new class Gtk::ToolButton(*rngentry_del_img, _("Liefersch.\n"
		"löschen")));
#endif //
   
   Gtk::Toolbar *toolbar7 = Gtk::manage(new class Gtk::Toolbar());
   Gtk::Label *label66 = Gtk::manage(new class Gtk::Label(_("Währung")));
   Gtk::Label *label87 = Gtk::manage(new class Gtk::Label(_("Zahlung")));
   optionmenu_zahlart = Gtk::manage(new class Gtk::OptionMenu());
   rngnr = new class SearchComboContent<int>();
   
   Gtk::Label *label72 = Gtk::manage(new class Gtk::Label(_("Kunde")));
   Gtk::Label *label60 = Gtk::manage(new class Gtk::Label(_("Rg. Nr.")));
   Gtk::Label *label61 = Gtk::manage(new class Gtk::Label(_("Rg. Datum")));
   bezahlt = Gtk::manage(new class Gtk::CheckButton(_("bezahlt")));
   label_rechnung_ctl = Gtk::manage(new class Gtk::Label(""));
   rng_WWaehrung = new class WWaehrung(WWaehrung::KURZ);
   
   Gtk::HSeparator *hseparator5 = Gtk::manage(new class Gtk::HSeparator());
   lieferkunde = new class KundenBox2();
   rngdatum = new class datewin();
   rabatt_typ = Gtk::manage(new class Gtk::OptionMenu());
   
   Gtk::Label *label98 = Gtk::manage(new class Gtk::Label(_("Valuta")));
   zahlziel = new class datewin();
   
   Gtk::Adjustment *rabatt_wert_adj = Gtk::manage(new class Gtk::Adjustment(0, 0, 100, 1, 10, 10));
   rabatt_wert = Gtk::manage(new class Gtk::SpinButton(*rabatt_wert_adj, 1, 2));
   
   Gtk::Table *table23 = Gtk::manage(new class Gtk::Table(2, 2, false));
   Gtk::Table *table10 = Gtk::manage(new class Gtk::Table(2, 2, false));
   Gtk::Label *label140 = Gtk::manage(new class Gtk::Label(_("Rechnung")));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   frame_rechnung = Gtk::manage(new class Gtk::Expander());
#else //
   frame_rechnung = Gtk::manage(new class Gtk::HandleBox());
#endif //
   
   Gtk::RadioButton::Group _RadioBGroup_radiobutton_artikelpreis;
   radiobutton_artikelpreis = Gtk::manage(new class Gtk::RadioButton(_RadioBGroup_radiobutton_artikelpreis, _("Preislistenpreis")));
   label_artikelpreis = Gtk::manage(new class Gtk::Label(_("0,00")));
   
   Gtk::HBox *hbox24 = Gtk::manage(new class Gtk::HBox(false, 0));
   radiobutton_auftragspreis = Gtk::manage(new class Gtk::RadioButton(_RadioBGroup_radiobutton_artikelpreis, _("Auftrag")));
   label_auftragspreis = Gtk::manage(new class Gtk::Label(_("0,00")));
   
   Gtk::HBox *hbox25 = Gtk::manage(new class Gtk::HBox(false, 0));
   radiobutton_preiseingabe = Gtk::manage(new class Gtk::RadioButton(_RadioBGroup_radiobutton_artikelpreis, _("Eingabe")));
   
   Gtk::Adjustment *spinbutton_preiseingabe_adj = Gtk::manage(new class Gtk::Adjustment(0, 0, 10000, 0.1, 10, 10));
   spinbutton_preiseingabe = Gtk::manage(new class Gtk::SpinButton(*spinbutton_preiseingabe_adj, 1, 2));
   
   Gtk::HBox *hbox26 = Gtk::manage(new class Gtk::HBox(false, 0));
   button_pr = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-apply")));
   
   Gtk::HBox *hbox23 = Gtk::manage(new class Gtk::HBox(false, 0));
   Gtk::Label *label142 = Gtk::manage(new class Gtk::Label(_("Preis überschreiben mit ...")));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   Gtk::Expander *expander_preis = Gtk::manage(new class Gtk::Expander());
#else //
   Gtk::HandleBox *expander_preis = Gtk::manage(new class Gtk::HandleBox());
#endif //
   rtree_daten = new class SimpleTree(7);
   
   Gtk::ScrolledWindow *scrolledwindow19 = Gtk::manage(new class Gtk::ScrolledWindow());
   Gtk::VBox *vbox17 = Gtk::manage(new class Gtk::VBox(false, 0));
   Gtk::Label *label111 = Gtk::manage(new class Gtk::Label(_("Warenwert")));
   label_waehrung1 = Gtk::manage(new class Gtk::Label(_("-")));
   label_waehrung2 = Gtk::manage(new class Gtk::Label(_("-")));
   
   Gtk::Adjustment *rgbetrag_warenwert_adj = Gtk::manage(new class Gtk::Adjustment(0, 0, 100000, 1, 10, 10));
   rgbetrag_warenwert = Gtk::manage(new class Gtk::SpinButton(*rgbetrag_warenwert_adj, 1, 2));
   
   Gtk::Label *label112 = Gtk::manage(new class Gtk::Label(_("Betrag")));
   Gtk::Adjustment *rgbetrag_netto_adj = Gtk::manage(new class Gtk::Adjustment(0, 0, 100000, 1, 10, 10));
   rgbetrag_netto = Gtk::manage(new class Gtk::SpinButton(*rgbetrag_netto_adj, 1, 2));
   
   Gtk::Label *label113 = Gtk::manage(new class Gtk::Label(_("- Rabatt")));
   Gtk::Label *label114 = Gtk::manage(new class Gtk::Label(_("+ MwSt.")));
   Gtk::Label *label115 = Gtk::manage(new class Gtk::Label(_("Endbetrag")));
   label_waehrung6 = Gtk::manage(new class Gtk::Label(_("-")));
   label_waehrung7 = Gtk::manage(new class Gtk::Label(_("-")));
   
   Gtk::Adjustment *rgbetrag_rabatt_adj = Gtk::manage(new class Gtk::Adjustment(0, 0, 100000, 1, 10, 10));
   rgbetrag_rabatt = Gtk::manage(new class Gtk::SpinButton(*rgbetrag_rabatt_adj, 1, 2));
   
   Gtk::Adjustment *rgbetrag_mwst_adj = Gtk::manage(new class Gtk::Adjustment(0, 0, 100000, 1, 10, 10));
   rgbetrag_mwst = Gtk::manage(new class Gtk::SpinButton(*rgbetrag_mwst_adj, 1, 2));
   
   Gtk::Adjustment *rgbetrag_endsumme_adj = Gtk::manage(new class Gtk::Adjustment(0, 0, 100000, 1, 10, 10));
   rgbetrag_endsumme = Gtk::manage(new class Gtk::SpinButton(*rgbetrag_endsumme_adj, 1, 2));
   
   Gtk::Label *label116 = Gtk::manage(new class Gtk::Label(_("Zus./Abs.")));
   Gtk::Label *label117 = Gtk::manage(new class Gtk::Label(_("Summe")));
   label_waehrung3 = Gtk::manage(new class Gtk::Label(_("-")));
   label_waehrung4 = Gtk::manage(new class Gtk::Label(_("-")));
   label_waehrung5 = Gtk::manage(new class Gtk::Label(_("-")));
   
   Gtk::Adjustment *rgbetrag_zusabs_adj = Gtk::manage(new class Gtk::Adjustment(0, 0, 100000, 1, 10, 10));
   rgbetrag_zusabs = Gtk::manage(new class Gtk::SpinButton(*rgbetrag_zusabs_adj, 1, 2));
   
   Gtk::Adjustment *rgbetrag_zwsumme_adj = Gtk::manage(new class Gtk::Adjustment(0, 0, 100000, 1, 10, 10));
   rgbetrag_zwsumme = Gtk::manage(new class Gtk::SpinButton(*rgbetrag_zwsumme_adj, 1, 2));
   entsorgung = Gtk::manage(new class Gtk::CheckButton(_("Ents.-Pausch.")));
   
   Gtk::VSeparator *vseparator1 = Gtk::manage(new class Gtk::VSeparator());
   Gtk::Table *table28 = Gtk::manage(new class Gtk::Table(2, 2, false));
   Gtk::Label *label144 = Gtk::manage(new class Gtk::Label(_("Wert")));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   frame_betrag = Gtk::manage(new class Gtk::Expander());
#else //
   frame_betrag = Gtk::manage(new class Gtk::HandleBox());
#endif //
   
   Gtk::HBox *hbox35 = Gtk::manage(new class Gtk::HBox(false, 0));
   rng_notiz = Gtk::manage(new class Gtk::TextView());
   
   Gtk::ScrolledWindow *scrolledwindow13 = Gtk::manage(new class Gtk::ScrolledWindow());
   Gtk::Image *rng_notiz_save_img = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-save"), Gtk::IconSize(3)));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   rng_notiz_save = Gtk::manage(new class Gtk::ToolButton(*rng_notiz_save_img, _("speichern")));
#endif //
   
   Gtk::Toolbar *toolbar15 = Gtk::manage(new class Gtk::Toolbar());
   Gtk::HBox *hbox20 = Gtk::manage(new class Gtk::HBox(false, 0));
   Gtk::Label *label143 = Gtk::manage(new class Gtk::Label(_("Notiz")));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   expander_notiz = Gtk::manage(new class Gtk::Expander());
#else //
   expander_notiz = Gtk::manage(new class Gtk::HandleBox());
#endif //
   
   Gtk::VBox *vpaned1 = Gtk::manage(new class Gtk::VBox(false, 0));
   Gtk::Label *label141 = Gtk::manage(new class Gtk::Label(_("Rechnungsdaten")));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   frame_rechnungsdaten = Gtk::manage(new class Gtk::Expander());
#else //
   frame_rechnungsdaten = Gtk::manage(new class Gtk::HandleBox());
#endif //
   lieferscheinnr = Gtk::manage(new class Gtk::Entry());
   
   Gtk::Label *label63 = Gtk::manage(new class Gtk::Label(_("Liefer.Nr.")));
   Gtk::Label *label71 = Gtk::manage(new class Gtk::Label(_("Liefer. Datum")));
   Glib::RefPtr<Gdk::PixbufLoader> _button_allopen_img_loader=Gdk::PixbufLoader::create();
   _button_allopen_img_loader->write(stock_book_open_png_data, sizeof stock_book_open_png_data);
   _button_allopen_img_loader->close();
   
   Gtk::Image *button_allopen_img = Gtk::manage(new class Gtk::Image(_button_allopen_img_loader->get_pixbuf()));
   _button_allopen_img_loader=Glib::RefPtr<Gdk::PixbufLoader>();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   
   Gtk::ToolButton *button_allopen = Gtk::manage(new class Gtk::ToolButton(*button_allopen_img, _("offene Liefer.")));
#endif //
   Gtk::Image *button_lieferscheine_aufraumen_img = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-clear"), Gtk::IconSize(3)));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   button_lieferscheine_aufraumen = Gtk::manage(new class Gtk::ToolButton(*button_lieferscheine_aufraumen_img, _("leere Liefer. aufräumen")));
#endif //
   
   Gtk::Toolbar *toolbar14 = Gtk::manage(new class Gtk::Toolbar());
   Glib::RefPtr<Gdk::PixbufLoader> _lief_uebernehmen_img_loader=Gdk::PixbufLoader::create();
   _lief_uebernehmen_img_loader->write(stock_attach_png_data, sizeof stock_attach_png_data);
   _lief_uebernehmen_img_loader->close();
   
   Gtk::Image *lief_uebernehmen_img = Gtk::manage(new class Gtk::Image(_lief_uebernehmen_img_loader->get_pixbuf()));
   _lief_uebernehmen_img_loader=Glib::RefPtr<Gdk::PixbufLoader>();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   lief_uebernehmen = Gtk::manage(new class Gtk::ToolButton(*lief_uebernehmen_img, _("Liefersch. übernehmen")));
#endif //
   
   Gtk::Toolbar *toolbar8 = Gtk::manage(new class Gtk::Toolbar());
   lieferscheindatum = new class datewin();
   
   Gtk::Table *table11 = Gtk::manage(new class Gtk::Table(2, 2, false));
   rtree_offen = new class SimpleTree(4);
   
   Gtk::ScrolledWindow *scrolledwindow7 = Gtk::manage(new class Gtk::ScrolledWindow());
   vbox_n_b_lieferscheine = Gtk::manage(new class Gtk::VBox(false, 0));
   
   Gtk::Label *label145 = Gtk::manage(new class Gtk::Label(_("nicht berechnete Lieferscheine")));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   expander_ls = Gtk::manage(new class Gtk::Expander());
#else //
   expander_ls = Gtk::manage(new class Gtk::HandleBox());
#endif //
   
   Gtk::HSeparator *hseparator6 = Gtk::manage(new class Gtk::HSeparator());
   Gtk::VBox *vbox13 = Gtk::manage(new class Gtk::VBox(false, 0));
   
   menuitem1_menu->items().push_back(Gtk::Menu_Helpers::StockMenuElem(Gtk::StockID("gtk-close")));
   pixmapmenuitem1 = (Gtk::ImageMenuItem *)&menuitem1_menu->items().back();
   
   bearbeiten1_menu->items().push_back(Gtk::Menu_Helpers::ImageMenuElem(_("Gutschrift"), *image5));
   gutschrift = (Gtk::ImageMenuItem *)&bearbeiten1_menu->items().back();
   
   bearbeiten1_menu->items().push_back(Gtk::Menu_Helpers::SeparatorElem());
   trennlinie11 = (Gtk::MenuItem *)&bearbeiten1_menu->items().back();
   
   bearbeiten1_menu->items().push_back(Gtk::Menu_Helpers::ImageMenuElem(_("Storno"), *image6));
   storno = (Gtk::ImageMenuItem *)&bearbeiten1_menu->items().back();
   
   bearbeiten1_menu->items().push_back(Gtk::Menu_Helpers::SeparatorElem());
   trennlinie13 = (Gtk::MenuItem *)&bearbeiten1_menu->items().back();
   
   bearbeiten1_menu->items().push_back(Gtk::Menu_Helpers::MenuElem(_("Provisionierung")));
   rngprovision = (Gtk::MenuItem *)&bearbeiten1_menu->items().back();
   
   menubar3->items().push_back(Gtk::Menu_Helpers::MenuElem(_("_File"), *menuitem1_menu));
   menuitem1 = (Gtk::MenuItem *)&menubar3->items().back();
   
   menubar3->items().push_back(Gtk::Menu_Helpers::MenuElem(_("_Edit"), *bearbeiten1_menu));
   bearbeiten1 = (Gtk::MenuItem *)&menubar3->items().back();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar7->append(*button23);
#else //
   
   
   toolbar7->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem(_("Schließen"), *button23_img, Gtk::Toolbar_Helpers::Callback0()));
   Gtk::Button *button23 = static_cast<Gtk::Button *>(toolbar7->tools().back().get_widget());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar7->append(*button24);
#else //
   
   
   toolbar7->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem(_("Neu"), *button24_img, Gtk::Toolbar_Helpers::Callback0()));
   Gtk::Button *button24 = static_cast<Gtk::Button *>(toolbar7->tools().back().get_widget());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar7->append(*button42);
#else //
   
   
   toolbar7->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem(_("alles leeren"), *button42_img, Gtk::Toolbar_Helpers::Callback0()));
   Gtk::Button *button42 = static_cast<Gtk::Button *>(toolbar7->tools().back().get_widget());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar7->append(*button26);
#else //
   
   
   toolbar7->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem(_("Anzeigen"), *button26_img, Gtk::Toolbar_Helpers::Callback0()));
   Gtk::Button *button26 = static_cast<Gtk::Button *>(toolbar7->tools().back().get_widget());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar7->append(*button27);
#else //
   
   
   toolbar7->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem(_("Drucken"), *button27_img, Gtk::Toolbar_Helpers::Callback0()));
   button27 = static_cast<Gtk::Button *>(toolbar7->tools().back().get_widget());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar7->append(*toolitem4);
#else //
   toolbar7->tools().push_back(Gtk::Toolbar_Helpers::Element(*table17));
   
   Gtk::Widget *toolitem4 = toolbar7->tools().back().get_widget();
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar7->append(*preis_ergaenzen);
#else //
   
   
   toolbar7->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem(_("Preise\n"
		"ergänzen"), *preis_ergaenzen_img, Gtk::Toolbar_Helpers::Callback0()));
   preis_ergaenzen = static_cast<Gtk::Button *>(toolbar7->tools().back().get_widget());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar7->append(*separatortoolitem7);
#else //
   toolbar7->tools().push_back(Gtk::Toolbar_Helpers::Space());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar7->append(*rngentry_del);
#else //
   
   
   toolbar7->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem(_("Liefersch.\n"
		"löschen"), *rngentry_del_img, Gtk::Toolbar_Helpers::Callback0()));
   rngentry_del = static_cast<Gtk::Button *>(toolbar7->tools().back().get_widget());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar15->append(*rng_notiz_save);
#else //
   
   
   toolbar15->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem(_("speichern"), *rng_notiz_save_img, Gtk::Toolbar_Helpers::Callback0()));
   rng_notiz_save = static_cast<Gtk::Button *>(toolbar15->tools().back().get_widget());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar14->append(*button_allopen);
#else //
   
   
   toolbar14->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem(_("offene Liefer."), *button_allopen_img, Gtk::Toolbar_Helpers::Callback0()));
   Gtk::Button *button_allopen = static_cast<Gtk::Button *>(toolbar14->tools().back().get_widget());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar14->append(*button_lieferscheine_aufraumen);
#else //
   
   
   toolbar14->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem(_("leere Liefer. aufräumen"), *button_lieferscheine_aufraumen_img, Gtk::Toolbar_Helpers::Callback0()));
   button_lieferscheine_aufraumen = static_cast<Gtk::Button *>(toolbar14->tools().back().get_widget());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar8->append(*lief_uebernehmen);
#else //
   
   
   toolbar8->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem(_("Liefersch. übernehmen"), *lief_uebernehmen_img, Gtk::Toolbar_Helpers::Callback0()));
   lief_uebernehmen = static_cast<Gtk::Button *>(toolbar8->tools().back().get_widget());
#endif //
   image5->set_alignment(0.5,0.5);
   image5->set_padding(0,0);
   image6->set_alignment(0.5,0.5);
   image6->set_padding(0,0);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   button23->set_visible_horizontal(true);
   button23->set_visible_vertical(true);
   button23->set_is_important(false);
   button23->set_homogeneous(true);
   button23->set_expand(false);
#endif //
   button23_img->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   button24->set_visible_horizontal(true);
   button24->set_visible_vertical(true);
   button24->set_is_important(false);
   button24->set_homogeneous(true);
   button24->set_expand(false);
#endif //
   button24_img->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   button42->set_visible_horizontal(true);
   button42->set_visible_vertical(true);
   button42->set_is_important(false);
   button42->set_homogeneous(true);
   button42->set_expand(false);
#endif //
   button42_img->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   button26->set_visible_horizontal(true);
   button26->set_visible_vertical(true);
   button26->set_is_important(false);
   button26->set_homogeneous(true);
   button26->set_expand(false);
#endif //
   button26_img->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   button27->set_visible_horizontal(true);
   button27->set_visible_vertical(true);
   button27->set_is_important(false);
   button27->set_homogeneous(true);
   button27->set_expand(false);
#endif //
   button27_img->show();
   checkbutton_ean_drucken->set_flags(Gtk::CAN_FOCUS);
   checkbutton_ean_drucken->set_relief(Gtk::RELIEF_NORMAL);
   checkbutton_ean_drucken->set_mode(true);
   checkbutton_ean_drucken->set_active(false);
   table17->set_row_spacings(0);
   table17->set_col_spacings(0);
   table17->attach(*checkbutton_ean_drucken, 0, 1, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolitem4->set_visible_horizontal(true);
   toolitem4->set_visible_vertical(true);
   toolitem4->set_is_important(false);
   toolitem4->set_homogeneous(false);
   toolitem4->set_expand(false);
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolitem4->add(*table17);
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   preis_ergaenzen->set_visible_horizontal(true);
   preis_ergaenzen->set_visible_vertical(true);
   preis_ergaenzen->set_is_important(false);
   preis_ergaenzen->set_homogeneous(true);
   preis_ergaenzen->set_expand(false);
#endif //
   preis_ergaenzen_img->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   separatortoolitem7->set_visible_horizontal(true);
   separatortoolitem7->set_visible_vertical(true);
   separatortoolitem7->set_homogeneous(false);
   separatortoolitem7->set_expand(false);
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   rngentry_del->set_sensitive(false);
   rngentry_del->set_visible_horizontal(true);
   rngentry_del->set_visible_vertical(true);
   rngentry_del->set_is_important(false);
   rngentry_del->set_homogeneous(true);
   rngentry_del->set_expand(false);
#endif //
   rngentry_del_img->show();
   toolbar7->set_tooltips(true);
   toolbar7->set_toolbar_style(Gtk::TOOLBAR_BOTH);
   toolbar7->set_orientation(Gtk::ORIENTATION_HORIZONTAL);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar7->set_show_arrow(false);
#endif //
   label66->set_alignment(0,0.5);
   label66->set_padding(0,0);
   label66->set_justify(Gtk::JUSTIFY_CENTER);
   label66->set_line_wrap(false);
   label66->set_use_markup(false);
   label66->set_selectable(false);
   label87->set_alignment(0,0.5);
   label87->set_padding(0,0);
   label87->set_justify(Gtk::JUSTIFY_CENTER);
   label87->set_line_wrap(false);
   label87->set_use_markup(false);
   label87->set_selectable(false);
   optionmenu_zahlart->set_flags(Gtk::CAN_FOCUS);
   {  
      
      Gtk::Menu *_m(manage(new Gtk::Menu()));
      Gtk::MenuItem *_mi;
      _mi = manage(new Gtk::MenuItem(_("Zahlungsart")));
      _m->append(*_mi);
      _mi->show();
      _mi->property_user_data().set_value((gpointer)0);
      optionmenu_zahlart->set_menu(*_m);
      optionmenu_zahlart->set_history(0);
   }
   optionmenu_zahlart->set_history(0);
   label72->set_alignment(0,0.5);
   label72->set_padding(0,0);
   label72->set_justify(Gtk::JUSTIFY_CENTER);
   label72->set_line_wrap(false);
   label72->set_use_markup(false);
   label72->set_selectable(false);
   label60->set_alignment(0,0.5);
   label60->set_padding(0,0);
   label60->set_justify(Gtk::JUSTIFY_CENTER);
   label60->set_line_wrap(false);
   label60->set_use_markup(false);
   label60->set_selectable(false);
   label61->set_alignment(0,0.5);
   label61->set_padding(0,0);
   label61->set_justify(Gtk::JUSTIFY_CENTER);
   label61->set_line_wrap(false);
   label61->set_use_markup(false);
   label61->set_selectable(false);
   bezahlt->set_flags(Gtk::CAN_FOCUS);
   bezahlt->set_relief(Gtk::RELIEF_NORMAL);
   bezahlt->set_mode(true);
   bezahlt->set_active(false);
   label_rechnung_ctl->set_alignment(0,0.5);
   label_rechnung_ctl->set_padding(0,0);
   label_rechnung_ctl->set_justify(Gtk::JUSTIFY_LEFT);
   label_rechnung_ctl->set_line_wrap(false);
   label_rechnung_ctl->set_use_markup(false);
   label_rechnung_ctl->set_selectable(false);
   rabatt_typ->set_flags(Gtk::CAN_FOCUS);
   _tooltips.set_tip(*rabatt_typ, _("Rabatt/Zuschlag auf alle Rechnungsposten"), "");
   {  
      
      Gtk::Menu *_m(manage(new Gtk::Menu()));
      Gtk::MenuItem *_mi;
      _mi = manage(new Gtk::MenuItem(_("Rabatt")));
      _m->append(*_mi);
      _mi->show();
      _mi->property_user_data().set_value((gpointer)0);
      _mi = manage(new Gtk::MenuItem(_("Zuschlag")));
      _m->append(*_mi);
      _mi->show();
      _mi->property_user_data().set_value((gpointer)1);
      rabatt_typ->set_menu(*_m);
      rabatt_typ->set_history(0);
   }
   rabatt_typ->set_history(0);
   label98->set_alignment(0,0.5);
   label98->set_padding(0,0);
   label98->set_justify(Gtk::JUSTIFY_CENTER);
   label98->set_line_wrap(false);
   label98->set_use_markup(false);
   label98->set_selectable(false);
   rabatt_wert->set_flags(Gtk::CAN_FOCUS);
   _tooltips.set_tip(*rabatt_wert, _("Rabatt/Zuschlag auf alle Rechnungsposten"), "");
   rabatt_wert->set_update_policy(Gtk::UPDATE_ALWAYS);
   rabatt_wert->set_numeric(true);
   rabatt_wert->set_digits(2);
   rabatt_wert->set_wrap(false);
   table23->set_row_spacings(0);
   table23->set_col_spacings(0);
   table23->attach(*rabatt_typ, 0, 1, 1, 2, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table23->attach(*label98, 0, 1, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table23->attach(*zahlziel, 1, 2, 0, 1, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, Gtk::SHRINK, 0, 0);
   table23->attach(*rabatt_wert, 1, 2, 1, 2, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table10->set_row_spacings(0);
   table10->set_col_spacings(0);
   table10->attach(*label66, 2, 3, 1, 2, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table10->attach(*label87, 2, 3, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table10->attach(*optionmenu_zahlart, 3, 4, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table10->attach(*rngnr, 1, 2, 1, 2, Gtk::AttachOptions(), Gtk::AttachOptions(), 0, 0);
   table10->attach(*label72, 0, 1, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table10->attach(*label60, 0, 1, 1, 2, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table10->attach(*label61, 0, 1, 2, 3, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table10->attach(*bezahlt, 0, 1, 3, 4, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table10->attach(*label_rechnung_ctl, 1, 2, 3, 4, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table10->attach(*rng_WWaehrung, 3, 4, 1, 2, Gtk::FILL, Gtk::FILL, 0, 0);
   table10->attach(*hseparator5, 0, 4, 4, 5, Gtk::FILL, Gtk::FILL, 0, 0);
   table10->attach(*lieferkunde, 1, 2, 0, 1, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table10->attach(*rngdatum, 1, 2, 2, 3, Gtk::AttachOptions(), Gtk::AttachOptions(), 0, 0);
   table10->attach(*table23, 2, 4, 2, 4, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   label140->set_alignment(0.5,0.5);
   label140->set_padding(0,0);
   label140->set_justify(Gtk::JUSTIFY_LEFT);
   label140->set_line_wrap(false);
   label140->set_use_markup(false);
   label140->set_selectable(false);
   frame_rechnung->set_border_width(1);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   frame_rechnung->set_expanded(true);
   frame_rechnung->set_spacing(0);
#endif //
   frame_rechnung->add(*table10);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   frame_rechnung->set_label_widget(*label140);
#endif //
   radiobutton_artikelpreis->set_sensitive(false);
   radiobutton_artikelpreis->set_flags(Gtk::CAN_FOCUS);
   radiobutton_artikelpreis->set_relief(Gtk::RELIEF_NORMAL);
   radiobutton_artikelpreis->set_mode(true);
   radiobutton_artikelpreis->set_active(true);
   label_artikelpreis->set_alignment(0.5,0.5);
   label_artikelpreis->set_padding(0,0);
   label_artikelpreis->set_justify(Gtk::JUSTIFY_CENTER);
   label_artikelpreis->set_line_wrap(false);
   label_artikelpreis->set_use_markup(false);
   label_artikelpreis->set_selectable(false);
   hbox24->pack_start(*radiobutton_artikelpreis, Gtk::PACK_SHRINK, 0);
   hbox24->pack_start(*label_artikelpreis, Gtk::PACK_SHRINK, 0);
   radiobutton_auftragspreis->set_sensitive(false);
   radiobutton_auftragspreis->set_flags(Gtk::CAN_FOCUS);
   radiobutton_auftragspreis->set_relief(Gtk::RELIEF_NORMAL);
   radiobutton_auftragspreis->set_mode(true);
   radiobutton_auftragspreis->set_active(false);
   label_auftragspreis->set_alignment(0.5,0.5);
   label_auftragspreis->set_padding(0,0);
   label_auftragspreis->set_justify(Gtk::JUSTIFY_CENTER);
   label_auftragspreis->set_line_wrap(false);
   label_auftragspreis->set_use_markup(false);
   label_auftragspreis->set_selectable(false);
   hbox25->pack_start(*radiobutton_auftragspreis, Gtk::PACK_SHRINK, 0);
   hbox25->pack_start(*label_auftragspreis, Gtk::PACK_SHRINK, 0);
   radiobutton_preiseingabe->set_sensitive(false);
   radiobutton_preiseingabe->set_flags(Gtk::CAN_FOCUS);
   radiobutton_preiseingabe->set_relief(Gtk::RELIEF_NORMAL);
   radiobutton_preiseingabe->set_mode(true);
   radiobutton_preiseingabe->set_active(false);
   spinbutton_preiseingabe->set_sensitive(false);
   spinbutton_preiseingabe->set_flags(Gtk::CAN_FOCUS);
   spinbutton_preiseingabe->set_update_policy(Gtk::UPDATE_ALWAYS);
   spinbutton_preiseingabe->set_numeric(false);
   spinbutton_preiseingabe->set_digits(2);
   spinbutton_preiseingabe->set_wrap(false);
   hbox26->pack_start(*radiobutton_preiseingabe, Gtk::PACK_SHRINK, 0);
   hbox26->pack_start(*spinbutton_preiseingabe, Gtk::PACK_SHRINK, 0);
   button_pr->set_sensitive(false);
   button_pr->set_relief(Gtk::RELIEF_NORMAL);
   hbox23->pack_start(*hbox24, Gtk::PACK_SHRINK, 30);
   hbox23->pack_start(*hbox25, Gtk::PACK_SHRINK, 30);
   hbox23->pack_start(*hbox26, Gtk::PACK_SHRINK, 30);
   hbox23->pack_start(*button_pr, Gtk::PACK_EXPAND_PADDING, 0);
   label142->set_alignment(0.5,0.5);
   label142->set_padding(0,0);
   label142->set_justify(Gtk::JUSTIFY_LEFT);
   label142->set_line_wrap(false);
   label142->set_use_markup(false);
   label142->set_selectable(false);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   expander_preis->set_expanded(true);
   expander_preis->set_spacing(0);
#endif //
   expander_preis->add(*hbox23);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   expander_preis->set_label_widget(*label142);
#endif //
   scrolledwindow19->set_shadow_type(Gtk::SHADOW_NONE);
   scrolledwindow19->set_policy(Gtk::POLICY_AUTOMATIC, Gtk::POLICY_AUTOMATIC);
   scrolledwindow19->property_window_placement().set_value(Gtk::CORNER_TOP_LEFT);
   scrolledwindow19->add(*rtree_daten);
   vbox17->pack_start(*expander_preis, Gtk::PACK_SHRINK, 0);
   vbox17->pack_start(*scrolledwindow19);
   label111->set_alignment(1,0.5);
   label111->set_padding(3,0);
   label111->set_justify(Gtk::JUSTIFY_CENTER);
   label111->set_line_wrap(false);
   label111->set_use_markup(false);
   label111->set_selectable(false);
   label_waehrung1->set_alignment(0,0.5);
   label_waehrung1->set_padding(0,0);
   label_waehrung1->set_justify(Gtk::JUSTIFY_CENTER);
   label_waehrung1->set_line_wrap(false);
   label_waehrung1->set_use_markup(false);
   label_waehrung1->set_selectable(false);
   label_waehrung2->set_alignment(0,0.5);
   label_waehrung2->set_padding(0,0);
   label_waehrung2->set_justify(Gtk::JUSTIFY_CENTER);
   label_waehrung2->set_line_wrap(false);
   label_waehrung2->set_use_markup(false);
   label_waehrung2->set_selectable(false);
   rgbetrag_warenwert->set_sensitive(false);
   rgbetrag_warenwert->set_flags(Gtk::CAN_FOCUS);
   rgbetrag_warenwert->set_update_policy(Gtk::UPDATE_ALWAYS);
   rgbetrag_warenwert->set_numeric(true);
   rgbetrag_warenwert->set_digits(2);
   rgbetrag_warenwert->set_wrap(false);
   label112->set_alignment(1,0.5);
   label112->set_padding(3,0);
   label112->set_justify(Gtk::JUSTIFY_CENTER);
   label112->set_line_wrap(false);
   label112->set_use_markup(false);
   label112->set_selectable(false);
   rgbetrag_netto->set_sensitive(false);
   rgbetrag_netto->set_flags(Gtk::CAN_FOCUS);
   rgbetrag_netto->set_update_policy(Gtk::UPDATE_ALWAYS);
   rgbetrag_netto->set_numeric(true);
   rgbetrag_netto->set_digits(2);
   rgbetrag_netto->set_wrap(false);
   label113->set_alignment(1,0.5);
   label113->set_padding(3,0);
   label113->set_justify(Gtk::JUSTIFY_CENTER);
   label113->set_line_wrap(false);
   label113->set_use_markup(false);
   label113->set_selectable(false);
   label114->set_alignment(1,0.5);
   label114->set_padding(2,0);
   label114->set_justify(Gtk::JUSTIFY_CENTER);
   label114->set_line_wrap(false);
   label114->set_use_markup(false);
   label114->set_selectable(false);
   label115->set_alignment(1,0.5);
   label115->set_padding(3,0);
   label115->set_justify(Gtk::JUSTIFY_CENTER);
   label115->set_line_wrap(false);
   label115->set_use_markup(false);
   label115->set_selectable(false);
   label_waehrung6->set_alignment(0,0.5);
   label_waehrung6->set_padding(0,0);
   label_waehrung6->set_justify(Gtk::JUSTIFY_CENTER);
   label_waehrung6->set_line_wrap(false);
   label_waehrung6->set_use_markup(false);
   label_waehrung6->set_selectable(false);
   label_waehrung7->set_alignment(0,0.5);
   label_waehrung7->set_padding(0,0);
   label_waehrung7->set_justify(Gtk::JUSTIFY_CENTER);
   label_waehrung7->set_line_wrap(false);
   label_waehrung7->set_use_markup(false);
   label_waehrung7->set_selectable(false);
   rgbetrag_rabatt->set_sensitive(false);
   rgbetrag_rabatt->set_flags(Gtk::CAN_FOCUS);
   rgbetrag_rabatt->set_update_policy(Gtk::UPDATE_ALWAYS);
   rgbetrag_rabatt->set_numeric(true);
   rgbetrag_rabatt->set_digits(2);
   rgbetrag_rabatt->set_wrap(false);
   rgbetrag_mwst->set_sensitive(false);
   rgbetrag_mwst->set_flags(Gtk::CAN_FOCUS);
   rgbetrag_mwst->set_update_policy(Gtk::UPDATE_ALWAYS);
   rgbetrag_mwst->set_numeric(true);
   rgbetrag_mwst->set_digits(2);
   rgbetrag_mwst->set_wrap(false);
   rgbetrag_endsumme->set_sensitive(false);
   rgbetrag_endsumme->set_flags(Gtk::CAN_FOCUS);
   rgbetrag_endsumme->set_update_policy(Gtk::UPDATE_ALWAYS);
   rgbetrag_endsumme->set_numeric(true);
   rgbetrag_endsumme->set_digits(2);
   rgbetrag_endsumme->set_wrap(false);
   label116->set_alignment(1,0.5);
   label116->set_padding(3,0);
   label116->set_justify(Gtk::JUSTIFY_CENTER);
   label116->set_line_wrap(false);
   label116->set_use_markup(false);
   label116->set_selectable(false);
   label117->set_alignment(1,0.5);
   label117->set_padding(3,0);
   label117->set_justify(Gtk::JUSTIFY_CENTER);
   label117->set_line_wrap(false);
   label117->set_use_markup(false);
   label117->set_selectable(false);
   label_waehrung3->set_alignment(0,0.5);
   label_waehrung3->set_padding(0,0);
   label_waehrung3->set_justify(Gtk::JUSTIFY_CENTER);
   label_waehrung3->set_line_wrap(false);
   label_waehrung3->set_use_markup(false);
   label_waehrung3->set_selectable(false);
   label_waehrung4->set_alignment(0,0.5);
   label_waehrung4->set_padding(0,0);
   label_waehrung4->set_justify(Gtk::JUSTIFY_CENTER);
   label_waehrung4->set_line_wrap(false);
   label_waehrung4->set_use_markup(false);
   label_waehrung4->set_selectable(false);
   label_waehrung5->set_alignment(0,0.5);
   label_waehrung5->set_padding(0,0);
   label_waehrung5->set_justify(Gtk::JUSTIFY_CENTER);
   label_waehrung5->set_line_wrap(false);
   label_waehrung5->set_use_markup(false);
   label_waehrung5->set_selectable(false);
   rgbetrag_zusabs->set_sensitive(false);
   rgbetrag_zusabs->set_flags(Gtk::CAN_FOCUS);
   rgbetrag_zusabs->set_update_policy(Gtk::UPDATE_ALWAYS);
   rgbetrag_zusabs->set_numeric(true);
   rgbetrag_zusabs->set_digits(2);
   rgbetrag_zusabs->set_wrap(false);
   rgbetrag_zwsumme->set_sensitive(false);
   rgbetrag_zwsumme->set_flags(Gtk::CAN_FOCUS);
   rgbetrag_zwsumme->set_update_policy(Gtk::UPDATE_ALWAYS);
   rgbetrag_zwsumme->set_numeric(true);
   rgbetrag_zwsumme->set_digits(2);
   rgbetrag_zwsumme->set_wrap(false);
   entsorgung->set_relief(Gtk::RELIEF_NORMAL);
   entsorgung->set_mode(true);
   entsorgung->set_active(false);
   table28->set_row_spacings(0);
   table28->set_col_spacings(0);
   table28->attach(*label111, 1, 2, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table28->attach(*label_waehrung1, 3, 4, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table28->attach(*label_waehrung2, 3, 4, 1, 2, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table28->attach(*rgbetrag_warenwert, 2, 3, 0, 1, Gtk::AttachOptions(), Gtk::AttachOptions(), 0, 0);
   table28->attach(*label112, 1, 2, 2, 3, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table28->attach(*rgbetrag_netto, 2, 3, 2, 3, Gtk::AttachOptions(), Gtk::AttachOptions(), 0, 0);
   table28->attach(*label113, 1, 2, 1, 2, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table28->attach(*label114, 1, 2, 6, 7, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table28->attach(*label115, 1, 2, 7, 8, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table28->attach(*label_waehrung6, 3, 4, 6, 7, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table28->attach(*label_waehrung7, 3, 4, 7, 8, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table28->attach(*rgbetrag_rabatt, 2, 3, 1, 2, Gtk::AttachOptions(), Gtk::AttachOptions(), 0, 0);
   table28->attach(*rgbetrag_mwst, 2, 3, 6, 7, Gtk::AttachOptions(), Gtk::AttachOptions(), 0, 0);
   table28->attach(*rgbetrag_endsumme, 2, 3, 7, 8, Gtk::AttachOptions(), Gtk::AttachOptions(), 0, 0);
   table28->attach(*label116, 1, 2, 4, 5, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table28->attach(*label117, 1, 2, 5, 6, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table28->attach(*label_waehrung3, 3, 4, 2, 3, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table28->attach(*label_waehrung4, 3, 4, 4, 5, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table28->attach(*label_waehrung5, 3, 4, 5, 6, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table28->attach(*rgbetrag_zusabs, 2, 3, 4, 5, Gtk::AttachOptions(), Gtk::AttachOptions(), 0, 0);
   table28->attach(*rgbetrag_zwsumme, 2, 3, 5, 6, Gtk::AttachOptions(), Gtk::AttachOptions(), 0, 0);
   table28->attach(*entsorgung, 1, 4, 3, 4, Gtk::AttachOptions(), Gtk::AttachOptions(), 0, 0);
   table28->attach(*vseparator1, 0, 1, 0, 8, Gtk::FILL, Gtk::FILL, 0, 0);
   label144->set_alignment(0.5,0.5);
   label144->set_padding(0,0);
   label144->set_justify(Gtk::JUSTIFY_LEFT);
   label144->set_line_wrap(false);
   label144->set_use_markup(false);
   label144->set_selectable(false);
   frame_betrag->set_border_width(3);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   frame_betrag->set_expanded(true);
   frame_betrag->set_spacing(0);
#endif //
   frame_betrag->add(*table28);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   frame_betrag->set_label_widget(*label144);
#endif //
   hbox35->pack_start(*vbox17);
   hbox35->pack_start(*frame_betrag, Gtk::PACK_SHRINK, 0);
   rng_notiz->set_flags(Gtk::CAN_FOCUS);
   rng_notiz->set_editable(true);
   rng_notiz->set_cursor_visible(true);
   rng_notiz->set_pixels_above_lines(0);
   rng_notiz->set_pixels_below_lines(0);
   rng_notiz->set_pixels_inside_wrap(0);
   rng_notiz->set_left_margin(0);
   rng_notiz->set_right_margin(0);
   rng_notiz->set_indent(0);
   rng_notiz->set_wrap_mode(Gtk::WRAP_WORD);
   rng_notiz->set_justification(Gtk::JUSTIFY_LEFT);
   scrolledwindow13->set_shadow_type(Gtk::SHADOW_IN);
   scrolledwindow13->set_policy(Gtk::POLICY_NEVER, Gtk::POLICY_ALWAYS);
   scrolledwindow13->property_window_placement().set_value(Gtk::CORNER_TOP_LEFT);
   scrolledwindow13->add(*rng_notiz);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   rng_notiz_save->set_sensitive(false);
   rng_notiz_save->set_visible_horizontal(true);
   rng_notiz_save->set_visible_vertical(true);
   rng_notiz_save->set_is_important(true);
   rng_notiz_save->set_homogeneous(true);
   rng_notiz_save->set_expand(false);
#endif //
   rng_notiz_save_img->show();
   toolbar15->set_tooltips(true);
   toolbar15->set_toolbar_style(Gtk::TOOLBAR_ICONS);
   toolbar15->set_orientation(Gtk::ORIENTATION_HORIZONTAL);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar15->set_show_arrow(false);
#endif //
   hbox20->pack_start(*scrolledwindow13);
   hbox20->pack_start(*toolbar15, Gtk::PACK_SHRINK, 0);
   label143->set_alignment(0.5,0.5);
   label143->set_padding(0,0);
   label143->set_justify(Gtk::JUSTIFY_LEFT);
   label143->set_line_wrap(false);
   label143->set_use_markup(false);
   label143->set_selectable(false);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   expander_notiz->set_expanded(false);
   expander_notiz->set_spacing(0);
#endif //
   expander_notiz->add(*hbox20);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   expander_notiz->set_label_widget(*label143);
#endif //
   vpaned1->pack_start(*hbox35);
   vpaned1->pack_start(*expander_notiz, Gtk::PACK_SHRINK, 0);
   label141->set_alignment(0.5,0.5);
   label141->set_padding(0,0);
   label141->set_justify(Gtk::JUSTIFY_LEFT);
   label141->set_line_wrap(false);
   label141->set_use_markup(false);
   label141->set_selectable(false);
   frame_rechnungsdaten->set_border_width(1);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   frame_rechnungsdaten->set_expanded(true);
   frame_rechnungsdaten->set_spacing(0);
#endif //
   frame_rechnungsdaten->add(*vpaned1);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   frame_rechnungsdaten->set_label_widget(*label141);
#endif //
   lieferscheinnr->set_flags(Gtk::CAN_FOCUS);
   lieferscheinnr->set_visibility(true);
   lieferscheinnr->set_editable(false);
   lieferscheinnr->set_max_length(0);
   lieferscheinnr->set_text("");
   lieferscheinnr->set_has_frame(true);
   lieferscheinnr->set_activates_default(false);
   label63->set_alignment(0,0.5);
   label63->set_padding(0,0);
   label63->set_justify(Gtk::JUSTIFY_LEFT);
   label63->set_line_wrap(false);
   label63->set_use_markup(false);
   label63->set_selectable(false);
   label71->set_alignment(0,0.5);
   label71->set_padding(0,0);
   label71->set_justify(Gtk::JUSTIFY_CENTER);
   label71->set_line_wrap(false);
   label71->set_use_markup(false);
   label71->set_selectable(false);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   button_allopen->set_visible_horizontal(true);
   button_allopen->set_visible_vertical(true);
   button_allopen->set_is_important(false);
   button_allopen->set_homogeneous(true);
   button_allopen->set_expand(false);
#endif //
   button_allopen_img->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   button_lieferscheine_aufraumen->set_visible_horizontal(true);
   button_lieferscheine_aufraumen->set_visible_vertical(true);
   button_lieferscheine_aufraumen->set_is_important(false);
   button_lieferscheine_aufraumen->set_homogeneous(true);
   button_lieferscheine_aufraumen->set_expand(false);
#endif //
   button_lieferscheine_aufraumen_img->show();
   toolbar14->set_tooltips(true);
   toolbar14->set_toolbar_style(Gtk::TOOLBAR_BOTH);
   toolbar14->set_orientation(Gtk::ORIENTATION_HORIZONTAL);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar14->set_show_arrow(false);
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   lief_uebernehmen->set_sensitive(false);
   _tooltips.set_tip(*lief_uebernehmen, _("Kompletten Auftrag in Lieferschein übernehmen"), "");
   lief_uebernehmen->set_visible_horizontal(true);
   lief_uebernehmen->set_visible_vertical(true);
   lief_uebernehmen->set_is_important(false);
   lief_uebernehmen->set_homogeneous(true);
   lief_uebernehmen->set_expand(false);
   lief_uebernehmen->set_tooltip(_tooltips, _("Kompletten Auftrag in Lieferschein übernehmen"));
#endif //
   lief_uebernehmen_img->show();
   toolbar8->set_tooltips(true);
   toolbar8->set_toolbar_style(Gtk::TOOLBAR_BOTH);
   toolbar8->set_orientation(Gtk::ORIENTATION_HORIZONTAL);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar8->set_show_arrow(false);
#endif //
   table11->set_border_width(5);
   table11->set_row_spacings(0);
   table11->set_col_spacings(1);
   table11->attach(*lieferscheinnr, 1, 2, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table11->attach(*label63, 0, 1, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table11->attach(*label71, 2, 3, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table11->attach(*toolbar14, 5, 6, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table11->attach(*toolbar8, 4, 5, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table11->attach(*lieferscheindatum, 3, 4, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   scrolledwindow7->set_shadow_type(Gtk::SHADOW_NONE);
   scrolledwindow7->set_policy(Gtk::POLICY_AUTOMATIC, Gtk::POLICY_AUTOMATIC);
   scrolledwindow7->property_window_placement().set_value(Gtk::CORNER_TOP_LEFT);
   scrolledwindow7->add(*rtree_offen);
   vbox_n_b_lieferscheine->pack_start(*table11, Gtk::PACK_SHRINK, 0);
   vbox_n_b_lieferscheine->pack_start(*scrolledwindow7);
   label145->set_alignment(0.5,0.5);
   label145->set_padding(0,0);
   label145->set_justify(Gtk::JUSTIFY_LEFT);
   label145->set_line_wrap(false);
   label145->set_use_markup(false);
   label145->set_selectable(false);
   expander_ls->set_border_width(1);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   expander_ls->set_expanded(true);
   expander_ls->set_spacing(0);
#endif //
   expander_ls->add(*vbox_n_b_lieferscheine);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   expander_ls->set_label_widget(*label145);
#endif //
   vbox13->pack_start(*menubar3, Gtk::PACK_SHRINK, 0);
   vbox13->pack_start(*toolbar7, Gtk::PACK_SHRINK, 0);
   vbox13->pack_start(*frame_rechnung, Gtk::PACK_SHRINK, 0);
   vbox13->pack_start(*frame_rechnungsdaten);
   vbox13->pack_start(*expander_ls);
   vbox13->pack_start(*hseparator6, Gtk::PACK_SHRINK, 0);
   auftrag_rechnung->set_title(_("Rechnungen"));
   auftrag_rechnung->set_default_size(800,600);
   auftrag_rechnung->set_modal(false);
   auftrag_rechnung->property_window_position().set_value(Gtk::WIN_POS_NONE);
   auftrag_rechnung->set_resizable(true);
   auftrag_rechnung->property_destroy_with_parent().set_value(false);
   
   Glib::RefPtr<Gdk::PixbufLoader> _auftrag_rechnung_loader=Gdk::PixbufLoader::create();
   _auftrag_rechnung_loader->write(stock_book_yellow_png_data, sizeof stock_book_yellow_png_data);
   _auftrag_rechnung_loader->close();
   auftrag_rechnung->set_icon(_auftrag_rechnung_loader->get_pixbuf());
   _auftrag_rechnung_loader=Glib::RefPtr<Gdk::PixbufLoader>();
   auftrag_rechnung->add(*vbox13);
   pixmapmenuitem1->show();
   menuitem1->show();
   image5->show();
   gutschrift->show();
   trennlinie11->show();
   image6->show();
   storno->show();
   trennlinie13->show();
   rngprovision->show();
   bearbeiten1->show();
   menubar3->show();
   button23->show();
   button24->show();
   button42->show();
   button26->show();
   button27->show();
   table17->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolitem4->show();
#endif //
   preis_ergaenzen->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   separatortoolitem7->show();
#endif //
   rngentry_del->show();
   toolbar7->show();
   label66->show();
   label87->show();
   optionmenu_zahlart->show();
   rngnr->show();
   label72->show();
   label60->show();
   label61->show();
   bezahlt->show();
   label_rechnung_ctl->show();
   rng_WWaehrung->show();
   hseparator5->show();
   lieferkunde->show();
   rngdatum->show();
   rabatt_typ->show();
   label98->show();
   zahlziel->show();
   rabatt_wert->show();
   table23->show();
   table10->show();
   label140->show();
   frame_rechnung->show();
   radiobutton_artikelpreis->show();
   label_artikelpreis->show();
   hbox24->show();
   radiobutton_auftragspreis->show();
   label_auftragspreis->show();
   hbox25->show();
   radiobutton_preiseingabe->show();
   spinbutton_preiseingabe->show();
   hbox26->show();
   button_pr->show();
   hbox23->show();
   label142->show();
   expander_preis->show();
   rtree_daten->show();
   scrolledwindow19->show();
   vbox17->show();
   label111->show();
   label_waehrung1->show();
   label_waehrung2->show();
   rgbetrag_warenwert->show();
   label112->show();
   rgbetrag_netto->show();
   label113->show();
   label114->show();
   label115->show();
   label_waehrung6->show();
   label_waehrung7->show();
   rgbetrag_rabatt->show();
   rgbetrag_mwst->show();
   rgbetrag_endsumme->show();
   label116->show();
   label117->show();
   label_waehrung3->show();
   label_waehrung4->show();
   label_waehrung5->show();
   rgbetrag_zusabs->show();
   rgbetrag_zwsumme->show();
   vseparator1->show();
   table28->show();
   label144->show();
   frame_betrag->show();
   hbox35->show();
   rng_notiz->show();
   scrolledwindow13->show();
   rng_notiz_save->show();
   toolbar15->show();
   hbox20->show();
   label143->show();
   expander_notiz->show();
   vpaned1->show();
   label141->show();
   frame_rechnungsdaten->show();
   lieferscheinnr->show();
   label63->show();
   label71->show();
   button_allopen->show();
   toolbar14->show();
   lief_uebernehmen->show();
   toolbar8->show();
   lieferscheindatum->show();
   table11->show();
   rtree_offen->show();
   scrolledwindow7->show();
   vbox_n_b_lieferscheine->show();
   label145->show();
   expander_ls->show();
   hseparator6->show();
   vbox13->show();
   auftrag_rechnung->show();
   pixmapmenuitem1->signal_activate().connect(SigC::slot(*this, &auftrag_rechnung_glade::on_rng_close), false);
   gutschrift->signal_activate().connect(SigC::slot(*this, &auftrag_rechnung_glade::on_gutschrift_activate), false);
   storno->signal_activate().connect(SigC::slot(*this, &auftrag_rechnung_glade::on_storno_activate), false);
   rngprovision->signal_activate().connect(SigC::slot(*this, &auftrag_rechnung_glade::on_provisionierung_activate), false);
   button23->signal_clicked().connect(SigC::slot(*this, &auftrag_rechnung_glade::on_rng_close), false);
   button24->signal_clicked().connect(SigC::slot(*this, &auftrag_rechnung_glade::on_rng_neu), false);
   button42->signal_clicked().connect(SigC::slot(*this, &auftrag_rechnung_glade::on_clear_all), false);
   button26->signal_clicked().connect(SigC::slot(*this, &auftrag_rechnung_glade::on_rng_preview), false);
   button27->signal_clicked().connect(SigC::slot(*this, &auftrag_rechnung_glade::on_rng_print), true);
   checkbutton_ean_drucken->signal_clicked().connect(SigC::slot(*this, &auftrag_rechnung_glade::on_checkbutton_ean_drucken_clicked), true);
   preis_ergaenzen->signal_clicked().connect(SigC::slot(*this, &auftrag_rechnung_glade::Preis_ergaenzen), false);
   rngentry_del->signal_clicked().connect(SigC::slot(*this, &auftrag_rechnung_glade::rngzeile_delete), false);
   optionmenu_zahlart->get_menu()->signal_deactivate().connect(SigC::slot(*this, &auftrag_rechnung_glade::optionmenu_zahlart_deactivate), false);
   rngnr->signal_activate().connect(SigC::slot(*this, &auftrag_rechnung_glade::on_rngnr_activate));
   rngnr->signal_search().connect(SigC::slot(*this, &auftrag_rechnung_glade::on_rngnr_search), false);
   bezahlt->signal_clicked().connect(SigC::slot(*this, &auftrag_rechnung_glade::on_bezahlt_toggled), true);
   rng_WWaehrung->signal_activate().connect(SigC::slot(*this, &auftrag_rechnung_glade::waehrung_geaendert));
   lieferkunde->signal_activate().connect(SigC::slot(*this, &auftrag_rechnung_glade::on_lieferkunde_activate));
   lieferkunde->signal_reset_signal().connect(SigC::slot(*this, &auftrag_rechnung_glade::on_lieferkunde_reset));
   rngdatum->signal_activate().connect(SigC::slot(*this, &auftrag_rechnung_glade::on_rngdate_activate));
   rabatt_typ->get_menu()->signal_deactivate().connect(SigC::slot(*this, &auftrag_rechnung_glade::rabatt_geaendert), false);
   zahlziel->signal_activate().connect(SigC::slot(*this, &auftrag_rechnung_glade::on_zahlziel_activate));
   rabatt_wert->signal_activate().connect(SigC::slot(*this, &auftrag_rechnung_glade::rabatt_geaendert), true);
   radiobutton_preiseingabe->signal_toggled().connect(SigC::slot(*this, &auftrag_rechnung_glade::on_radiobutton_preiseingabe_toggled), false);
   button_pr->signal_clicked().connect(SigC::slot(*this, &auftrag_rechnung_glade::Preis_setzen), false);
   rtree_daten->signal_leaf_selected().connect(SigC::slot(*this, &auftrag_rechnung_glade::on_rdaten_leaf_selected));
   rtree_daten->signal_leaf_unselected().connect(SigC::slot(*this, &auftrag_rechnung_glade::on_unselectrow_rtree));
   entsorgung->signal_toggled().connect(SigC::slot(*this, &auftrag_rechnung_glade::on_entsorgung_toggled), false);
   rng_notiz->get_buffer()->signal_changed().connect(SigC::slot(*this, &auftrag_rechnung_glade::on_notiz_changed), false);
   rng_notiz_save->signal_clicked().connect(SigC::slot(*this, &auftrag_rechnung_glade::on_notiz_save_clicked), false);
   button_allopen->signal_clicked().connect(SigC::slot(*this, &auftrag_rechnung_glade::on_button_allopen_clicked), false);
   button_lieferscheine_aufraumen->signal_clicked().connect(SigC::slot(*this, &auftrag_rechnung_glade::on_button_lieferscheine_aufraumen_clicked), false);
   lief_uebernehmen->signal_clicked().connect(SigC::slot(*this, &auftrag_rechnung_glade::lieferschein_uebernehmen), false);
   rtree_offen->signal_leaf_unselected().connect(SigC::slot(*this, &auftrag_rechnung_glade::on_unselectrow_rtree_offen));
   rtree_offen->signal_leaf_selected().connect(SigC::slot(*this, &auftrag_rechnung_glade::on_roffen_leaf_selected));
}

auftrag_rechnung_glade::~auftrag_rechnung_glade()
{  delete rngnr;
   delete rng_WWaehrung;
   delete lieferkunde;
   delete rngdatum;
   delete zahlziel;
   delete rtree_daten;
   delete lieferscheindatum;
   delete rtree_offen;
   delete gmm_data;
}
