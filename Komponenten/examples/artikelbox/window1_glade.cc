// generated 2002/4/18 17:59:21 CEST by thoma@Tiger.(none)
// using glademm V0.6.4b_cvs
//
// DO NOT EDIT THIS FILE ! It was created using
// glade-- /home/thoma/petig/cvs/common/Komponenten/examples/artikelbox/marc.glade
// for gtk 1.2.10 and gtkmm 1.2.8
//
// Please modify the corresponding derived classes in ././window1.cc

#include "config.h"
#include "window1.hh"
#include <gtk--/list.h>
#include <gtk--/menu.h>
#include <gtk--/menubar.h>
#include <gtk--/box.h>
#include <gtk--/button.h>
#include <gtk--/label.h>

window1_glade::window1_glade(
) : Gtk::Window(GTK_WINDOW_TOPLEVEL)
{  
   
   Gtk::Window *window1 = this;
   Gtk::MenuItem *Beenden = NULL;
   Gtk::MenuItem *trennlinie2 = NULL;
   Gtk::Menu *Datei_menu = manage(new class Gtk::Menu());
   Gtk::MenuItem *Datei = NULL;
   Gtk::MenuBar *menubar1 = manage(new class Gtk::MenuBar());
   WPreis = new class WPreis(1);
   custom_OI = new class Optionmenu_Instanz(Optionmenu_Instanz::allesAnzeigen);
   custom_OW = new class Optionmenu_Warengruppe(1);
   
   Gtk::HBox *hbox1 = manage(new class Gtk::HBox(false, 0));
   Gtk::Button *button1 = manage(new class Gtk::Button("Show contents"));
   custom2 = new class PreisBox();
   WAufStat = new class WAuftragStatus();
   WWaehrung = new class WWaehrung(WWaehrung::LANG);
   
   Gtk::Label *label1 = manage(new class Gtk::Label("Some label to demonstrate pack_end"));
   datum = new class Datewin();
   prozess = new class ProzessBox();
   artikelbox = new class ArtikelBox(cH_ExtBezSchema(1,0));
   artikelbox2 = new class ArtikelBox("marc","test");
   kundenbox = new class KundenBox();
   
   Gtk::Button *button2 = manage(new class Gtk::Button("reset"));
   vbox1 = manage(new class Gtk::VBox(false, 0));
   
   
   Datei_menu->items().push_back(Gtk::Menu_Helpers::MenuElem("Beenden"));
   Beenden = (Gtk::MenuItem *)Datei_menu->items().back();
   
   Datei_menu->items().push_back(Gtk::Menu_Helpers::SeparatorElem());
   trennlinie2 = (Gtk::MenuItem *)Datei_menu->items().back();
   
   menubar1->items().push_back(Gtk::Menu_Helpers::MenuElem("Datei", *Datei_menu));
   Datei = (Gtk::MenuItem *)menubar1->items().back();
   WPreis->set_usize(0, -1);
   hbox1->pack_start(*custom_OI);
   hbox1->pack_start(*custom_OW);
   button1->set_flags(GTK_CAN_FOCUS);
   WAufStat->set_usize(-1, 25);
   WWaehrung->set_usize(-1, 29);
   label1->set_alignment(0.5, 0.5);
   label1->set_padding(0, 0);
   datum->set_usize(-1, 20);
   prozess->set_usize(-1, 20);
   artikelbox->set_usize(-1, 50);
   artikelbox2->set_usize(-1, 50);
   kundenbox->set_usize(-1, 40);
   button2->set_flags(GTK_CAN_FOCUS);
   vbox1->pack_start(*menubar1, false, true, 0);
   vbox1->pack_end(*WPreis);
   vbox1->pack_end(*hbox1);
   vbox1->pack_end(*button1, false, false, 0);
   vbox1->pack_end(*custom2);
   vbox1->pack_end(*WAufStat);
   vbox1->pack_end(*WWaehrung);
   vbox1->pack_end(*label1, false, false, 0);
   vbox1->pack_start(*datum);
   vbox1->pack_start(*prozess);
   vbox1->pack_start(*artikelbox);
   vbox1->pack_start(*artikelbox2);
   vbox1->pack_start(*kundenbox);
   vbox1->pack_start(*button2, false, false, 0);
   window1->set_title("window1");
   window1->set_policy(true, true, false);
   window1->add(*vbox1);
   Beenden->show();
   trennlinie2->show();
   Datei_menu->show();
   Datei->show();
   menubar1->show();
   WPreis->show();
   custom_OI->show();
   custom_OW->show();
   hbox1->show();
   button1->show();
   custom2->show();
   WAufStat->show();
   WWaehrung->show();
   label1->show();
   datum->show();
   prozess->show();
   artikelbox->show();
   artikelbox2->show();
   kundenbox->show();
   button2->show();
   vbox1->show();
   window1->show();
   Beenden->activate.connect(SigC::slot(static_cast<class window1*>(this), &window1::on_Beenden_activate));
   WPreis->activate.connect(SigC::slot(static_cast<class window1*>(this), &window1::on_activate_wpreis));
   custom_OI->activate.connect(SigC::slot(static_cast<class window1*>(this), &window1::OI_activate));
   custom_OW->activate.connect(SigC::slot(static_cast<class window1*>(this), &window1::OW_activate));
   button1->clicked.connect(SigC::slot(static_cast<class window1*>(this), &window1::on_show_clicked));
   WWaehrung->activate.connect(SigC::slot(static_cast<class window1*>(this), &window1::on_activate_wwaehrung));
   datum->activate.connect(prozess->grab_focus.slot());
   prozess->activate.connect(artikelbox->grab_focus.slot());
   artikelbox->activate.connect(SigC::slot(static_cast<class window1*>(this), &window1::on_show_complete));
   kundenbox->activate.connect(SigC::slot(static_cast<class window1*>(this), &window1::andererKunde));
   button2->clicked.connect(SigC::slot(static_cast<class window1*>(this), &window1::on_reset));
}

window1_glade::~window1_glade()
{  delete WPreis;
   delete custom_OI;
   delete custom_OW;
   delete custom2;
   delete WAufStat;
   delete WWaehrung;
   delete datum;
   delete prozess;
   delete artikelbox;
   delete artikelbox2;
   delete kundenbox;
}
