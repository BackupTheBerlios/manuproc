/*  libKomponenten: ManuProC's Widget library
 *  Copyright (C) 2002 Adolf Petig GmbH & Co. KG
 *  written by Jacek Jakubowski, Christof Petig, Malte Thoma
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 */

#include "WWaehrung.hh"
#include <Aux/Transaction.h>
#include <Aux/SQLerror.h>   
#include <Gtk_OStream.h>
exec sql include sqlca; 
#include <SelectMatching.h>

WWaehrung::WWaehrung(darstellung kl)
{
  fuelleMenu(kl);
//   show(); // sollte das Objekt darüber tun !
}

cP_Waehrung WWaehrung::get_value() const
{  return static_cast<Waehrung*>(const_cast<Gtk::MenuItem*>(get_menu()->get_active())->get_data("user_data"));
}

static bool operator==(gpointer data,const cP_Waehrung &i)
{  return *(static_cast<Waehrung*>(data))==*i;
}

void WWaehrung::set_value(cP_Waehrung val)
{  Gtk::Menu_Helpers::SelectMatching(*this,val);
}

void WWaehrung::fuelleMenu(darstellung kl)
{
   exec sql begin declare section;
      int db_wid;
   exec sql end declare section;
   exec sql declare wae_ein cursor for
      select wid from waehrung order by wid; 
   Transaction tr;
   exec sql open wae_ein;
   SQLerror::test(__FILELINE__);

 {
   Gtk::OStream os(this);
   while(true)
     {
      exec sql fetch wae_ein into :db_wid;
      SQLerror::test(__FILELINE__,100);
      if (sqlca.sqlcode) break;
      cP_Waehrung cp=cP_Waehrung(Waehrung::ID(db_wid));
      if (kl==KURZ) os << cp->Kurzbezeichnung();
      else os << cp->Langbezeichnung();
      os.flush(cp.ref()); // no unref possible
     }
   exec sql close wae_ein;
   tr.close();   
  }
// erst NACH dem zerstören von 'os' existiert das Menu 
  get_menu()->signal_deactivate().connect(activate.slot());
}

