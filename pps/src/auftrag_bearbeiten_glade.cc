// generated 2006/6/23 16:28:38 CEST by christof@vesta.petig-baender.de
// using glademm V2.12.1
//
// DO NOT EDIT THIS FILE ! It was created using
// glade-- auftrag.glade
// for gtk 2.8.17 and gtkmm 2.8.5
//
// Please modify the corresponding derived classes in ./src/auftrag_bearbeiten.cc


#if defined __GNUC__ && __GNUC__ < 3
#error This program will crash if compiled with g++ 2.x
// see the dynamic_cast bug in the gtkmm FAQ
#endif //
#include "config.h"
/*
 * Standard gettext macros.
 */
#ifdef ENABLE_NLS
#  include <libintl.h>
#  undef _
#  define _(String) dgettext (GETTEXT_PACKAGE, String)
#  ifdef gettext_noop
#    define N_(String) gettext_noop (String)
#  else
#    define N_(String) (String)
#  endif
#endif
#include <gtkmmconfig.h>
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
#include <sigc++/compatibility.h>
#include <sigc++/bind.h>
#define GMM_GTKMM_22_24(a,b) b
#else //gtkmm 2.2
#define GMM_GTKMM_22_24(a,b) a
#endif //
#include "auftrag_bearbeiten_glade.hh"
#include <gdk/gdkkeysyms.h>
#include <gtkmm/accelgroup.h>
#include <gdkmm/pixbufloader.h>

static const unsigned char stock_book_red_png_data[] = 
{       	137,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,
	0,0,0,24,0,0,0,24,8,6,0,0,0,224,119,61,
	248,0,0,0,6,98,75,71,68,0,189,0,189,0,189,105,
	66,213,168,0,0,1,92,73,68,65,84,120,218,99,96,24,
	5,3,13,24,137,84,247,159,92,243,88,136,49,188,197,223,
	159,65,93,85,149,225,247,247,239,12,63,191,126,197,170,40,
	113,193,2,172,226,76,196,56,139,24,195,183,109,219,74,150,
	5,255,251,66,67,25,24,24,24,112,26,78,8,16,244,129,
	172,188,60,195,239,239,223,113,202,227,115,61,33,11,254,175,
	46,41,193,27,52,200,224,195,199,247,12,12,88,18,3,46,
	11,136,10,26,100,215,63,122,118,143,52,31,16,10,26,116,
	215,87,20,215,49,48,96,73,166,216,44,248,63,37,50,146,
	42,174,199,233,3,118,86,86,170,184,158,129,1,51,163,253,
	159,151,158,201,144,52,115,58,92,192,198,193,148,65,66,82,
	140,193,248,39,59,131,4,31,31,134,235,95,191,125,133,215,
	1,24,57,89,64,74,146,225,225,213,75,12,2,210,82,112,
	177,157,187,118,51,236,220,185,139,161,114,238,124,12,215,231,
	231,20,225,116,61,214,32,250,240,236,57,134,34,119,55,87,
	134,190,222,110,134,143,31,222,48,124,252,240,134,225,208,161,
	3,68,185,30,171,205,34,156,92,255,223,124,255,198,192,192,
	192,192,176,163,179,147,65,196,197,154,65,85,89,3,69,205,
	197,75,87,24,158,60,125,194,16,21,25,131,215,245,88,131,
	232,205,247,111,112,13,30,229,229,240,140,179,190,170,138,65,
	54,216,139,65,85,89,131,225,250,237,139,12,239,63,124,36,
	232,122,82,193,127,24,158,159,144,0,99,211,12,208,220,130,
	17,4,0,237,35,159,175,244,118,198,45,0,0,0,69,122,
	84,88,116,83,111,102,116,119,97,114,101,0,0,120,218,115,
	208,80,214,244,204,77,76,79,245,77,76,207,76,206,86,48,
	209,51,208,51,81,176,180,208,55,48,209,55,48,84,72,46,
	202,44,46,169,116,40,174,204,45,72,44,201,76,206,215,203,
	47,74,7,0,124,106,15,249,120,246,20,194,0,0,0,51,
	122,84,88,116,83,105,103,110,97,116,117,114,101,0,0,120,
	218,51,182,72,74,53,52,76,78,52,73,54,48,53,76,54,
	77,78,54,75,52,48,52,176,72,179,52,50,72,50,48,55,
	178,0,0,145,102,8,120,1,11,150,155,0,0,0,0,73,
	69,78,68,174,66,96,130,

};

#include <gtkmm/imagemenuitem.h>
#include <gtk/gtkimagemenuitem.h>
#include <gtkmm/menu.h>
#include <gtkmm/menuitem.h>
#include <gtkmm/image.h>

static const unsigned char stock_mail_forward_png_data[] = 
{       	137,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,
	0,0,0,24,0,0,0,24,8,6,0,0,0,224,119,61,
	248,0,0,0,6,98,75,71,68,0,189,0,189,0,189,105,
	66,213,168,0,0,2,152,73,68,65,84,120,218,213,85,95,
	72,83,113,24,61,138,164,190,73,190,72,249,80,234,83,110,
	55,18,197,32,2,33,131,130,68,214,124,200,57,150,139,244,
	161,146,22,132,9,190,249,16,82,8,10,249,230,155,67,65,
	163,23,83,124,216,18,11,156,138,182,41,102,168,193,108,206,
	53,167,229,166,110,250,244,59,61,212,46,221,253,189,26,4,
	29,248,248,113,239,253,126,231,124,223,249,126,247,94,224,127,
	71,198,9,247,81,45,79,166,74,50,69,180,183,183,193,225,
	248,128,80,112,27,19,19,182,68,130,50,178,210,84,134,187,
	38,19,26,205,38,148,148,20,35,47,47,15,36,65,10,80,
	16,95,61,30,124,94,94,86,223,182,185,177,145,163,163,111,
	121,116,20,225,225,97,152,145,200,62,195,225,61,30,28,4,
	185,191,191,203,189,208,119,134,130,59,12,238,6,184,251,99,
	139,181,181,53,180,219,198,57,56,208,79,36,233,66,97,81,
	83,243,125,56,28,14,24,12,13,240,122,189,160,16,202,96,
	52,136,161,161,97,228,231,159,6,33,80,125,173,42,105,213,
	10,139,236,118,59,26,12,245,88,88,92,68,107,235,51,104,
	53,26,24,141,245,40,40,40,144,137,163,235,216,216,56,90,
	90,30,224,162,86,3,82,36,21,136,157,62,35,225,61,153,
	104,114,242,61,124,62,31,102,102,102,33,73,90,24,141,6,
	144,2,230,123,205,40,45,189,0,80,192,98,105,1,41,48,
	55,231,194,173,26,93,28,103,156,128,203,53,143,226,226,34,
	121,144,36,225,116,58,65,18,54,251,59,44,45,125,194,205,
	27,215,161,215,235,48,252,250,13,54,60,27,168,170,186,10,
	73,171,193,153,194,146,56,206,216,83,132,149,149,21,20,157,
	63,167,176,163,223,58,128,151,47,158,67,146,74,127,221,255,
	61,19,189,174,22,164,64,119,207,43,172,173,126,81,101,17,
	0,48,20,220,150,5,156,78,23,86,87,215,80,167,215,41,
	68,255,92,5,137,158,158,94,20,22,158,197,99,75,171,130,
	55,225,139,70,66,182,200,106,29,132,94,175,131,160,72,28,
	130,240,251,3,144,36,41,74,158,252,20,69,49,53,229,64,
	101,101,57,156,174,5,84,84,148,197,87,45,4,190,249,3,
	152,158,158,197,195,71,150,116,142,36,4,119,182,55,105,54,
	155,24,216,242,112,203,191,78,191,207,205,143,243,14,246,246,
	118,199,126,58,82,34,43,217,131,174,174,110,84,148,151,97,
	115,211,7,183,123,29,183,245,119,78,84,105,82,1,183,219,
	141,204,204,12,92,42,187,172,134,148,42,114,18,110,74,107,
	65,52,119,164,175,35,97,126,170,207,117,70,76,69,76,17,
	0,0,155,181,19,177,34,199,105,137,79,155,234,144,155,147,
	141,220,156,83,202,53,91,121,125,165,238,137,204,173,230,135,
	243,207,144,202,34,142,244,117,208,102,237,140,155,67,214,49,
	4,210,158,162,106,99,91,186,188,191,238,46,14,63,1,14,
	140,172,110,148,170,1,16,0,0,0,69,122,84,88,116,83,
	111,102,116,119,97,114,101,0,0,120,218,115,208,80,214,244,
	204,77,76,79,245,77,76,207,76,206,86,48,209,51,208,51,
	81,176,180,208,55,48,209,55,48,84,72,46,202,44,46,169,
	116,40,174,204,45,72,44,201,76,206,215,203,47,74,7,0,
	124,106,15,249,120,246,20,194,0,0,0,51,122,84,88,116,
	83,105,103,110,97,116,117,114,101,0,0,120,218,75,73,75,
	51,72,51,54,179,176,76,75,182,72,77,53,48,78,76,74,
	73,76,74,49,75,50,73,74,76,180,72,73,50,0,0,167,
	187,10,59,221,158,194,186,0,0,0,0,73,69,78,68,174,
	66,96,130,

};
static const unsigned char stock_scores_png_data[] = 
{       	137,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,
	0,0,0,20,0,0,0,20,8,4,0,0,0,39,128,213,
	134,0,0,0,2,98,75,71,68,0,189,31,93,236,3,0,
	0,0,96,73,68,65,84,120,218,197,145,59,22,0,33,8,
	3,19,31,247,191,50,219,172,34,63,45,165,51,196,9,40,
	240,172,232,78,218,247,4,141,147,129,56,110,33,173,177,182,
	21,70,109,140,114,232,165,36,213,32,0,234,71,224,218,122,
	182,13,31,247,23,147,89,132,217,5,71,204,107,153,46,187,
	124,122,170,97,34,75,102,32,222,120,233,175,59,222,111,36,
	94,212,7,69,193,17,48,152,30,89,66,0,0,0,69,122,
	84,88,116,83,111,102,116,119,97,114,101,0,0,120,218,115,
	208,80,214,244,204,77,76,79,245,77,76,207,76,206,86,48,
	209,51,208,51,81,176,180,208,55,48,209,55,48,84,72,46,
	202,44,46,169,116,40,174,204,45,72,44,201,76,206,215,203,
	47,74,7,0,124,106,15,249,120,246,20,194,0,0,0,51,
	122,84,88,116,83,105,103,110,97,116,117,114,101,0,0,120,
	218,51,51,180,76,73,54,54,50,179,72,75,54,54,54,78,
	52,50,51,180,76,49,77,51,52,51,76,51,53,50,73,76,
	52,0,0,136,242,8,90,32,29,47,254,0,0,0,0,73,
	69,78,68,174,66,96,130,

};

#include <gtkmm/menubar.h>
#include <gtkmm/stockid.h>
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
#include <gtkmm/toolbutton.h>
#else //
#include <gtkmm/button.h>
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
#include <gtkmm/separatortoolitem.h>
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
#include <gtkmm/toolitem.h>
#endif //
#include <gtkmm/toolbar.h>
#include <gtkmm/label.h>
#include <gtkmm/adjustment.h>
#include <gtkmm/separator.h>
#include <gtkmm/table.h>
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
#include <gtkmm/expander.h>
#else //
#include <gtkmm/handlebox.h>
#endif //
#include <gtkmm/frame.h>
#include <gtkmm/scrolledwindow.h>
#include <gtkmm/box.h>
#ifndef ENABLE_NLS
#  define textdomain(String) (String)
#  define gettext(String) (String)
#  define dgettext(Domain,Message) (Message)
#  define dcgettext(Domain,Message,Type) (Message)
#  define bindtextdomain(Domain,Directory) (Domain)
#  define _(String) (String)
#  define N_(String) (String)
#endif


auftrag_bearbeiten_glade::auftrag_bearbeiten_glade(
) : Gtk::Window(Gtk::WINDOW_TOPLEVEL)
{  auftrag_bearbeiten = this;
   gmm_data = new GlademmData(get_accel_group());
   
   Gtk::ImageMenuItem *schlie__en1 = NULL;
   Gtk::Menu *datei1_menu = Gtk::manage(new class Gtk::Menu());
   Gtk::MenuItem *datei1 = NULL;
   Gtk::ImageMenuItem *neu1 = NULL;
   Gtk::Image *convertwidget11 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-stop"), Gtk::IconSize(4)));
   Gtk::ImageMenuItem *allesleeren1 = NULL;
   masseneingabe1 = NULL;
   kombinierte_artikel = NULL;
   Gtk::Image *convertwidget12 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-copy"), Gtk::IconSize(4)));
   Gtk::ImageMenuItem *kopieren1 = NULL;
   Gtk::MenuItem *trennlinie12 = NULL;
   Glib::RefPtr<Gdk::PixbufLoader> _convertwidget13_loader=Gdk::PixbufLoader::create();
   _convertwidget13_loader->write(stock_mail_forward_png_data, sizeof stock_mail_forward_png_data);
   _convertwidget13_loader->close();
   
   Gtk::Image *convertwidget13 = Gtk::manage(new class Gtk::Image(_convertwidget13_loader->get_pixbuf()));
   _convertwidget13_loader=Glib::RefPtr<Gdk::PixbufLoader>();
   
   Gtk::ImageMenuItem *provisionierung = NULL;
   Gtk::Menu *auftrag_menu = Gtk::manage(new class Gtk::Menu());
   Gtk::MenuItem *auftrag = NULL;
   Glib::RefPtr<Gdk::PixbufLoader> _convertwidget14_loader=Gdk::PixbufLoader::create();
   _convertwidget14_loader->write(stock_scores_png_data, sizeof stock_scores_png_data);
   _convertwidget14_loader->close();
   
   Gtk::Image *convertwidget14 = Gtk::manage(new class Gtk::Image(_convertwidget14_loader->get_pixbuf()));
   _convertwidget14_loader=Glib::RefPtr<Gdk::PixbufLoader>();
   
   Gtk::ImageMenuItem *splitten1 = NULL;
   Gtk::Menu *auftragseintr__ge1_menu = Gtk::manage(new class Gtk::Menu());
   Gtk::MenuItem *auftragseintr__ge1 = NULL;
   Gtk::MenuItem *ean_etiketten_zum_auftrag1 = NULL;
   Gtk::Menu *extras1_menu = Gtk::manage(new class Gtk::Menu());
   Gtk::MenuItem *extras1 = NULL;
   Gtk::MenuBar *menubar1 = Gtk::manage(new class Gtk::MenuBar());
   Gtk::Image *backtomain_button_img = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-quit"), Gtk::IconSize(3)));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   Gtk::ToolButton *backtomain_button = Gtk::manage(new class Gtk::ToolButton(*backtomain_button_img, _("Zurück")));
#endif //
   Gtk::Image *newauftrag_button_img = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-new"), Gtk::IconSize(3)));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   newauftrag_button = Gtk::manage(new class Gtk::ToolButton(*newauftrag_button_img, _("neuer Auftrag")));
#endif //
   
   Gtk::Image *button8_img = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-clear"), Gtk::IconSize(3)));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   Gtk::ToolButton *button8 = Gtk::manage(new class Gtk::ToolButton(*button8_img, _("alles leeren")));
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   Gtk::SeparatorToolItem *separatortoolitem5 = Gtk::manage(new class Gtk::SeparatorToolItem());
#endif //
   Gtk::Image *button_preview_img = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-find"), Gtk::IconSize(3)));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   Gtk::ToolButton *button_preview = Gtk::manage(new class Gtk::ToolButton(*button_preview_img, _("Anzeigen")));
#endif //
   Gtk::Image *button_drucken_img = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-print"), Gtk::IconSize(3)));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   button_drucken = Gtk::manage(new class Gtk::ToolButton(*button_drucken_img, _("Drucken")));
#endif //
   checkbutton_ean_drucken = Gtk::manage(new class Gtk::CheckButton(_("EAN")));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   
   Gtk::ToolItem *toolitem1 = Gtk::manage(new class Gtk::ToolItem());
#endif //
   Gtk::Image *rueckstand_img = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-print"), Gtk::IconSize(3)));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   Gtk::ToolButton *rueckstand = Gtk::manage(new class Gtk::ToolButton(*rueckstand_img, _("Rückstand")));
#endif //
   Gtk::Toolbar *toolbar2 = Gtk::manage(new class Gtk::Toolbar());
   Gtk::Toolbar *toolbar4 = Gtk::manage(new class Gtk::Toolbar());
   Gtk::Label *label32 = Gtk::manage(new class Gtk::Label(_("Rabatt %")));
   Gtk::Label *label34 = Gtk::manage(new class Gtk::Label(_("Zahlungsart")));
   Gtk::Label *label37 = Gtk::manage(new class Gtk::Label(_("Waehrung")));
   auftrag_ok = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-ok")));
   auftrag_abbruch = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-cancel")));
   bea_WWaehrung = new class WWaehrung(WWaehrung::KURZ);
   zahlziel_datewin = new class datewin();
   
   Gtk::Label *label99 = Gtk::manage(new class Gtk::Label(_("Valuta")));
   Gtk::Adjustment *aufrabatt_spinbutton_adj = Gtk::manage(new class Gtk::Adjustment(0, -100, 100, 1, 10, 10));
   aufrabatt_spinbutton = Gtk::manage(new class Gtk::SpinButton(*aufrabatt_spinbutton_adj, 1, 2));
   
   Gtk::Label *label109 = Gtk::manage(new class Gtk::Label(_("Auftragsdatum")));
   Gtk::Label *label90 = Gtk::manage(new class Gtk::Label(_("Auftragswert")));
   Gtk::Label *label30 = Gtk::manage(new class Gtk::Label(_("Art des Auftrages")));
   Gtk::Label *label26 = Gtk::manage(new class Gtk::Label(_("Auftragsnummer")));
   Gtk::Label *label27 = Gtk::manage(new class Gtk::Label(_("Kunden Auf. Nr.")));
   Gtk::Label *label28 = Gtk::manage(new class Gtk::Label(_("Auftragsstatus")));
   Gtk::Label *label31 = Gtk::manage(new class Gtk::Label(_("Bemerkung")));
   Gtk::HSeparator *hseparator1 = Gtk::manage(new class Gtk::HSeparator());
   kundenbox = new class KundenBox2();
   aufbemerkung_entry = Gtk::manage(new class Gtk::Entry());
   youraufnr_scombo = new class SearchComboContent<int>();
   aufnr_scombo = new class SearchComboContent<int>();
   WAufStat = new class WAuftragStatus();
   aufdatum_datewin = new class datewin();
   auftrag_label = new class Optionmenu_AuftragLabel();
   auftragswert = Gtk::manage(new class Gtk::Entry());
   zahlart = new class ZahlungsArtBox();
   
   Gtk::Table *table5 = Gtk::manage(new class Gtk::Table(2, 2, false));
   Gtk::Label *label124 = Gtk::manage(new class Gtk::Label(_("Auftrag")));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   Gtk::Expander *frame2 = Gtk::manage(new class Gtk::Expander());
#else //
   Gtk::HandleBox *frame2 = Gtk::manage(new class Gtk::HandleBox());
#endif //
   Gtk::Label *label25 = Gtk::manage(new class Gtk::Label(_("Eintragstatus")));
   Gtk::Adjustment *stkmtr_spinbutton_adj = Gtk::manage(new class Gtk::Adjustment(1, 0, 1000000, 1, 10, 10));
   stkmtr_spinbutton = Gtk::manage(new class Gtk::SpinButton(*stkmtr_spinbutton_adj, 1, 0));
   WAufEntryStat = new class WAuftragStatus();
   
   Gtk::Adjustment *rabattentry_spinbutton_adj = Gtk::manage(new class Gtk::Adjustment(0, -100, 100, 1, 10, 10));
   rabattentry_spinbutton = Gtk::manage(new class Gtk::SpinButton(*rabattentry_spinbutton_adj, 1, 2));
   
   Gtk::Label *label67 = Gtk::manage(new class Gtk::Label(_("Menge")));
   Gtk::Label *label29 = Gtk::manage(new class Gtk::Label(_("Rabatt")));
   lager_bestand = Gtk::manage(new class Gtk::Button(_("L:")));
   
   Gtk::Button *button31 = Gtk::manage(new class Gtk::Button(_("B:")));
   lagerbest_label = Gtk::manage(new class Gtk::Label(_("0")));
   
   Gtk::Button *button33 = Gtk::manage(new class Gtk::Button(_("V:")));
   bestellt_label = Gtk::manage(new class Gtk::Label(_("0")));
   verfuegbar_label = Gtk::manage(new class Gtk::Label(_("0")));
   lieferant_offen = Gtk::manage(new class Gtk::Label(_("(0)")));
   offen_bei_lieferant = Gtk::manage(new class Gtk::Button(_("L.B.")));
   table_vorraetige_menge = Gtk::manage(new class Gtk::Table(2, 2, false));
   
   Gtk::Label *label73 = Gtk::manage(new class Gtk::Label(_("%")));
   mengeeinheit = Gtk::manage(new class Gtk::Label(_("kg")));
   aufentry_abbruch = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-cancel")));
   aufentry_ok = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-ok")));
   bestellplan = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-help")));
   
   Gtk::Label *label126 = Gtk::manage(new class Gtk::Label(_("Bestellung")));
   Gtk::Frame *frame57 = Gtk::manage(new class Gtk::Frame());
   Gtk::HSeparator *hseparator2 = Gtk::manage(new class Gtk::HSeparator());
   WPreis = new class WPreis(false);
   liefdatum_datewin = new class datewin();
   artikelbox = new class ArtikelBox("artbox_pps", "auftragserfassung");
   
   Gtk::Label *label91 = Gtk::manage(new class Gtk::Label(_("Preisliste")));
   preisautomatik = Gtk::manage(new class Gtk::CheckButton(_("Preisautomatik")));
   preislisten = new class PreisBox();
   table_preislisten = Gtk::manage(new class Gtk::Table(2, 2, false));
   table_auftragseintraege = Gtk::manage(new class Gtk::Table(2, 2, false));
   
   Gtk::Label *label125 = Gtk::manage(new class Gtk::Label(_("Auftragseinträge")));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   Gtk::Expander *frame3 = Gtk::manage(new class Gtk::Expander());
#else //
   Gtk::HandleBox *frame3 = Gtk::manage(new class Gtk::HandleBox());
#endif //
   auftrag_clist = new class SimpleTree(11);
   scrolledwindow_auftraege = Gtk::manage(new class Gtk::ScrolledWindow());
   notiz = Gtk::manage(new class Gtk::TextView());
   
   Gtk::ScrolledWindow *scrolledwindow12 = Gtk::manage(new class Gtk::ScrolledWindow());
   Gtk::Image *notiz_save_img = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-save"), Gtk::IconSize(3)));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   notiz_save = Gtk::manage(new class Gtk::ToolButton(*notiz_save_img, _("speichern")));
#endif //
   
   Gtk::Toolbar *toolbar13 = Gtk::manage(new class Gtk::Toolbar());
   Gtk::HBox *hbox15 = Gtk::manage(new class Gtk::HBox(false, 0));
   Gtk::Label *label127 = Gtk::manage(new class Gtk::Label(_("Notiz")));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   frame_notiz = Gtk::manage(new class Gtk::Expander());
#else //
   frame_notiz = Gtk::manage(new class Gtk::HandleBox());
#endif //
   notiz_paned = Gtk::manage(new class Gtk::VPaned());
   aufeintrag_box = Gtk::manage(new class Gtk::VBox(false, 0));
   
   Gtk::VBox *vbox4 = Gtk::manage(new class Gtk::VBox(false, 0));
   
   datei1_menu->items().push_back(Gtk::Menu_Helpers::StockMenuElem(Gtk::StockID("gtk-close")));
   schlie__en1 = (Gtk::ImageMenuItem *)&datei1_menu->items().back();
   
   auftrag_menu->items().push_back(Gtk::Menu_Helpers::StockMenuElem(Gtk::StockID("gtk-new")));
   neu1 = (Gtk::ImageMenuItem *)&auftrag_menu->items().back();
   
   auftrag_menu->items().push_back(Gtk::Menu_Helpers::ImageMenuElem(_("alles _leeren"), *convertwidget11));
   allesleeren1 = (Gtk::ImageMenuItem *)&auftrag_menu->items().back();
   
   auftrag_menu->items().push_back(Gtk::Menu_Helpers::CheckMenuElem(_("Masseneingabe"), Gtk::GMM_GTKMM_22_24(Menu_Helpers::,)AccelKey(GDK_F1, Gdk::ModifierType(0))));
   masseneingabe1 = (Gtk::CheckMenuItem *)&auftrag_menu->items().back();
   
   auftrag_menu->items().push_back(Gtk::Menu_Helpers::CheckMenuElem(_("Kombinierte Artikel"), Gtk::GMM_GTKMM_22_24(Menu_Helpers::,)AccelKey(GDK_F2, Gdk::ModifierType(0))));
   kombinierte_artikel = (Gtk::CheckMenuItem *)&auftrag_menu->items().back();
   
   auftrag_menu->items().push_back(Gtk::Menu_Helpers::ImageMenuElem(_("Kopieren"), *convertwidget12));
   kopieren1 = (Gtk::ImageMenuItem *)&auftrag_menu->items().back();
   
   auftrag_menu->items().push_back(Gtk::Menu_Helpers::SeparatorElem());
   trennlinie12 = (Gtk::MenuItem *)&auftrag_menu->items().back();
   
   auftrag_menu->items().push_back(Gtk::Menu_Helpers::ImageMenuElem(_("Provisionierung"), *convertwidget13));
   provisionierung = (Gtk::ImageMenuItem *)&auftrag_menu->items().back();
   
   auftragseintr__ge1_menu->items().push_back(Gtk::Menu_Helpers::ImageMenuElem(_("_splitten"), *convertwidget14));
   splitten1 = (Gtk::ImageMenuItem *)&auftragseintr__ge1_menu->items().back();
   
   extras1_menu->items().push_back(Gtk::Menu_Helpers::MenuElem(_("EAN Etiketten zum Auftrag")));
   ean_etiketten_zum_auftrag1 = (Gtk::MenuItem *)&extras1_menu->items().back();
   
   menubar1->items().push_back(Gtk::Menu_Helpers::MenuElem(_("_File"), *datei1_menu));
   datei1 = (Gtk::MenuItem *)&menubar1->items().back();
   
   menubar1->items().push_back(Gtk::Menu_Helpers::MenuElem(_("Auftrag"), *auftrag_menu));
   auftrag = (Gtk::MenuItem *)&menubar1->items().back();
   
   menubar1->items().push_back(Gtk::Menu_Helpers::MenuElem(_("Auftragseinträge"), *auftragseintr__ge1_menu));
   auftragseintr__ge1 = (Gtk::MenuItem *)&menubar1->items().back();
   
   menubar1->items().push_back(Gtk::Menu_Helpers::MenuElem(_("Extras"), *extras1_menu));
   extras1 = (Gtk::MenuItem *)&menubar1->items().back();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar2->append(*backtomain_button);
#else //
   
   
   toolbar2->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem(_("Zurück"), *backtomain_button_img, Gtk::Toolbar_Helpers::Callback0()));
   Gtk::Button *backtomain_button = static_cast<Gtk::Button *>(toolbar2->tools().back().get_widget());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar2->append(*newauftrag_button);
#else //
   
   
   toolbar2->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem(_("neuer Auftrag"), *newauftrag_button_img, Gtk::Toolbar_Helpers::Callback0()));
   newauftrag_button = static_cast<Gtk::Button *>(toolbar2->tools().back().get_widget());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar2->append(*button8);
#else //
   
   
   toolbar2->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem(_("alles leeren"), *button8_img, Gtk::Toolbar_Helpers::Callback0()));
   Gtk::Button *button8 = static_cast<Gtk::Button *>(toolbar2->tools().back().get_widget());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar2->append(*separatortoolitem5);
#else //
   toolbar2->tools().push_back(Gtk::Toolbar_Helpers::Space());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar2->append(*button_preview);
#else //
   
   
   toolbar2->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem(_("Anzeigen"), *button_preview_img, Gtk::Toolbar_Helpers::Callback0()));
   Gtk::Button *button_preview = static_cast<Gtk::Button *>(toolbar2->tools().back().get_widget());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar2->append(*button_drucken);
#else //
   
   
   toolbar2->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem(_("Drucken"), *button_drucken_img, Gtk::Toolbar_Helpers::Callback0()));
   button_drucken = static_cast<Gtk::Button *>(toolbar2->tools().back().get_widget());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar2->append(*toolitem1);
#else //
   toolbar2->tools().push_back(Gtk::Toolbar_Helpers::Element(*checkbutton_ean_drucken));
   
   Gtk::Widget *toolitem1 = toolbar2->tools().back().get_widget();
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar2->append(*rueckstand);
#else //
   
   
   toolbar2->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem(_("Rückstand"), *rueckstand_img, Gtk::Toolbar_Helpers::Callback0()));
   Gtk::Button *rueckstand = static_cast<Gtk::Button *>(toolbar2->tools().back().get_widget());
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar13->append(*notiz_save);
#else //
   
   
   toolbar13->tools().push_back(Gtk::Toolbar_Helpers::ButtonElem(_("speichern"), *notiz_save_img, Gtk::Toolbar_Helpers::Callback0()));
   notiz_save = static_cast<Gtk::Button *>(toolbar13->tools().back().get_widget());
#endif //
   convertwidget11->set_alignment(0.5,0.5);
   convertwidget11->set_padding(0,0);
   masseneingabe1->set_active(false);
   kombinierte_artikel->set_active(false);
   convertwidget12->set_alignment(0.5,0.5);
   convertwidget12->set_padding(0,0);
   convertwidget13->set_alignment(0.5,0.5);
   convertwidget13->set_padding(0,0);
   convertwidget14->set_alignment(0.5,0.5);
   convertwidget14->set_padding(0,0);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   backtomain_button->set_visible_horizontal(true);
   backtomain_button->set_visible_vertical(true);
   backtomain_button->set_is_important(false);
   backtomain_button->set_homogeneous(true);
   backtomain_button->set_expand(false);
#endif //
   backtomain_button_img->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   newauftrag_button->set_visible_horizontal(true);
   newauftrag_button->set_visible_vertical(true);
   newauftrag_button->set_is_important(false);
   newauftrag_button->set_homogeneous(true);
   newauftrag_button->set_expand(false);
#endif //
   newauftrag_button_img->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   button8->set_visible_horizontal(true);
   button8->set_visible_vertical(true);
   button8->set_is_important(false);
   button8->set_homogeneous(true);
   button8->set_expand(false);
#endif //
   button8_img->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   separatortoolitem5->set_visible_horizontal(true);
   separatortoolitem5->set_visible_vertical(true);
   separatortoolitem5->set_homogeneous(false);
   separatortoolitem5->set_expand(false);
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   button_preview->set_visible_horizontal(true);
   button_preview->set_visible_vertical(true);
   button_preview->set_is_important(false);
   button_preview->set_homogeneous(true);
   button_preview->set_expand(false);
#endif //
   button_preview_img->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   button_drucken->set_visible_horizontal(true);
   button_drucken->set_visible_vertical(true);
   button_drucken->set_is_important(false);
   button_drucken->set_homogeneous(true);
   button_drucken->set_expand(false);
#endif //
   button_drucken_img->show();
   checkbutton_ean_drucken->set_flags(Gtk::CAN_FOCUS);
   checkbutton_ean_drucken->set_relief(Gtk::RELIEF_NORMAL);
   checkbutton_ean_drucken->set_mode(true);
   checkbutton_ean_drucken->set_active(false);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolitem1->set_visible_horizontal(true);
   toolitem1->set_visible_vertical(true);
   toolitem1->set_is_important(false);
   toolitem1->set_homogeneous(false);
   toolitem1->set_expand(false);
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolitem1->add(*checkbutton_ean_drucken);
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   rueckstand->set_visible_horizontal(true);
   rueckstand->set_visible_vertical(true);
   rueckstand->set_is_important(false);
   rueckstand->set_homogeneous(true);
   rueckstand->set_expand(false);
#endif //
   rueckstand_img->show();
   toolbar2->set_tooltips(true);
   toolbar2->set_toolbar_style(Gtk::TOOLBAR_BOTH);
   toolbar2->set_orientation(Gtk::ORIENTATION_HORIZONTAL);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar2->set_show_arrow(true);
#endif //
   toolbar4->set_tooltips(true);
   toolbar4->set_toolbar_style(Gtk::TOOLBAR_ICONS);
   toolbar4->set_orientation(Gtk::ORIENTATION_HORIZONTAL);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar4->set_show_arrow(true);
#endif //
   label32->set_alignment(0,0.5);
   label32->set_padding(0,0);
   label32->set_justify(Gtk::JUSTIFY_LEFT);
   label32->set_line_wrap(false);
   label32->set_use_markup(false);
   label32->set_selectable(false);
   label34->set_alignment(0,0.5);
   label34->set_padding(0,0);
   label34->set_justify(Gtk::JUSTIFY_LEFT);
   label34->set_line_wrap(false);
   label34->set_use_markup(false);
   label34->set_selectable(false);
   label37->set_alignment(0,0.5);
   label37->set_padding(0,0);
   label37->set_justify(Gtk::JUSTIFY_LEFT);
   label37->set_line_wrap(false);
   label37->set_use_markup(false);
   label37->set_selectable(false);
   auftrag_ok->set_sensitive(false);
   auftrag_ok->set_flags(Gtk::CAN_FOCUS);
   auftrag_ok->set_relief(Gtk::RELIEF_NORMAL);
   auftrag_abbruch->set_sensitive(false);
   auftrag_abbruch->set_flags(Gtk::CAN_FOCUS);
   auftrag_abbruch->set_relief(Gtk::RELIEF_NORMAL);
   label99->set_alignment(0,0.5);
   label99->set_padding(0,0);
   label99->set_justify(Gtk::JUSTIFY_CENTER);
   label99->set_line_wrap(false);
   label99->set_use_markup(false);
   label99->set_selectable(false);
   aufrabatt_spinbutton->set_sensitive(false);
   aufrabatt_spinbutton->set_flags(Gtk::CAN_FOCUS);
   aufrabatt_spinbutton->set_update_policy(Gtk::UPDATE_ALWAYS);
   aufrabatt_spinbutton->set_numeric(true);
   aufrabatt_spinbutton->set_digits(2);
   aufrabatt_spinbutton->set_wrap(false);
   label109->set_alignment(0,0.5);
   label109->set_padding(0,0);
   label109->set_justify(Gtk::JUSTIFY_CENTER);
   label109->set_line_wrap(false);
   label109->set_use_markup(false);
   label109->set_selectable(false);
   label90->set_alignment(0,0.5);
   label90->set_padding(0,0);
   label90->set_justify(Gtk::JUSTIFY_CENTER);
   label90->set_line_wrap(false);
   label90->set_use_markup(false);
   label90->set_selectable(false);
   label30->set_alignment(0,0.5);
   label30->set_padding(0,0);
   label30->set_justify(Gtk::JUSTIFY_LEFT);
   label30->set_line_wrap(false);
   label30->set_use_markup(false);
   label30->set_selectable(false);
   label26->set_alignment(0,0.5);
   label26->set_padding(0,0);
   label26->set_justify(Gtk::JUSTIFY_LEFT);
   label26->set_line_wrap(false);
   label26->set_use_markup(false);
   label26->set_selectable(false);
   label27->set_alignment(0,0.5);
   label27->set_padding(0,0);
   label27->set_justify(Gtk::JUSTIFY_LEFT);
   label27->set_line_wrap(false);
   label27->set_use_markup(false);
   label27->set_selectable(false);
   label28->set_alignment(0,0.5);
   label28->set_padding(0,0);
   label28->set_justify(Gtk::JUSTIFY_LEFT);
   label28->set_line_wrap(false);
   label28->set_use_markup(false);
   label28->set_selectable(false);
   label31->set_alignment(0,0.5);
   label31->set_padding(0,0);
   label31->set_justify(Gtk::JUSTIFY_LEFT);
   label31->set_line_wrap(false);
   label31->set_use_markup(false);
   label31->set_selectable(false);
   aufbemerkung_entry->set_flags(Gtk::CAN_FOCUS);
   _tooltips.set_tip(*aufbemerkung_entry, _("Eingabe mit 'Enter' abschließen."), "");
   aufbemerkung_entry->set_visibility(true);
   aufbemerkung_entry->set_editable(true);
   aufbemerkung_entry->set_max_length(0);
   aufbemerkung_entry->set_text("");
   aufbemerkung_entry->set_has_frame(true);
   aufbemerkung_entry->set_activates_default(false);
   auftragswert->set_sensitive(false);
   auftragswert->set_flags(Gtk::CAN_FOCUS);
   auftragswert->set_visibility(true);
   auftragswert->set_editable(false);
   auftragswert->set_max_length(0);
   auftragswert->set_text("");
   auftragswert->set_has_frame(true);
   auftragswert->set_activates_default(false);
   table5->set_border_width(1);
   table5->set_row_spacings(0);
   table5->set_col_spacings(0);
   table5->attach(*toolbar4, 3, 4, 1, 3, Gtk::AttachOptions(), Gtk::AttachOptions(), 0, 0);
   table5->attach(*label32, 4, 5, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table5->attach(*label34, 4, 5, 2, 3, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table5->attach(*label37, 4, 5, 3, 4, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table5->attach(*auftrag_ok, 4, 5, 4, 5, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table5->attach(*auftrag_abbruch, 5, 6, 4, 5, Gtk::AttachOptions(), Gtk::AttachOptions(), 0, 0);
   table5->attach(*bea_WWaehrung, 5, 6, 3, 4, Gtk::FILL, Gtk::FILL, 0, 0);
   table5->attach(*zahlziel_datewin, 5, 6, 1, 2, Gtk::FILL, Gtk::FILL, 0, 0);
   table5->attach(*label99, 4, 5, 1, 2, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table5->attach(*aufrabatt_spinbutton, 5, 6, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table5->attach(*label109, 2, 3, 1, 2, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table5->attach(*label90, 2, 3, 2, 3, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table5->attach(*label30, 2, 3, 3, 4, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table5->attach(*label26, 0, 1, 1, 2, Gtk::AttachOptions(), Gtk::AttachOptions(), 0, 0);
   table5->attach(*label27, 0, 1, 2, 3, Gtk::AttachOptions(), Gtk::AttachOptions(), 0, 0);
   table5->attach(*label28, 0, 1, 3, 4, Gtk::AttachOptions(), Gtk::AttachOptions(), 0, 0);
   table5->attach(*label31, 0, 1, 4, 5, Gtk::AttachOptions(), Gtk::AttachOptions(), 0, 0);
   table5->attach(*hseparator1, 0, 6, 5, 6, Gtk::FILL, Gtk::FILL, 0, 1);
   table5->attach(*kundenbox, 0, 4, 0, 1, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, Gtk::FILL, 0, 0);
   table5->attach(*aufbemerkung_entry, 1, 4, 4, 5, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table5->attach(*youraufnr_scombo, 1, 2, 2, 3, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, Gtk::FILL, 0, 0);
   table5->attach(*aufnr_scombo, 1, 2, 1, 2, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, Gtk::FILL, 0, 0);
   table5->attach(*WAufStat, 1, 2, 3, 4, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, Gtk::FILL, 0, 0);
   table5->attach(*aufdatum_datewin, 3, 4, 1, 2, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, Gtk::FILL, 0, 0);
   table5->attach(*auftrag_label, 3, 4, 3, 4, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, Gtk::FILL, 0, 0);
   table5->attach(*auftragswert, 3, 4, 2, 3, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table5->attach(*zahlart, 5, 6, 2, 3, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, Gtk::FILL, 0, 0);
   label124->set_alignment(0.5,0.5);
   label124->set_padding(0,0);
   label124->set_justify(Gtk::JUSTIFY_LEFT);
   label124->set_line_wrap(false);
   label124->set_use_markup(false);
   label124->set_selectable(false);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   frame2->set_expanded(true);
   frame2->set_spacing(0);
#endif //
   frame2->add(*table5);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   frame2->set_label_widget(*label124);
#endif //
   label25->set_alignment(0,0.5);
   label25->set_padding(0,0);
   label25->set_justify(Gtk::JUSTIFY_LEFT);
   label25->set_line_wrap(false);
   label25->set_use_markup(false);
   label25->set_selectable(false);
   stkmtr_spinbutton->set_flags(Gtk::CAN_FOCUS);
   stkmtr_spinbutton->set_update_policy(Gtk::UPDATE_ALWAYS);
   stkmtr_spinbutton->set_numeric(true);
   stkmtr_spinbutton->set_digits(0);
   stkmtr_spinbutton->set_wrap(false);
   rabattentry_spinbutton->set_flags(Gtk::CAN_FOCUS);
   rabattentry_spinbutton->set_update_policy(Gtk::UPDATE_ALWAYS);
   rabattentry_spinbutton->set_numeric(true);
   rabattentry_spinbutton->set_digits(2);
   rabattentry_spinbutton->set_wrap(false);
   label67->set_alignment(0.9,0);
   label67->set_padding(0,0);
   label67->set_justify(Gtk::JUSTIFY_RIGHT);
   label67->set_line_wrap(false);
   label67->set_use_markup(false);
   label67->set_selectable(false);
   label29->set_alignment(0.9,0.5);
   label29->set_padding(0,0);
   label29->set_justify(Gtk::JUSTIFY_RIGHT);
   label29->set_line_wrap(false);
   label29->set_use_markup(false);
   label29->set_selectable(false);
   lager_bestand->set_flags(Gtk::CAN_FOCUS);
   _tooltips.set_tip(*lager_bestand, _("Lagerbestand"), "");
   lager_bestand->set_relief(Gtk::RELIEF_NORMAL);
   button31->set_flags(Gtk::CAN_FOCUS);
   _tooltips.set_tip(*button31, _("Bestellt"), "");
   button31->set_relief(Gtk::RELIEF_NORMAL);
   lagerbest_label->set_sensitive(false);
   lagerbest_label->set_alignment(0.9,0);
   lagerbest_label->set_padding(0,0);
   lagerbest_label->set_justify(Gtk::JUSTIFY_CENTER);
   lagerbest_label->set_line_wrap(false);
   lagerbest_label->set_use_markup(false);
   lagerbest_label->set_selectable(false);
   button33->set_flags(Gtk::CAN_FOCUS);
   _tooltips.set_tip(*button33, _("Verfügbar"), "");
   button33->set_relief(Gtk::RELIEF_NORMAL);
   bestellt_label->set_sensitive(false);
   bestellt_label->set_alignment(0.9,0);
   bestellt_label->set_padding(0,0);
   bestellt_label->set_justify(Gtk::JUSTIFY_RIGHT);
   bestellt_label->set_line_wrap(false);
   bestellt_label->set_use_markup(false);
   bestellt_label->set_selectable(false);
   verfuegbar_label->set_alignment(0.9,0);
   verfuegbar_label->set_padding(0,0);
   verfuegbar_label->set_justify(Gtk::JUSTIFY_CENTER);
   verfuegbar_label->set_line_wrap(false);
   verfuegbar_label->set_use_markup(false);
   verfuegbar_label->set_selectable(false);
   lieferant_offen->set_alignment(0.9,0.5);
   lieferant_offen->set_padding(0,0);
   lieferant_offen->set_justify(Gtk::JUSTIFY_CENTER);
   lieferant_offen->set_line_wrap(false);
   lieferant_offen->set_use_markup(false);
   lieferant_offen->set_selectable(false);
   offen_bei_lieferant->set_flags(Gtk::CAN_FOCUS);
   _tooltips.set_tip(*offen_bei_lieferant, _("Bestellt beim Lieferanten"), "");
   offen_bei_lieferant->set_relief(Gtk::RELIEF_NORMAL);
   table_vorraetige_menge->set_row_spacings(0);
   table_vorraetige_menge->set_col_spacings(0);
   table_vorraetige_menge->attach(*lager_bestand, 0, 1, 1, 2, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table_vorraetige_menge->attach(*button31, 0, 1, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table_vorraetige_menge->attach(*lagerbest_label, 1, 2, 1, 2, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table_vorraetige_menge->attach(*button33, 0, 1, 2, 3, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table_vorraetige_menge->attach(*bestellt_label, 1, 2, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table_vorraetige_menge->attach(*verfuegbar_label, 1, 2, 2, 3, Gtk::EXPAND|Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table_vorraetige_menge->attach(*lieferant_offen, 2, 3, 2, 3, Gtk::EXPAND|Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table_vorraetige_menge->attach(*offen_bei_lieferant, 2, 3, 1, 2, Gtk::SHRINK|Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   label73->set_alignment(0,0.5);
   label73->set_padding(0,0);
   label73->set_justify(Gtk::JUSTIFY_LEFT);
   label73->set_line_wrap(false);
   label73->set_use_markup(false);
   label73->set_selectable(false);
   mengeeinheit->set_alignment(0,0.5);
   mengeeinheit->set_padding(0,0);
   mengeeinheit->set_justify(Gtk::JUSTIFY_LEFT);
   mengeeinheit->set_line_wrap(false);
   mengeeinheit->set_use_markup(false);
   mengeeinheit->set_selectable(false);
   aufentry_abbruch->set_flags(Gtk::CAN_FOCUS);
   aufentry_abbruch->set_relief(Gtk::RELIEF_NORMAL);
   aufentry_ok->set_flags(Gtk::CAN_FOCUS);
   aufentry_ok->set_relief(Gtk::RELIEF_NORMAL);
   bestellplan->set_flags(Gtk::CAN_FOCUS);
   bestellplan->set_relief(Gtk::RELIEF_NORMAL);
   label126->set_alignment(0.5,0.5);
   label126->set_padding(0,0);
   label126->set_justify(Gtk::JUSTIFY_LEFT);
   label126->set_line_wrap(false);
   label126->set_use_markup(false);
   label126->set_selectable(false);
   frame57->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame57->set_label_align(0,0.5);
   frame57->add(*bestellplan);
   frame57->set_label_widget(*label126);
   label91->set_alignment(0.5,0.5);
   label91->set_padding(0,0);
   label91->set_justify(Gtk::JUSTIFY_CENTER);
   label91->set_line_wrap(false);
   label91->set_use_markup(false);
   label91->set_selectable(false);
   preisautomatik->set_flags(Gtk::CAN_FOCUS);
   preisautomatik->set_relief(Gtk::RELIEF_NORMAL);
   preisautomatik->set_mode(true);
   preisautomatik->set_active(true);
   preislisten->set_sensitive(false);
   table_preislisten->set_row_spacings(0);
   table_preislisten->set_col_spacings(0);
   table_preislisten->attach(*label91, 0, 1, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table_preislisten->attach(*preisautomatik, 2, 3, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table_preislisten->attach(*preislisten, 1, 2, 0, 1, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, 0, 0);
   table_auftragseintraege->set_row_spacings(0);
   table_auftragseintraege->set_col_spacings(0);
   table_auftragseintraege->attach(*label25, 8, 9, 2, 3, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table_auftragseintraege->attach(*stkmtr_spinbutton, 2, 3, 3, 4, Gtk::AttachOptions(), Gtk::AttachOptions(), 0, 0);
   table_auftragseintraege->attach(*WAufEntryStat, 8, 9, 3, 4, Gtk::SHRINK|Gtk::FILL, Gtk::SHRINK, 0, 0);
   table_auftragseintraege->attach(*rabattentry_spinbutton, 2, 3, 2, 3, Gtk::SHRINK, Gtk::SHRINK, 0, 0);
   table_auftragseintraege->attach(*label67, 1, 2, 3, 4, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table_auftragseintraege->attach(*label29, 1, 2, 2, 3, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table_auftragseintraege->attach(*table_vorraetige_menge, 4, 6, 2, 4, Gtk::FILL, Gtk::FILL, 0, 0);
   table_auftragseintraege->attach(*label73, 3, 4, 2, 3, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table_auftragseintraege->attach(*mengeeinheit, 3, 4, 3, 4, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table_auftragseintraege->attach(*aufentry_abbruch, 7, 8, 2, 3, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table_auftragseintraege->attach(*aufentry_ok, 7, 8, 3, 4, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table_auftragseintraege->attach(*frame57, 7, 8, 1, 2, Gtk::FILL, Gtk::FILL, 0, 0);
   table_auftragseintraege->attach(*hseparator2, 0, 9, 4, 5, Gtk::FILL, Gtk::FILL, 0, 2);
   table_auftragseintraege->attach(*WPreis, 0, 1, 2, 4, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, Gtk::FILL, 0, 0);
   table_auftragseintraege->attach(*liefdatum_datewin, 6, 7, 2, 4, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table_auftragseintraege->attach(*artikelbox, 0, 7, 1, 2, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, Gtk::FILL, 0, 5);
   table_auftragseintraege->attach(*table_preislisten, 0, 7, 0, 1, Gtk::SHRINK|Gtk::FILL, Gtk::EXPAND|Gtk::SHRINK|Gtk::FILL, 0, 0);
   label125->set_alignment(0.5,0.5);
   label125->set_padding(0,0);
   label125->set_justify(Gtk::JUSTIFY_LEFT);
   label125->set_line_wrap(false);
   label125->set_use_markup(false);
   label125->set_selectable(false);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   frame3->set_expanded(true);
   frame3->set_spacing(0);
#endif //
   frame3->add(*table_auftragseintraege);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   frame3->set_label_widget(*label125);
#endif //
   scrolledwindow_auftraege->set_shadow_type(Gtk::SHADOW_IN);
   scrolledwindow_auftraege->set_policy(Gtk::POLICY_AUTOMATIC, Gtk::POLICY_AUTOMATIC);
   scrolledwindow_auftraege->property_window_placement().set_value(Gtk::CORNER_TOP_LEFT);
   scrolledwindow_auftraege->add(*auftrag_clist);
   notiz->set_flags(Gtk::CAN_FOCUS);
   notiz->set_editable(true);
   notiz->set_cursor_visible(true);
   notiz->set_pixels_above_lines(0);
   notiz->set_pixels_below_lines(0);
   notiz->set_pixels_inside_wrap(0);
   notiz->set_left_margin(0);
   notiz->set_right_margin(0);
   notiz->set_indent(0);
   notiz->set_wrap_mode(Gtk::WRAP_WORD);
   notiz->set_justification(Gtk::JUSTIFY_LEFT);
   scrolledwindow12->set_shadow_type(Gtk::SHADOW_IN);
   scrolledwindow12->set_policy(Gtk::POLICY_NEVER, Gtk::POLICY_ALWAYS);
   scrolledwindow12->property_window_placement().set_value(Gtk::CORNER_TOP_LEFT);
   scrolledwindow12->add(*notiz);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   notiz_save->set_sensitive(false);
   notiz_save->set_visible_horizontal(true);
   notiz_save->set_visible_vertical(true);
   notiz_save->set_is_important(false);
   notiz_save->set_homogeneous(true);
   notiz_save->set_expand(false);
#endif //
   notiz_save_img->show();
   toolbar13->set_tooltips(true);
   toolbar13->set_toolbar_style(Gtk::TOOLBAR_BOTH);
   toolbar13->set_orientation(Gtk::ORIENTATION_HORIZONTAL);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolbar13->set_show_arrow(false);
#endif //
   hbox15->pack_start(*scrolledwindow12);
   hbox15->pack_start(*toolbar13, Gtk::PACK_SHRINK, 0);
   label127->set_alignment(0.5,0.5);
   label127->set_padding(0,0);
   label127->set_justify(Gtk::JUSTIFY_LEFT);
   label127->set_line_wrap(false);
   label127->set_use_markup(false);
   label127->set_selectable(false);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   frame_notiz->set_expanded(false);
   frame_notiz->set_spacing(0);
#endif //
   frame_notiz->add(*hbox15);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   frame_notiz->set_label_widget(*label127);
#endif //
   notiz_paned->pack1(*scrolledwindow_auftraege, Gtk::EXPAND|Gtk::SHRINK);
   notiz_paned->pack2(*frame_notiz, Gtk::SHRINK);
   aufeintrag_box->pack_start(*frame3, Gtk::PACK_SHRINK, 0);
   aufeintrag_box->pack_start(*notiz_paned);
   vbox4->pack_start(*menubar1, Gtk::PACK_SHRINK, 0);
   vbox4->pack_start(*toolbar2, Gtk::PACK_SHRINK, 0);
   vbox4->pack_start(*frame2, Gtk::PACK_SHRINK, 0);
   vbox4->pack_start(*aufeintrag_box);
   auftrag_bearbeiten->set_title(_("Auftragserfassung"));
   auftrag_bearbeiten->set_default_size(800,600);
   auftrag_bearbeiten->set_modal(false);
   auftrag_bearbeiten->property_window_position().set_value(Gtk::WIN_POS_NONE);
   auftrag_bearbeiten->set_resizable(true);
   auftrag_bearbeiten->property_destroy_with_parent().set_value(false);
   
   Glib::RefPtr<Gdk::PixbufLoader> _auftrag_bearbeiten_loader=Gdk::PixbufLoader::create();
   _auftrag_bearbeiten_loader->write(stock_book_red_png_data, sizeof stock_book_red_png_data);
   _auftrag_bearbeiten_loader->close();
   auftrag_bearbeiten->set_icon(_auftrag_bearbeiten_loader->get_pixbuf());
   _auftrag_bearbeiten_loader=Glib::RefPtr<Gdk::PixbufLoader>();
   auftrag_bearbeiten->add(*vbox4);
   schlie__en1->show();
   datei1_menu->show();
   datei1->show();
   neu1->show();
   convertwidget11->show();
   allesleeren1->show();
   masseneingabe1->show();
   kombinierte_artikel->show();
   convertwidget12->show();
   kopieren1->show();
   trennlinie12->show();
   convertwidget13->show();
   provisionierung->show();
   auftrag_menu->show();
   auftrag->show();
   convertwidget14->show();
   splitten1->show();
   auftragseintr__ge1_menu->show();
   auftragseintr__ge1->show();
   ean_etiketten_zum_auftrag1->show();
   extras1_menu->show();
   extras1->show();
   menubar1->show();
   backtomain_button->show();
   newauftrag_button->show();
   button8->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   separatortoolitem5->show();
#endif //
   button_preview->show();
   button_drucken->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
   toolitem1->show();
#endif //
   rueckstand->show();
   toolbar2->show();
   toolbar4->show();
   label32->show();
   label34->show();
   label37->show();
   auftrag_ok->show();
   auftrag_abbruch->show();
   bea_WWaehrung->show();
   zahlziel_datewin->show();
   label99->show();
   aufrabatt_spinbutton->show();
   label109->show();
   label90->show();
   label30->show();
   label26->show();
   label27->show();
   label28->show();
   label31->show();
   hseparator1->show();
   kundenbox->show();
   aufbemerkung_entry->show();
   youraufnr_scombo->show();
   aufnr_scombo->show();
   WAufStat->show();
   aufdatum_datewin->show();
   auftrag_label->show();
   auftragswert->show();
   zahlart->show();
   table5->show();
   label124->show();
   frame2->show();
   label25->show();
   stkmtr_spinbutton->show();
   WAufEntryStat->show();
   rabattentry_spinbutton->show();
   label67->show();
   label29->show();
   lager_bestand->show();
   button31->show();
   lagerbest_label->show();
   button33->show();
   bestellt_label->show();
   verfuegbar_label->show();
   lieferant_offen->show();
   offen_bei_lieferant->show();
   label73->show();
   mengeeinheit->show();
   aufentry_abbruch->show();
   aufentry_ok->show();
   bestellplan->show();
   label126->show();
   frame57->show();
   hseparator2->show();
   WPreis->show();
   liefdatum_datewin->show();
   artikelbox->show();
   label91->show();
   preisautomatik->show();
   preislisten->show();
   table_preislisten->show();
   table_auftragseintraege->show();
   label125->show();
   frame3->show();
   auftrag_clist->show();
   scrolledwindow_auftraege->show();
   notiz->show();
   scrolledwindow12->show();
   notiz_save->show();
   toolbar13->show();
   hbox15->show();
   label127->show();
   frame_notiz->show();
   notiz_paned->show();
   aufeintrag_box->show();
   vbox4->show();
   auftrag_bearbeiten->show();
   schlie__en1->signal_activate().connect(SigC::slot(*this, &auftrag_bearbeiten_glade::on_backtomain_button_clicked), false);
   neu1->signal_activate().connect(SigC::slot(*this, &auftrag_bearbeiten_glade::on_newauftrag_button_clicked), false);
   allesleeren1->signal_activate().connect(SigC::slot(*this, &auftrag_bearbeiten_glade::on_clear_all), false);
   kopieren1->signal_activate().connect(SigC::slot(*this, &auftrag_bearbeiten_glade::on_auftrag_kopieren_activate), false);
   provisionierung->signal_activate().connect(SigC::slot(*this, &auftrag_bearbeiten_glade::on_provisionierung_activate), false);
   splitten1->signal_activate().connect(SigC::slot(*this, &auftrag_bearbeiten_glade::on_splitten), false);
   ean_etiketten_zum_auftrag1->signal_activate().connect(SigC::slot(*this, &auftrag_bearbeiten_glade::on_ean_etiketten_activate), false);
   backtomain_button->signal_clicked().connect(SigC::slot(*this, &auftrag_bearbeiten_glade::on_backtomain_button_clicked), false);
   newauftrag_button->signal_clicked().connect(SigC::slot(*this, &auftrag_bearbeiten_glade::on_newauftrag_button_clicked), false);
   button8->signal_clicked().connect(SigC::slot(*this, &auftrag_bearbeiten_glade::on_clear_all), false);
   button_preview->signal_clicked().connect(SigC::slot(*this, &auftrag_bearbeiten_glade::on_button_preview_clicked), false);
   button_drucken->signal_clicked().connect(SigC::slot(*this, &auftrag_bearbeiten_glade::on_button_drucken_clicked), false);
   checkbutton_ean_drucken->signal_clicked().connect(SigC::slot(*this, &auftrag_bearbeiten_glade::on_checkbutton_ean_drucken_clicked), true);
   rueckstand->signal_clicked().connect(SigC::slot(*this, &auftrag_bearbeiten_glade::on_rueckstand_clicked), false);
   auftrag_ok->signal_clicked().connect(SigC::slot(*this, &auftrag_bearbeiten_glade::on_auftrag_ok_clicked), false);
   auftrag_abbruch->signal_clicked().connect(SigC::slot(*this, &auftrag_bearbeiten_glade::on_auftrag_abbruch_clicked), false);
   bea_WWaehrung->signal_activate().connect(SigC::slot(*this, &auftrag_bearbeiten_glade::waehrung_geaendert));
   zahlziel_datewin->signal_activate().connect(SigC::slot(*this, &auftrag_bearbeiten_glade::on_zahlziel_activate));
   aufrabatt_spinbutton->signal_focus_out_event().connect(SigC::slot(*this, &auftrag_bearbeiten_glade::on_aufrabatt_spinbutton_focus_out_event), false);
   aufrabatt_spinbutton->signal_activate().connect(SigC::slot(*this, &auftrag_bearbeiten_glade::on_aufrabatt_spinbutton_activate), true);
   kundenbox->signal_activate().connect(SigC::slot(*this, &auftrag_bearbeiten_glade::on_kunden_activate));
   aufbemerkung_entry->signal_activate().connect(SigC::slot(*this, &auftrag_bearbeiten_glade::on_aufbemerkung_activate), false);
   youraufnr_scombo->signal_activate().connect(SigC::slot(*this, &auftrag_bearbeiten_glade::on_youraufnrscombo_activate));
   youraufnr_scombo->signal_search().connect(SigC::slot(*this, &auftrag_bearbeiten_glade::on_youraufnrscombo_search), false);
   aufnr_scombo->signal_activate().connect(SigC::slot(*this, &auftrag_bearbeiten_glade::on_aufnrscombo_activate));
   aufnr_scombo->signal_search().connect(SigC::slot(*this, &auftrag_bearbeiten_glade::on_aufnrscombo_search), false);
   WAufStat->signal_activate().connect(SigC::slot(*this, &auftrag_bearbeiten_glade::auftragstatus_geaendert));
   aufdatum_datewin->signal_activate().connect(SigC::slot(*this, &auftrag_bearbeiten_glade::on_datum_activate));
   auftrag_label->signal_activate().connect(SigC::slot(*this, &auftrag_bearbeiten_glade::auftraglabel_geaendert));
   zahlart->signal_activate().connect(SigC::slot(*this, &auftrag_bearbeiten_glade::on_zahlart_activate));
   stkmtr_spinbutton->signal_activate().connect(SigC::slot(*this, &auftrag_bearbeiten_glade::on_stkmtr_spinbutton_activate), true);
   WAufEntryStat->signal_activate().connect(SigC::slot(*this, &auftrag_bearbeiten_glade::on_aufentrystat_optionmenu_clicked));
   rabattentry_spinbutton->signal_activate().connect(SigC::slot(*this, &auftrag_bearbeiten_glade::on_rabattentry_spinbutton_activate), true);
   offen_bei_lieferant->signal_clicked().connect(SigC::slot(*this, &auftrag_bearbeiten_glade::on_offen_bei_lieferant_clicked), false);
   aufentry_abbruch->signal_clicked().connect(SigC::slot(*this, &auftrag_bearbeiten_glade::on_aufentry_abbruch_clicked), false);
   aufentry_ok->signal_clicked().connect(SigC::slot(*this, &auftrag_bearbeiten_glade::on_aufentry_ok_clicked), false);
   bestellplan->signal_clicked().connect(SigC::slot(*this, &auftrag_bearbeiten_glade::on_bestellplan_clicked), false);
   WPreis->signal_activate().connect(SigC::slot(*this, &auftrag_bearbeiten_glade::on_activate_wpreis));
   WPreis->signal_preis_changed().connect(SigC::slot(*this, &auftrag_bearbeiten_glade::on_preis_changed));
   liefdatum_datewin->signal_activate().connect(SigC::slot(*this, &auftrag_bearbeiten_glade::on_lieferdatum_activate));
   artikelbox->signal_activate().connect(SigC::slot(*this, &auftrag_bearbeiten_glade::onSelArtikel));
   preisautomatik->signal_clicked().connect(SigC::slot(*this, &auftrag_bearbeiten_glade::on_preisautomatik_clicked), false);
   preislisten->signal_reset_signal().connect(SigC::slot(*this, &auftrag_bearbeiten_glade::preisliste_reset));
   preislisten->signal_activate().connect(SigC::slot(*this, &auftrag_bearbeiten_glade::on_auftrag_preislisten_activate));
   auftrag_clist->signal_leaf_selected().connect(SigC::slot(*this, &auftrag_bearbeiten_glade::on_leaf_selected));
   auftrag_clist->signal_leaf_unselected().connect(SigC::slot(*this, &auftrag_bearbeiten_glade::on_unselect));
   notiz->get_buffer()->signal_changed().connect(SigC::slot(*this, &auftrag_bearbeiten_glade::on_notiz_changed), false);
   notiz_save->signal_clicked().connect(SigC::slot(*this, &auftrag_bearbeiten_glade::on_notiz_save_clicked), false);
}

auftrag_bearbeiten_glade::~auftrag_bearbeiten_glade()
{  delete bea_WWaehrung;
   delete zahlziel_datewin;
   delete kundenbox;
   delete youraufnr_scombo;
   delete aufnr_scombo;
   delete WAufStat;
   delete aufdatum_datewin;
   delete auftrag_label;
   delete zahlart;
   delete WAufEntryStat;
   delete WPreis;
   delete liefdatum_datewin;
   delete artikelbox;
   delete preislisten;
   delete auftrag_clist;
   delete gmm_data;
}
