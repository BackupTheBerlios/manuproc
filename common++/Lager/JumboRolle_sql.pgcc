#include"JumboRolle.h"
#include"Kunde/Kunde.h"
#include <Aux/Transaction.h>
#include <Aux/string0.h>

exec sql include sqlca;

JumboRolle::JumboRolle(int c) throw(SQLerror,CodeError)
 : code(c)
{
 if(!isRollNrOK(c)) throw CodeError(c,"JumboRolle::JumboRolle");

 exec sql begin declare section;
 int CODE=c/10;
 int ARTIKELID;
 int MASCHINE,WEBMASCHINE,SOLL_METER;
 int STATUS,LAUF,GANG,BARCOIST;
 char PLANDATUM[11];
 int LAGERPLATZ;
 char VERARB_DATUM[30];
 char BARCOFERT_DATUM[30];
 char WIEDERINSLAGER[30];
 bool REST;
 exec sql end declare section;

 exec sql select coalesce(artikelid,0),maschine,coalesce(webmaschine,0)
      ,coalesce(soll_meter,0),
 		plan_datum,coalesce(text(verarb_datum),''),status,lauf,gang,
 		coalesce(barcoist,0),coalesce(text(barcofert_datum),''),
      coalesce(text(wiederinslager),''),coalesce(lagerplatz,0)
 	into :ARTIKELID, :MASCHINE,:WEBMASCHINE,
 	:SOLL_METER,:PLANDATUM,	:VERARB_DATUM,:STATUS,
 	:LAUF,:GANG,:BARCOIST,:BARCOFERT_DATUM,:WIEDERINSLAGER,:LAGERPLATZ
 	from rohjumbo where code= :CODE;
 if(sqlca.sqlcode==100) 
 {  exec sql select coalesce(artikelid,0),maschine,coalesce(webmaschine,0),
      coalesce(soll_meter,0),
 		plan_datum,coalesce(text(verarb_datum),''),status,lauf,gang,
 		coalesce(barcoist,0),coalesce(text(barcofert_datum),''),
      coalesce(text(wiederinslager),'')
 	into :ARTIKELID,:MASCHINE,:WEBMASCHINE,
 	:SOLL_METER,:PLANDATUM,:VERARB_DATUM,:STATUS,
 	:LAUF,:GANG,:BARCOIST,:BARCOFERT_DATUM,:WIEDERINSLAGER
 	from rohjumbo_archiv where code= :CODE;
 }
 SQLerror::test("DB-error: JumboRolle: fetch from rohjumbo");	
 
 artikel=ARTIKELID;
 maschine=MASCHINE;
 webmaschine=WEBMASCHINE;
 sollmeter=SOLL_METER;
 plandatum=Petig::Datum(PLANDATUM);
 verarbdatum= !*VERARB_DATUM ? Petig::Datum() : Petig::Datum(VERARB_DATUM); 
 status=Jumbo_Status(STATUS);
 lauf=LAUF;
 gang=GANG;
 barcoist= BARCOIST;
 barcofertdatum= !*BARCOFERT_DATUM ? Petig::Datum(): Petig::Datum(BARCOFERT_DATUM);
 wiederinslager= !*WIEDERINSLAGER ? Petig::Datum():Petig::Datum(WIEDERINSLAGER);
 lagerposition=LagerPlatz(ppsInstanz::Bandlager,LAGERPLATZ);
}

